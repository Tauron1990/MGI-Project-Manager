	<ResourceDictionary  
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  xmlns:shared_converters="clr-namespace:Syncfusion.Windows.Converters;assembly=Syncfusion.SfShared.Wpf"
		xmlns:radialmenu="clr-namespace:Syncfusion.Windows.Controls.Navigation;assembly=Syncfusion.SfRadialMenu.Wpf">
	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


		
		<shared_converters:BooleanToVisibilityConverter x:Key="VisibilityConverter"/>

		<radialmenu:IconConverter x:Key="IconConverter"/>
		<radialmenu:MenuItemIconConverter x:Key="MenuItemIconConverter"/>

		<radialmenu:StrokeThicknessToMarginConverter x:Key="StrokeThicknessToMarginConverter"/>

		<shared_converters:RadiusToWidthConverter x:Key="RadiusConverter"/>

		<shared_converters:RadialDoubleToThicknessConverter x:Key="RadialMarginConverter"/>

		<shared_converters:DoubleToThicknessConverter x:Key="MarginConverter"/>

		<shared_converters:PopupPositioner x:Key="PopupPositioner"/>

		<shared_converters:BrushModifier x:Key="BrushModifier"/>

		<shared_converters:ColorToBrushConverter x:Key="ColorToBrushConverter"></shared_converters:ColorToBrushConverter>

		<shared_converters:InvertRadialDoubleToThicknessConverter x:Key="InvertMarginConverter"/>

		<Style TargetType="radialmenu:SfRadialColorItem" >
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:SfRadialColorItem">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_OuterRim">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_OuterRim" Stroke="{Binding Color,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource ColorToBrushConverter}}"
								  StrokeThickness="{Binding StrokeThickness, RelativeSource={RelativeSource TemplatedParent}}">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False"  
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding Point, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="OuterRimStyle">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid>
							 <VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_OuterRim">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_OuterRim" Stroke="{Binding AccentBrush, Converter={StaticResource BrushModifier}, ConverterParameter=0.5}"
								  StrokeThickness="{Binding StrokeThickness, RelativeSource={RelativeSource TemplatedParent}}">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False"  
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding Point, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="PointerOverRimStyle">
			<Setter Property="IsCheckable" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">

										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_PointerOverRim">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>

									</VisualState>

									<VisualState x:Name="Checked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_PointerOverRim">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>

									<VisualState x:Name="UnChecked">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_PointerOverRim">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>

							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_PointerOverRim" 
								  Stroke="{Binding Path=RimBackground,RelativeSource={RelativeSource TemplatedParent}}"
								  StrokeThickness="2" Opacity="1" Visibility="Collapsed">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False" 
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding RimPoint, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="SliceRimStyle">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid Width="{Binding ElementName=PART_BackRim, Path=ActualWidth}" Height="{Binding ElementName=PART_BackRim,Path=ActualHeight}"
							Margin="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter},ConverterParameter=0}" 
							>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_BackRim">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_BackRim" 
								  Stroke="{Binding MenuMouseOverBackgroundColor,RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed"
								  StrokeThickness="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent}}">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False" 
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding RimPoint, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>                    
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="DefaultRimStyle">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid Width="{Binding ElementName=PART_BackRim, Path=ActualWidth}" Height="{Binding ElementName=PART_BackRim,Path=ActualHeight}"
							Margin="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter},ConverterParameter=0}" 
							>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_BackRim" 
								  Stroke="{Binding MenuBackgroundColor,RelativeSource={RelativeSource TemplatedParent}}" Visibility="Visible"
								  StrokeThickness="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent}}">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False" 
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding RimPoint, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="ExpanderRimStyle">

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid Width="{Binding ElementName=PART_rim, Path=ActualWidth}" Height="{Binding ElementName=PART_rim,Path=ActualHeight}"
							Margin="0,0,-19,-19"
							>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_rim">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path x:Name="PART_rim" 
								  Stroke="{Binding RimActiveBrush, RelativeSource={RelativeSource TemplatedParent}}"
								  StrokeThickness="{Binding StrokeThickness, RelativeSource={RelativeSource TemplatedParent}}"
								  Visibility="{Binding Path=HasItems, Converter={StaticResource VisibilityConverter}}">
								<Path.Data>
									<PathGeometry>
										<PathFigure IsFilled="False" IsClosed="False" 
													StartPoint="{Binding StartPoint, RelativeSource={RelativeSource TemplatedParent}}">
											<ArcSegment Point="{Binding RimPoint, RelativeSource={RelativeSource TemplatedParent}}" 
													Size="{Binding RimSize, RelativeSource={RelativeSource TemplatedParent}}"
													RotationAngle="0" SweepDirection="Clockwise"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsColorItem" Value="True"/>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Opacity" TargetName="PART_rim" Value="0.8"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsColorItem" Value="False"/>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="PART_rim" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RimHoverBrush}"></Setter>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRimItem" x:Key="ExpanderRimArrowStyle">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRimItem">
						<Grid IsHitTestVisible="False">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Arrow">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
                            </VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Path Data="M640,160 L640,200 L650,180 z" HorizontalAlignment="Center" 
								  Height="12" x:Name="PART_Arrow"
								  Margin="-5" Stretch="Fill" RenderTransformOrigin="0.5, 0.5"
								  VerticalAlignment="Center" Width="7" Fill="{StaticResource ActiveGlyphBrush}"
								  Visibility="{Binding Path=HasItems, Converter={StaticResource VisibilityConverter},Mode=TwoWay}">
								<Path.RenderTransform>
									<RotateTransform 
														Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}"
														/>
								</Path.RenderTransform>
							</Path>
						</Grid>
                </ControlTemplate>
            </Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:OuterRim">
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<radialmenu:OuterRimPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:OuterRim">
						<ItemsPresenter></ItemsPresenter>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:SfRadialMenuItem">
			<Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
			<Setter Property="MenuBackgroundColor" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="MenuMouseOverBackgroundColor" Value="{StaticResource HeaderBackgroundBrush}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:SfRadialMenuItem">
						<Grid Background="{TemplateBinding Background}" >
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_MenuItem">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid Background="Transparent" >
								<Border Padding="5">
									<Grid >

										<ContentPresenter VerticalAlignment="Top" Margin="0 -10 0 0"  Content="{Binding  Converter={StaticResource MenuItemIconConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
										<ContentPresenter Content="{TemplateBinding Header}" 
											  Grid.Row="1"                                  
											  Name="PART_MenuItem"
											  ContentTemplate="{TemplateBinding HeaderTemplate}"
											  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
											  />
									</Grid>
								</Border>
							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="NavigationButtonStyle" TargetType="Button">
			<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
			<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Background="Transparent" Margin="-5">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">

										<Storyboard>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundEllipse">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HoverBackgroundBrush}"/>
											</ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

									</VisualState>
                                <VisualState x:Name="Pressed">

                                    <Storyboard>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BackgroundEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ActiveBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Ellipse Fill="White" x:Name="BackgroundEllipse" />
                        <Ellipse Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" x:Name="arrow" Fill="Transparent"/>
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:SfRadialMenu">
			<Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
			<Setter Property="RimBackground" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="NavigationButtonStyle" Value="{StaticResource NavigationButtonStyle}"/>
			<Setter Property="RimActiveBrush" Value="{StaticResource ActiveBackgroundBrush}"/>
			<Setter Property="RimHoverBrush" Value="{StaticResource HoverBackgroundBrush}"/>
			<Setter Property="MouseOverRimStyle" Value="{StaticResource SliceRimStyle}"/>
			<Setter Property="RadiusX" Value="130"/>
			<Setter Property="RadiusY" Value="130"/>
			<Setter Property="Padding" Value="5"/>
			<!--<Setter Property="ManipulationMode" Value="All"/>-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:SfRadialMenu">
						<Grid Background="Transparent">

							<Grid Width="{Binding Path=RadiusX, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RadiusConverter}}"
									  Height="{Binding Path=RadiusY, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RadiusConverter}}"
									  HorizontalAlignment="Center" VerticalAlignment="Center">

								<Popup x:Name="PART_ToolTipPopup" >
									<Border MinWidth="70" MinHeight="35" 
											BorderThickness="2" 
											BorderBrush="{StaticResource ContentBorderBrush}"
											Background="{StaticResource ContentBackgroundBrush}"
											>
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<ContentPresenter  x:Name="PART_ToolTipContent"/>
										</Grid>
									</Border>
								</Popup>

								<Grid x:Name="PART_Root">

									<Grid x:Name="PART_Rim"
										  Visibility="Collapsed" Background="Transparent">

										<Ellipse Fill="{StaticResource GlyphBrush}"
												 
												 />

										<Ellipse Fill="{Binding RimBackground, 
												 RelativeSource={RelativeSource TemplatedParent}}"                                                                                          
												 />

										<radialmenu:OuterRim ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemContainerStyle="{StaticResource ExpanderRimStyle}" 
											x:Name="PART_ExpanderRim" Margin="{Binding Path=StrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter}}"
										   />

										<radialmenu:OuterRim ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemContainerStyle="{StaticResource ExpanderRimArrowStyle}" x:Name="PART_ExpanderArrowRim" 
											Margin="{Binding Path=StrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter}}"
											>
											<radialmenu:OuterRim.ItemsPanel>
												<ItemsPanelTemplate>
													<radialmenu:CircularPanel Margin="-4" />
												</ItemsPanelTemplate>
											</radialmenu:OuterRim.ItemsPanel>
										</radialmenu:OuterRim>
									</Grid>

									<Grid x:Name="PART_Items" Background="{x:Null}"
										  Visibility="Collapsed">

										<Ellipse Fill="{Binding Background, 
												 RelativeSource={RelativeSource TemplatedParent}}"/>

										<radialmenu:OuterRim 
											ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemContainerStyle="{StaticResource DefaultRimStyle}"
											x:Name="PART_DefaultRim" Margin="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter}}"
													/>

										<radialmenu:OuterRim 
											ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemContainerStyle="{Binding MouseOverRimStyle,RelativeSource={RelativeSource TemplatedParent}}"
											x:Name="PART_SliceRim" Margin="{Binding MouseOverRimStrokeThickness,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource StrokeThicknessToMarginConverter}}"
													/>
										<radialmenu:OuterRim 
											ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemContainerStyle="{StaticResource PointerOverRimStyle}"
											x:Name="PART_SelectionRim"
													 Margin="5"/>

										<Grid Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}">

											<radialmenu:InnerRim 
											ItemsPanel="{TemplateBinding ItemsPanel}" ItemTemplate="{TemplateBinding ItemTemplate}"
											ItemContainerStyle="{TemplateBinding ItemContainerStyle}" Visibility="Collapsed"
											x:Name="PART_InnerColorItemRim" 
											/>

											<radialmenu:InnerRim ItemsSource="{Binding DrillDownItem.Items, RelativeSource={RelativeSource TemplatedParent}}"
											ItemsPanel="{TemplateBinding ItemsPanel}" ItemTemplate="{TemplateBinding ItemTemplate}"
											ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
											x:Name="PART_InnerRim" 
											/>
										</Grid>
									</Grid>

								</Grid>

								<Button HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PART_NavigationButton"
									 Width="1" Height="1" Style="{TemplateBinding NavigationButtonStyle}" 
									Content="{Binding DrillDownItem, Converter={StaticResource IconConverter}, RelativeSource={RelativeSource TemplatedParent}}"
									/>

							</Grid>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate >
						<radialmenu:CircularPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!-- Radial Slider -->

		<Style TargetType="radialmenu:RadialList" x:Key="RadialTicksListStyle" >
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<radialmenu:RadialPanel />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:RadialList" x:Key="RadialLabelListStyle" >
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<radialmenu:RadialPanel RotateItems="False" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:RadialLabel">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:RadialLabel">
						<ContentPresenter/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:RadialPointer" x:Key="RadialPointerStyle">
			<Setter Property="Height" Value="2"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:RadialPointer">
                    <Border  Background="{StaticResource GlyphBrush}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:RadialPreviewPointer" x:Key="RadialPreviewPointerStyle">
			<Setter Property="Opacity" Value="0.3"/>
			<Setter Property="Height" Value="2"/>
			<Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"></Setter>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:RadialPreviewPointer">
						<Border Background="{TemplateBinding Background}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="TickTemplate">
			<Border Background="{StaticResource TickColor}"/>
		</DataTemplate>

		<DataTemplate x:Key="LabelTemplate">
			<TextBlock Text="{Binding}" TextTrimming="WordEllipsis" Width="35" Foreground="{StaticResource ContentForegroundBrush}"  TextAlignment="Center"/>
		</DataTemplate>

		<Style TargetType="radialmenu:RadialTick">
			<Setter Property="Width" Value="5"/>
			<Setter Property="Height" Value="1"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:RadialTick">
						<ContentPresenter />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="radialmenu:SfRadialSlider">
			<Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
            <Setter Property="OuterRimStroke" Value="{DynamicResource BorderBrush}"/>
			<Setter Property="InnerRimStroke" Value="{DynamicResource BorderBrush}"/>
			<Setter Property="InnerRimFill" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="TickTemplate" Value="{StaticResource TickTemplate}"/>
			<Setter Property="LabelTemplate" Value="{StaticResource LabelTemplate}"/>
			<Setter Property="Width" Value="250"></Setter>
			<Setter Property="Height" Value="250"></Setter>
			<Setter Property="Minimum" Value="0"></Setter>
			<Setter Property="Maximum" Value="100"></Setter>
			<Setter Property="TickFrequency" Value="10"></Setter>
			<Setter Property="PointerStyle" Value="{StaticResource RadialPointerStyle}"/>
			<Setter Property="PreviewPointerStyle" Value="{StaticResource RadialPreviewPointerStyle}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="radialmenu:SfRadialSlider">
						<Grid Background="Transparent"  x:Name="PART_Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Ticks">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Labels">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_OuterEllipse">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_InnerEllipse">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Pointer">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content">
												<DiscreteDoubleKeyFrame Value="0.3" KeyTime="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Ellipse x:Name="PART_OuterEllipse"
										 Stroke="{TemplateBinding OuterRimStroke}" 
										 Fill="{TemplateBinding Background}"
										 StrokeThickness="{TemplateBinding OuterRimStrokeThickness}"
										 HorizontalAlignment="Center" 
										 VerticalAlignment="Center"                                     
										/>
							<radialmenu:RadialList Visibility="{TemplateBinding TickVisibility}"  
												  x:Name="PART_TicksRunTime" 
												  Style="{StaticResource RadialTicksListStyle}" 
												  ListHost="{Binding RelativeSource={RelativeSource TemplatedParent}}"
												  />
							<radialmenu:RadialList Visibility="{TemplateBinding LabelVisibility}" 
												  x:Name="PART_LabelsRunTime" 
												  Style="{StaticResource RadialLabelListStyle}" 
												  ListHost="{Binding RelativeSource={RelativeSource TemplatedParent}}"
												  />

							<radialmenu:RadialList Visibility="{TemplateBinding TickVisibility}" 
												  x:Name="PART_Ticks" 
												  Style="{StaticResource RadialTicksListStyle}" 
												  ListHost="{Binding RelativeSource={RelativeSource TemplatedParent}}"
												  />
							<radialmenu:RadialList Visibility="{TemplateBinding LabelVisibility}" 
												  x:Name="PART_Labels" 
												  Style="{StaticResource RadialLabelListStyle}" 
												  ListHost="{Binding RelativeSource={RelativeSource TemplatedParent}}"
												  />

							<radialmenu:RadialPointer Style="{TemplateBinding PointerStyle}"  x:Name="PART_Pointer" />
							<radialmenu:RadialPreviewPointer Style="{TemplateBinding PreviewPointerStyle}"  x:Name="PART_PreviewPointer"  Visibility="Collapsed"/>

							<Ellipse   x:Name="PART_InnerEllipse"  
									Stroke="{TemplateBinding InnerRimStroke}" 
									Fill="{TemplateBinding InnerRimFill}" 
									HorizontalAlignment="Center" 
									VerticalAlignment="Center"                               
									StrokeThickness="{TemplateBinding InnerRimStrokeThickness}" />
							<Border Padding="5" x:Name="PART_ContentBorder">
								<ContentPresenter Content="{TemplateBinding Content}" 
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  HorizontalAlignment="Center" VerticalAlignment="Center"  x:Name="PART_Content"/>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

		</Style>


	</ResourceDictionary>
