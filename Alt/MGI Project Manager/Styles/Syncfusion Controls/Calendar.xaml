<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			xmlns:tools_shared="clr-namespace:Syncfusion.Windows.Tools;assembly=Syncfusion.Shared.WPF">
    
	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

	
    <FontFamily x:Key="Calendar_FontFamily">Segoe UI</FontFamily>

    <tools_shared:CultureToCalendarConverter x:Key="CultureToCalendarConverter" />
    <shared:BooleanToVisibilityConverterEx x:Key="Boolean_To_VisibilityConverter" />

    <sys:String x:Uid="system:String_4" x:Key="AccessTodayText">Today :</sys:String>

    <!--ControlTemplates-->
    <DataTemplate x:Key="DefaultTemplate" DataType="shared:DayCell">
        <TextBlock
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
			Text="{Binding Day, Mode=OneWay}" />
    </DataTemplate>

    <!--DayNameCellDefault-->
    <ControlTemplate x:Key="DayNameCellDefault" TargetType="{x:Type shared:DayNameCell}">
        <Border x:Name="Border" TextBlock.Foreground="{StaticResource ActiveForegroundBrush}"
			TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            Margin="1 0 1 0"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding Border.BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>

    <!--WeekNumberCellDefault-->
    <ControlTemplate x:Key="WeekNumberCellDefault" TargetType="{x:Type shared:WeekNumberCell}">
        <Border x:Name="Border" TextBlock.Foreground="{Binding Path=WeekNumberForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
		    Background="{Binding Path=WeekNumberBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
			CornerRadius="{Binding Path=WeekNumberCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                Focusable="True"
                BorderBrush="{Binding Path=WeekNumberBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
		    BorderThickness="{Binding Path=WeekNumberBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}">
            <ContentPresenter ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
 />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberSelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberSelectionBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberSelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />

                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=WeekNumberSelectionBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Path=WeekNumberSelectionBorderCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--WeekNumberCellPanelDefault-->
    <ControlTemplate x:Key="WeekNumberCellPanelDefault" TargetType="{x:Type shared:WeekNumberCellPanel}">
        <Border x:Name="Border" TextBlock.Foreground="{Binding Path=WeekNumberForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    Background="{Binding Path=WeekNumberBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    CornerRadius="{Binding Path=WeekNumberCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    Focusable="True"
                    BorderBrush="{Binding Path=WeekNumberBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
                    BorderThickness="{Binding Path=WeekNumberBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}">

            <ContentPresenter  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
>
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=WeekNumberSelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=WeekNumberSelectionBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=WeekNumberSelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />

                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=WeekNumberSelectionBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                <Setter TargetName="Border" Property="CornerRadius" Value="{Binding Path=WeekNumberSelectionBorderCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--DayCellDefault-->
    <Style  TargetType="{x:Type shared:DayCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:DayCell}">
                    <shared:DayCellPanel>
                        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
>
                            <Grid>
                                <TextBlock x:Name="BlockoutDate" Opacity="0.5" Text="r" FontFamily="Webdings" Visibility="Collapsed" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Path=InValidDateCrossBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                                <ContentPresenter x:Name="DayContentPresenter"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                                </ContentPresenter>
                            </Grid>
                        </Border>

                        <!--<Path x:Name="BlockoutDate" Opacity="0.5" Margin="3" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Fill="{Binding Path=InValidDateCrossBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" Stretch="Fill" Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z" />-->
                        <Rectangle x:Name="Rectangle"
				Visibility="Collapsed"
				RadiusX="2"
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2" />
                    </shared:DayCellPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDate" Value="true">
                            <!--<Setter TargetName="Rectangle" Property="Visibility" Value="Visible" />-->
                        </Trigger>
                        <Trigger Property="IsDate" Value="false">
                            <!--<Setter TargetName="Rectangle" Property="Visibility" Value="Hidden" />-->
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.VisualStyle" Value="Default">
                            <Setter Property="TextBlock.FontWeight" TargetName="DayContentPresenter" Value="Bold" />
                        </Trigger>
                        <EventTrigger RoutedEvent="shared:DayCell.Highlight">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" AutoReverse="True" FillBehavior="Stop">
                                        <ThicknessAnimation To="0.5" Duration="0:0:0.75" AccelerationRatio="0.8" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>

                        <Trigger Property="IsCurrentMonth" Value="False">
                            <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{Binding Path=NotCurrentMonthForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </Trigger>


                        <Trigger Property="IsToday" Value="True">
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=TodayCellForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=TodayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=TodayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsToday" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsToday" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectedDayCellForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsToday" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter Property="Background" Value="{Binding Path=TodayCellSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground"  Value="{Binding Path=SelectedDayCellForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=TodayCellSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsInvalidDate" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=InValidDateBorderBrush, RelativeSource ={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=InValidDateBackground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=InValidDateForeGround, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1.5" />
                            <Setter TargetName="BlockoutDate" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsToday" Value="false" />
                                <Condition Property="IsMouseOver" Value="false" />
                                <Condition Property="IsInvalidDate" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter TargetName="Border" Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsToday" Value="false" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsToday" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsToday" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=TodayCellSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=TodayCellSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground"  Value="{Binding Path=SelectedDayCellForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MonthCellDefault-->
    <Style  TargetType="{x:Type shared:MonthCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:MonthCell}">
                    <shared:DayCellPanel>
                        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
>
                            <ContentPresenter x:Name="DayContentPresenter"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="Rectangle"
				Visibility="Collapsed"
				RadiusX="2"
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2" />
                    </shared:DayCellPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden" />
                        </Trigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                            <Setter Property="BorderBrush"  Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YearCellDefault-->
    <Style  TargetType="{x:Type shared:YearCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:YearCell}">
                    <shared:DayCellPanel>
                        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
>
                            <ContentPresenter x:Name="DayContentPresenter"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="Rectangle"
				Visibility="Collapsed"
				RadiusX="2"
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2" />
                    </shared:DayCellPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden" />
                        </Trigger>-->

                        <Trigger Property="IsBelongToCurrentRange" Value="False">
                            <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource ContentSelectionBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                            <Setter Property="BorderBrush"  Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YearRangeCellDefault-->
    <Style  TargetType="{x:Type shared:YearRangeCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:YearRangeCell}">
                    <shared:DayCellPanel>
                        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}"
			TextBlock.Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontFamily="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontSize="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontStyle="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
            TextBlock.FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
>
                            <ContentPresenter x:Name="DayContentPresenter"
					HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
					ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
					ContentTemplate="{TemplateBinding ContentTemplate}">
                            </ContentPresenter>
                        </Border>
                        <Rectangle x:Name="Rectangle"
				Visibility="Collapsed"
				RadiusX="2"
				RadiusY="2"
				Stroke="{Binding Path=SelectionBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}"
				StrokeThickness="1"
				StrokeDashArray="2,2"
				Margin="2" />
                    </shared:DayCellPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="Rectangle" Property="Visibility" Value="Hidden" />
                        </Trigger>-->

                        <Trigger Property="IsBelongToCurrentRange" Value="False">
                            <Setter TargetName="Border" Property="TextBlock.Foreground"	Value="{StaticResource ContentSelectionBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsMouseOver" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{Binding Path=SelectedDayCellBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=SelectionForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                            <Setter Property="BorderBrush"  Value="{Binding Path=SelectedDayCellBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{Binding Path=MouseOverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="Background" Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <Setter Property="BorderBrush" Value="{Binding Path=MouseOverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
                            <!--<Setter Property="BorderThickness" Value="1.5" />-->
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End ControlTemplates-->

    <!--DayNameCell-->
    <Style  TargetType="{x:Type shared:DayNameCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Control.Template" Value ="{StaticResource DayNameCellDefault}" />
    </Style>

    <!--DayNamesGrid-->
    <Style  TargetType="{x:Type shared:DayNamesGrid}">
        <Setter Property="Control.Focusable" Value="False" />
    </Style>

    <!--WeekNumberCell-->
    <Style  TargetType="{x:Type shared:WeekNumberCell}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="BorderThickness" Value="0,0,0.5,0" />
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="Control.Template" Value ="{StaticResource WeekNumberCellDefault}" />
        <Setter Property="Focusable" Value="True" />
    </Style>

    <!--WeekNumberGrid-->
    <Style  TargetType="{x:Type shared:WeekNumbersGrid}">
        <Setter Property="Control.Focusable" Value="True" />
    </Style>

    <!--DayGrid-->
    <Style  TargetType="{x:Type shared:DayGrid}">
        <Setter Property="Control.Focusable" Value="False" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
    </Style>

    <!--MonthGrid-->
    <Style  TargetType="{x:Type shared:MonthGrid}">
        <Setter Property="Control.Focusable" Value="False" />
    </Style>

    <!--YearGrid-->
    <Style  TargetType="{x:Type shared:YearGrid}">
        <Setter Property="Control.Focusable" Value="False" />
    </Style>

    <!--YearRangeGrid-->
    <Style  TargetType="{x:Type shared:YearRangeGrid}">
        <Setter Property="Control.Focusable" Value="False" />
    </Style>

    <Style x:Key="MetroListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource Calendar_FontFamily}" />
        <Setter Property="Padding" Value="3,2,2,1" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectionInActiveBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />
    <!--ControlTemplates-->

    <!--NavigateButtonBaseDefault-->
    <ControlTemplate x:Key="NavigateButtonBaseDefault" TargetType="{x:Type shared:NavigateButtonBase}">
        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding Border.BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="OfficeButtonNextDefault" TargetType="{x:Type shared:NavigateButton}">
        <shared:NavigateButtonBase x:Name="Button" Command="shared:CalendarEdit.NextCommand"
								  Background="Transparent" IsTabStop="False"
								  BorderThickness="0.5"
								  BorderBrush="Transparent"
								  CornerRadius="3">
            <Grid>

                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="19" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>-->
                <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     Stroke="{StaticResource BorderBrush}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource BackgroundBrush}" />
                <Path x:Name="path1" Data="M 1,1.5 L 4.5,5 L 8,1.5" Stroke="{StaticResource GlyphBrush}" HorizontalAlignment="Center" Stretch="fill"  Height="6" StrokeThickness="2" VerticalAlignment="Center" Width="9" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform Angle="-90" />
                    </Path.RenderTransform>
                </Path>

            </Grid>
        </shared:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource HoverBorderBrush}" />
                <Setter Property="Fill" TargetName="circle" Value="{StaticResource HoverBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="path1" Value="{StaticResource HoverGlyphBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="Button">
                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="Fill" TargetName="circle" Value="{StaticResource ActiveBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="path1" Value="{StaticResource ActiveGlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="path1" />
            </Trigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Width" TargetName="path1" Value="15" />
                <Setter Property="Height" TargetName="path1" Value="12" />
                <Setter Property="Height" TargetName="circle" Value="40" />
                <Setter Property="Width" TargetName="circle" Value="40" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ButtonPrevDefault-->
    <ControlTemplate x:Key="OfficeButtonPrevDefault" TargetType="{x:Type shared:NavigateButton}">
        <shared:NavigateButtonBase x:Name="Button" Command="shared:CalendarEdit.PrevCommand"
								  Background="Transparent" IsTabStop="False"
								  BorderThickness="0.5" Padding="2,1,2,1"
								  BorderBrush="Transparent"
							      CornerRadius="3">
            <Grid Cursor="Hand">

                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="19" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>-->
                <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     Stroke="{StaticResource BorderBrush}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource BackgroundBrush}" />
                <Path x:Name="path" Data="M 1,1.5 L 4.5,5 L 8,1.5" Stroke="{StaticResource GlyphBrush}" HorizontalAlignment="Center" Stretch="fill"  Height="6" StrokeThickness="2" VerticalAlignment="Center" Width="9" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform Angle="90" />
                    </Path.RenderTransform>
                </Path>

            </Grid>
        </shared:NavigateButtonBase>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource HoverBorderBrush}" />
                <Setter Property="Fill" TargetName="circle" Value="{StaticResource HoverBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource HoverGlyphBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True" SourceName="Button">
                <Setter Property="Stroke" TargetName="circle" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="Fill" TargetName="circle" Value="{StaticResource ActiveBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource ActiveGlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" TargetName="path" />
            </Trigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Width" TargetName="path" Value="15" />
                <Setter Property="Height" TargetName="path" Value="12" />
                <Setter Property="Height" TargetName="circle" Value="40" />
                <Setter Property="Width" TargetName="circle" Value="40" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--NavigateButtonBase-->
    <Style  TargetType="{x:Type shared:NavigateButtonBase}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="Template" Value ="{StaticResource NavigateButtonBaseDefault}" />
    </Style>

    <!--NavigateButton-->
    <Style  TargetType="{x:Type shared:NavigateButton}">
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
    </Style>

    <ControlTemplate x:Key="OfficeMonthButtonDefault" TargetType="{x:Type shared:MonthButton}">
        <Border x:Name="Border"
		    Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding Border.BorderBrush}"
			CornerRadius="{TemplateBinding Border.CornerRadius}"
		    BorderThickness="{TemplateBinding Border.BorderThickness}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Content="{TemplateBinding ContentControl.Content}" />
        </Border>
    </ControlTemplate>

    <Style x:Key="OfficeMonthButtonStyle" TargetType="{x:Type shared:MonthButton}">
        <Setter Property="HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}" />
        <Setter Property="VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource  ForegroundBrush}" />
        <Setter Property="TextBlock.FontFamily" Value="{Binding Path=FontFamily,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
        <Setter Property="TextBlock.FontSize" Value="{Binding Path=FontSize,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
        <Setter Property="TextBlock.FontStyle" Value="{Binding Path=FontStyle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type shared:CalendarEdit}}}" />
        <Setter Property="TextBlock.FontWeight" Value="ExtraBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template" Value ="{StaticResource OfficeMonthButtonDefault}" />
    </Style>

    <Style x:Key="OfficeTodayButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="1,0,1,0" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroCalendarEditStyle" TargetType="{x:Type shared:CalendarEdit}">
        <Setter Property="Control.MinWidth" Value="150" />
        <Setter Property="Control.MinHeight" Value="150" />
        <Setter Property="Width" Value="180" />
        <Setter Property="Height" Value="164" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Control.MaxWidth" Value="450" />
        <Setter Property="Control.MaxHeight" Value="450" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WeekNumberBorderThickness" Value="1" />
        <Setter Property="WeekNumberCornerRadius" Value="2" />
        <Setter Property="WeekNumberSelectionBorderThickness" Value="1" />
        <Setter Property="WeekNumberSelectionBorderCornerRadius" Value="2" />
        <Setter Property="Background" Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamily}" />
        <Setter Property="TodayCellForeground"  Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="HeaderBackground" Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="HeaderForeground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="SelectionForeground" Value="{StaticResource  ActiveForegroundBrush}" />
        <Setter Property="SelectionBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="WeekNumberSelectionBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="WeekNumberHoverBorderBrush" Value="{StaticResource HoverBorderBrush}" />
        <Setter Property="WeekNumberHoverBackground" Value="{StaticResource HoverBackgroundBrush}" />
        <Setter Property="WeekNumberHoverForeground" Value="{StaticResource HoverForegroundBrush}" />
        <Setter Property="WeekNumberSelectionBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="WeekNumberSelectionBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="WeekNumberSelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="WeekNumberBackground" Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="WeekNumberForeground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="MouseOverBackground" Value="{StaticResource HoverBackgroundBrush}" />
        <Setter Property="MouseOverBorderBrush" Value="{StaticResource HoverBorderBrush}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource HoverForegroundBrush}" />
        <Setter Property="SelectedDayCellBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedDayCellBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="SelectedDayCellForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="TodayCellBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="TodayCellSelectedBorderBrush"  Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedDayCellHoverBackground"  Value="{StaticResource HoverBackgroundBrush}" />
        <Setter Property="TodayCellBackground" Value="{StaticResource  ContentAlternativeBackground}" />
        <Setter Property="TodayCellSelectedBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="NotCurrentMonthForeground" Value="{StaticResource ContentSelectionBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:CalendarEdit}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
                        <!--<Border BorderBrush="{StaticResource Default.CalendarInnerBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">-->
                        <Grid x:Name="MainGrid" FlowDirection="{TemplateBinding FlowDirection}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="4*" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="10" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1.5*" />
                                <RowDefinition Height="5.5*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="7" />
                            </Grid.RowDefinitions>

                            <Grid Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="6">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <StackPanel Name="PART_NextMonthButtonPanel" VerticalAlignment="Center" KeyboardNavigation.IsTabStop="False" Grid.Row="0" Grid.Column="2" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                                    <shared:NavigateButton x:Name="PART_NextMonthButton" IsTabStop="False"
				            Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
				            MinWidth="5" MinHeight="5" Margin="0,0,8,0"
				            HorizontalAlignment="Right" VerticalAlignment="Center"
				            Template="{StaticResource OfficeButtonNextDefault}" />
                                </StackPanel>
                                <StackPanel VerticalAlignment="Center"  Name="PART_PrevMonthButtonPanel" KeyboardNavigation.IsTabStop="False"  Grid.Row="0"  Grid.Column="0" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}">
                                    <shared:NavigateButton x:Name ="PART_PrevMonthButton" IsTabStop="False"
				                Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}"
				                MinWidth="5" MinHeight="5" Margin="8,0,0,0"
				                HorizontalAlignment="Left" VerticalAlignment="Center"
				                Template="{StaticResource OfficeButtonPrevDefault}" />
                                </StackPanel>

                                <shared:MonthButton VerticalAlignment="Center"  Name="PART_Month1" Grid.Row="0" Grid.Column="1"
                                            Style="{StaticResource OfficeMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                                <shared:MonthButton VerticalAlignment="Center"  Name="PART_Month2" Grid.Row="0" Grid.Column="1"
                                            Style="{StaticResource OfficeMonthButtonStyle}"
							     Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource TemplatedParent}}"
							     Foreground="{Binding Path=HeaderForeground, RelativeSource={RelativeSource TemplatedParent}}" />

                                <StackPanel Name="PART_YearUpDownPanel"
                              Grid.Row="0" Grid.Column="1"
                              Visibility="Collapsed"
                              HorizontalAlignment="Center"
                              Orientation="Horizontal">
                                    <TextBlock Name="PART_EditMonthName"
                                   Padding="1"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right" />
                                    <shared:UpDown Name="PART_YearUpDown"
                                        MinValue="{Binding Path=MinDate.Year, RelativeSource={RelativeSource AncestorType={x:Type shared:CalendarEdit}}}"
                                        MaxValue="{Binding Path=MaxDate.Year, RelativeSource={RelativeSource AncestorType={x:Type shared:CalendarEdit}}}"
                                        Width="45" NumberDecimalDigits="0"
                                        Height="18"
                                        HorizontalAlignment="Center"
                                        BorderThickness="0" />
                                </StackPanel>
                            </Grid>

                            <Popup Name="PART_MonthPopup" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Placement="Center">
                                <ListBox Width="{TemplateBinding Width}" HorizontalContentAlignment ="Center" />
                            </Popup>

                            <ContentPresenter Name="PART_WeekNumbers" Visibility="Collapsed" Grid.Column="1" Grid.Row="2"
                    ClipToBounds="True"
                    Content="{Binding Path=WeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter VerticalAlignment="Center"  Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="3"  Content="{Binding Path=DayNamesGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=CurrentDayGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Name="WeekNumbersForYearCurrent" Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=CurrentWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Name="WeekNumbersForYearFollow" Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=FollowingWeekNumbersGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=FollowingDayGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=CurrentMonthGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=CurrentYearGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=CurrentYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Margin="0,4,0,0"  Grid.Row="1" Grid.RowSpan="2"  Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=FollowingMonthGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=FollowingYearGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="3" ClipToBounds="True" Content="{Binding Path=FollowingYearRangeGrid, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Grid  Name="PART_TodayGrid" Grid.Row="3" Grid.ColumnSpan="3"  Grid.Column="1"
						Background="Transparent"
						TextBlock.Foreground="{StaticResource  ContentForegroundBrush}"
						Visibility="{Binding Path=TodayRowIsVisible, Converter={StaticResource Boolean_To_VisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"  x:Uid="AccessTodayTextID"
							Content="{StaticResource AccessTodayText}"
							Style="{StaticResource OfficeTodayButtonStyle}"
							Width="Auto" Name="PART_TodayButton" />

                                <Border Grid.Column="1"
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
                                    <TextBlock HorizontalAlignment="Center"
								Text="{Binding Path=TodayDate, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                            </Grid>
                        </Grid>
                        <!--</Border>-->
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" TargetName="Border" />
                        </Trigger>

                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="MinHeight" TargetName="PART_NextMonthButton" Value="40" />
                            <Setter Property="MinWidth" TargetName="PART_NextMonthButton" Value="40" />
                            <Setter Property="MinHeight" TargetName="PART_PrevMonthButton" Value="40" />
                            <Setter Property="MinWidth" TargetName="PART_PrevMonthButton" Value="40" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Width" Value="420" />
                <Setter Property="Height" Value="380" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontFamily" Value="Segoe UI" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource MetroCalendarEditStyle}" TargetType="{x:Type shared:CalendarEdit}" />
</ResourceDictionary>
