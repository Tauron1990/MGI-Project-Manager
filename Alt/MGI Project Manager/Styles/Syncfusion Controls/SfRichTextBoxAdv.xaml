<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:richtextboxadv="clr-namespace:Syncfusion.Windows.Controls.RichTextBoxAdv;assembly=Syncfusion.SfRichTextBoxAdv.WPF"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
                    xmlns:tools_controls_shared="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.shared.WPF">
    
    <ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


    <richtextboxadv:SfRichTextBoxAdvResourceWrapper x:Key="SfRichTextBoxAdvResourceWrapper"/>

    <ContextMenu x:Key="ContextMenuStyle">
        <ContextMenu.Resources>
            <Style TargetType="MenuItem">
                <Setter Property="Height" Value="26" />
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                <Style.Resources>
                    <Style TargetType="Image">
                        <Setter Property="Height" Value="16" />
                        <Setter Property="Width" Value="16" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Margin="10,10,10,10" Background="{StaticResource ContentBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource ContentBorderBrush}">
                                <StackPanel Orientation="Vertical" IsItemsHost="True" Margin="1,1,1,1"/>
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="7" Direction="315"  Opacity="0.5" ShadowDepth="2"/>
                                </Border.Effect>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
                <Border x:Name="Border" Background="{StaticResource ContentBackgroundBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="True"/>
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="4,0,0,0" SnapsToDevicePixels="True"/>
                        <Path Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Width="12" Height="12" Margin="0 6 0 0" Fill="{StaticResource ContentForegroundBrush}" SnapsToDevicePixels="True"/>
                        <Popup Name="Popup" Placement="Left" HorizontalOffset="-2" IsOpen="{TemplateBinding IsSubmenuOpen}" PopupAnimation="Fade">
                            <Border Name="SubmenuBorder" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1">
                                <StackPanel Orientation="Vertical" IsItemsHost="True" Margin="1,1,1,1"/>
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="30" Direction="315"  Opacity="0.5" ShadowDepth="2"/>
                                </Border.Effect>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border" Background="{StaticResource ContentBackgroundBrush}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="30" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="Icon" Grid.Column="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="True"/>
                        <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="4,0,0,0" SnapsToDevicePixels="True"/>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Icon" Property="Opacity" Value="0.5" />
                        <Setter TargetName="HeaderHost" Property="Opacity" Value="0.5" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ContextMenu.Resources>
        <MenuItem x:Name="Cut" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuCut}" Command="richtextboxadv:SfRichTextBoxAdv.CutCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Cut_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="Copy" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuCopy}" Command="richtextboxadv:SfRichTextBoxAdv.CopyCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Copy_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="Paste" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuPaste}" Command="richtextboxadv:SfRichTextBoxAdv.PasteCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Paste_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem x:Name="EditHyperlink" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuEditHyperlink}" Command="richtextboxadv:SfRichTextBoxAdv.ShowHyperlinkDialogCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Hyperlink_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="OpenHyperlink" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuOpenHyperlink}" Command="richtextboxadv:SfRichTextBoxAdv.NavigateHyperlinkCommand" />
        <MenuItem x:Name="CopyHyperlink" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuCopyHyperlink}" Command="richtextboxadv:SfRichTextBoxAdv.CopyHyperlinkCommand" />
        <MenuItem x:Name="RemoveHyperlink" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuRemoveHyperlink}" Command="richtextboxadv:SfRichTextBoxAdv.RemoveHyperlinkCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/RemoveHyperlink_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem x:Name="Font" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuFontDialog}" Command="richtextboxadv:SfRichTextBoxAdv.ShowFontDialogCommand" >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Font_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="Paragraph" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuParagraphDialog}" Command="richtextboxadv:SfRichTextBoxAdv.ShowParagraphDialogCommand"  >
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Paragraph_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <Separator/>
        <MenuItem x:Name="Insert" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuInsertTable}" Visibility="Collapsed">
            <MenuItem.Items>
                <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuInsertLeftColumn}" Command="richtextboxadv:SfRichTextBoxAdv.InsertColumnCommand" CommandParameter="Left">
                    <MenuItem.Icon>
                        <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnBefore_Icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuInsertRightColumn}" Command="richtextboxadv:SfRichTextBoxAdv.InsertColumnCommand" CommandParameter="Right">
                    <MenuItem.Icon>
                        <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnAfter_Icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuInsertRowAbove}" Command="richtextboxadv:SfRichTextBoxAdv.InsertRowCommand" CommandParameter="Above">
                    <MenuItem.Icon>
                        <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowBefore_Icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuInsertRowBelow}" Command="richtextboxadv:SfRichTextBoxAdv.InsertRowCommand" CommandParameter="Below">
                    <MenuItem.Icon>
                        <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowAfter_Icon.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem.Items>
        </MenuItem>
        <MenuItem x:Name="MergeCell" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuMergeCell}" Command="richtextboxadv:SfRichTextBoxAdv.MergeSelectedCellsCommand">
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/MergeCells_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="Hyperlink" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuHyperlink}" Command="richtextboxadv:SfRichTextBoxAdv.ShowHyperlinkDialogCommand">
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Hyperlink_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="Comment" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuComment}" Command="richtextboxadv:SfRichTextBoxAdv.NewCommentCommand">
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Comment_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem x:Name="DeleteComment" Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuDeleteComment}" Command="richtextboxadv:SfRichTextBoxAdv.DeleteCommentCommand">
            <MenuItem.Icon>
                <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DeleteComment_Icon.png"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <Style TargetType="richtextboxadv:SfRichTextBoxAdv">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource ContentSelectionBrush}"/>
        <Setter Property="ContextMenu" Value="{StaticResource ContextMenuStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:SfRichTextBoxAdv">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="OptionsPane" Background="{StaticResource ContentBackgroundBrush}" Width="280" Visibility="Collapsed">
                                <Grid.Resources>
                                    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                                        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
                                        <Setter Property="SelectionBrush" Value="{StaticResource ContentSelectionBrush}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="FontFamily" Value="Segoe UI"/>
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                        <Setter Property="Padding" Value="3 6 3 6"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="30"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                        <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="BorderElement" Value="{StaticResource HoverBorderBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="BorderElement" Value="{StaticResource ActiveBorderBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SearchResultTextBoxStyle" TargetType="{x:Type TextBox}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="AllowDrop" Value="true"/>
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                        <Setter Property="FontFamily" Value="Segoe UI"/>
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                        <Setter Property="Padding" Value="0,6,0,6"/>
                                        <Setter Property="MinHeight" Value="30"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="30"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="PaneCloseButtonStyle" TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="5"/>
                                                            <RowDefinition Height="2*"/>
                                                            <RowDefinition Height="5"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="4"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="4"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path x:Name="pathFill" Grid.Row="1" Grid.Column="1" Fill="{StaticResource GlyphBrush}" Height="16" Width="16" Stretch="Fill" Data="F1M306,369.225L15.3,74.7L0,90L0,120.401L279.225,396L0,671.599L0,702L15.3,717.3L306,422.775L596.7,717.3L612,702L612,671.599L332.775,396L612,120.401L612,90L596.7,74.7z"/>
                                                        <Rectangle Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="border" Fill="{StaticResource GlyphBrush}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="6"/>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="6"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="7.25"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="7.25"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path x:Name="path" Grid.Row="1" Grid.Column="1" Fill="{StaticResource GlyphBrush}" Data="F1M401.625,472.5C306,472.5,229.5,396,229.5,300.375C229.5,204.75,306,128.25,401.625,128.25C497.25,128.25,573.75,204.75,573.75,300.375C573.75,396,497.25,472.5,401.625,472.5 M401.625,90C286.875,90,191.25,185.625,191.25,300.375C191.25,346.275,206.55,384.525,229.5,418.95L19.125,629.325C7.64999999999998,640.8,7.64999999999998,656.1,19.125,663.75L38.25,682.875C49.725,694.35,65.025,694.35,72.675,682.875L283.05,472.5C317.475,495.45,359.55,510.75,401.625,510.75C516.375,510.75,612,415.125,612,300.375C612,185.625,516.375,90,401.625,90" Stretch="Fill" Width="16" Height="16"/>
                                                        <Rectangle Grid.Row="0" Grid.RowSpan="3" Margin="0 2 1 2"  Grid.Column="0" Grid.ColumnSpan="3" Canvas.ZIndex="-1" x:Name="border" Fill="{StaticResource BackgroundBrush}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Fill" TargetName="border" Value="{StaticResource HoverBackgroundBrush}"/>
                                                            <Setter Property="Fill" TargetName="path" Value="{StaticResource HoverGlyphBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                            <Setter Property="Fill" TargetName="path" Value="{StaticResource ActiveGlyphBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="NavigatePreviousButtonStyle" TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="2"/>
                                                            <RowDefinition Height="2*"/>
                                                            <RowDefinition Height="2"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="1"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="1"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path x:Name="pathFill" Grid.Row="1" Grid.Column="1" Width="12" Stretch="Uniform" Fill="{StaticResource GlyphBrush}"  Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15L164.475,353.925L306,212.4L306,663.75L344.25,663.75L344.25,212.4L485.775,353.925z" />
                                                        <Rectangle Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="border" Fill="{StaticResource GlyphBrush}"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="NavigateNextButtonStyle" TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="2"/>
                                                            <RowDefinition Height="2*"/>
                                                            <RowDefinition Height="2"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="1"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="1"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path x:Name="pathFill" Grid.Row="1" Grid.Column="1" Width="12" Stretch="Uniform" Fill="{StaticResource GlyphBrush}"  Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15L164.475,353.925L306,212.4L306,663.75L344.25,663.75L344.25,212.4L485.775,353.925z" RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="180"/>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Rectangle Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="3" x:Name="border" Fill="{StaticResource GlyphBrush}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="true">
                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SearchResultItemStyle" TargetType="{x:Type ListBoxItem}" >
                                        <Setter Property="Padding" Value="6 3" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Top" />
                                        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListBoxItem">
                                                    <Grid Background="{TemplateBinding Background}">
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height ="Auto"/>
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Border x:Name="SelectedBorder" BorderBrush="{StaticResource ActiveBorderBrush}" BorderThickness="2" Opacity="0" />
                                                            <Border x:Name="ItemBorder" BorderBrush="{StaticResource HoverBorderBrush}" BorderThickness="1" Opacity="0" />
                                                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                                            <Rectangle Margin="0,4,0,4" Height="1" Opacity="0.2" Grid.Row="1" Fill="{StaticResource BorderBrush}"/>
                                                        </Grid>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsSelected" Value="False"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Opacity" TargetName="ItemBorder" Value="1"/>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                        </MultiTrigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                <Condition Property="IsSelected" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                    <Style x:Key="SearchResultsListBoxStyle" TargetType="{x:Type ListBox}">
                                        <Setter Property="Padding" Value="1"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Top" />
                                        <Setter Property="IsTabStop" Value="False" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                        <Setter Property="ItemContainerStyle" Value="{StaticResource SearchResultItemStyle}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBox}">
                                                    <Grid>
                                                        <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition Width="20"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <ItemsPresenter />
                                                                </Grid>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="12"/>
                                    <RowDefinition Height="34"/>
                                    <RowDefinition Height="12"/>
                                    <RowDefinition Height="18"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="8"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="26"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="26"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="2" Grid.RowSpan="10" Width="1" HorizontalAlignment="Right" Fill="{StaticResource ContentBorderBrush}"/>
                                <TextBlock x:Name="PaneHeaderBlock" Grid.Row="1" Grid.Column="1" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=OptionsPaneSearch}" FontSize="18" Foreground="{StaticResource ContentForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                                <Button x:Name="ClosePaneButton" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource PaneCloseButtonStyle}" HorizontalAlignment="Right" Margin="0 0 20 0"/>
                                <Grid Grid.Row="3" Grid.Column="1">
                                    <Grid.ColumnDefinitions >
                                        <ColumnDefinition Width="5*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="SearchTextBox" MinHeight="32" Grid.ColumnSpan="3" Style="{StaticResource SearchTextBoxStyle}"/>
                                    <Button x:Name="SearchButton" Grid.Column="2" Style="{StaticResource SearchButtonStyle}" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=SearchButtonToolTip}"/>
                                </Grid>
                                <Grid Grid.Row="5" Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="12"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=OptionsPaneResultsHeader}" FontSize="14" Foreground="{StaticResource ContentForegroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                    <Button x:Name="NavigatePreviousResultButton" Grid.Column="1" Style="{StaticResource NavigatePreviousButtonStyle}" Visibility="Collapsed"/>
                                    <Button x:Name="NavigateNextResultButton" Grid.Column="3" Style="{StaticResource NavigateNextButtonStyle}" Visibility="Collapsed"/>
                                </Grid>
                                <TextBox x:Name="SearchResultsCountTextBox" Grid.Row="6" Grid.Column="1" Style="{StaticResource SearchResultTextBoxStyle}" Visibility="Collapsed" IsReadOnly="True" Margin="-2 0 0 0" IsEnabled="False" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalContentAlignment="Top"/>
                                <TextBox x:Name="SearchResultsTextBox" Grid.Row="8" Grid.Column="1" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=OptionsPaneDescription, Mode=OneWay}" Style="{StaticResource SearchResultTextBoxStyle}" Margin="-2 0 0 0" Padding="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" TextWrapping="Wrap" IsEnabled="False"/>
                                <ListBox x:Name="SearchResultsListBox" Grid.Row="8" Grid.Column="1" Style="{StaticResource SearchResultsListBoxStyle}" Margin="-4 0 0 0" SelectionMode="Single" Visibility="Collapsed"/>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentControl x:Name="content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="0" Grid.Column="0" />
                                <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="16" Visibility="Collapsed" IsTabStop="False" Minimum="0" Orientation="Horizontal" Grid.Row="1"/>
                                <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Visibility="Collapsed" Minimum="0" Orientation="Vertical" Grid.Row="0" Width="16"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <richtextboxadv:FontFamilyStringConverter x:Key="FontFamilyStringConverter"/>
    <richtextboxadv:DoubleStringConverter x:Key="DoubleStringConverter"/>
    <richtextboxadv:HighlightColorToggleConverter x:Key="HighlightColorConverter"/>
    <richtextboxadv:UnderlineToggleConverter x:Key="UnderlineToggleconverter"/>
    <richtextboxadv:TextAlignmentStringConverter x:Key="TextAlignmentStringConverter"/>
    <richtextboxadv:LineSpacingTypeStringConverter x:Key="LineSpacingTypeStringConverter"/>
    <richtextboxadv:SingleStrikeThroughToggleConverter x:Key="SingleStrikeThroughToggleConverter"/>
    <richtextboxadv:DoubleStrikeThroughToggleConverter x:Key="DoubleStrikeThroughToggleConverter" />
    <richtextboxadv:SuperscriptToggleConverter x:Key="SuperscriptToggleConverter"/>
    <richtextboxadv:SubscriptToggleConverter x:Key="SubscriptToggleConverter"/>

    <Style x:Key="DialogButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12 2 12 2"/>
        <Setter Property ="Margin" Value="0 0 6 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd" Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="content" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DialogComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="6 3 5 3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource DialogComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="ClickMode" Value="Press"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="templateRoot" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ContentBackgroundBrush}" SnapsToDevicePixels="true">
                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                    <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0 0 4 0"/>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource HoverGlyphBrush}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource HoverBorderBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ActiveGlyphBrush}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ActiveBorderBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="dropDownBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Background="{StaticResource ContentBackgroundBrush}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<TextBox x:Name="PART_EditableTextBox" Foreground="{TemplateBinding Foreground}" IsReadOnly="{TemplateBinding IsReadOnly}" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
						 <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd" Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="content" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DialogTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource ContentSelectionBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="None"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DialogCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="12"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Height="12" Width="12" x:Name="CheckBorder" BorderBrush="{StaticResource ContentForegroundBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                                <Path x:Name="CheckGlyph" Fill="{StaticResource ContentForegroundBrush}" Height="7" Width="8" Opacity="0" Stretch="Fill" Data="F1 M 0,58 L 2,56 L 6,60 L 13,51 L 15,53 L 6,64 z" FlowDirection="LeftToRight"/>
                            </Border>
                            <ContentPresenter Margin="6 0 0 0" x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="CheckBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background" TargetName="CheckBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="CheckGlyph" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <shared:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <shared:ClipConverter x:Key="ClipConverter" />
    <shared:RadiusConverter x:Key="RadiusConverter" />

    <Style x:Key="NumericUpDownDoubleTextBoxStyle"  TargetType="{x:Type shared:DoubleTextBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="PositiveForeground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionBrush" Value="{StaticResource ContentSelectionBrush}"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:DoubleTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />
                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" IsTabStop="False" IsHitTestVisible="False"
                                                 Background="{TemplateBinding WatermarkBackground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                                 FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                                 Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                                 Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOver_Border" BorderBrush="{StaticResource  BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Visibility="Collapsed" />
                        <Border x:Name="Focused_Border" BorderBrush="{TemplateBinding FocusedBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Visibility="Collapsed" />
                        <Border />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Border Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" SnapsToDevicePixels="true">
            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Chrome" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ContextMenu x:Key="Defaultcontextmenu">
        <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuCut}" Command="Cut" />
        <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuCopy}" Command="Copy" />
        <MenuItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ContextMenuPaste}" Command="Paste" />
    </ContextMenu>
    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
    </Style>
    <Style x:Key="DialogUpDownStyle" TargetType="{x:Type shared:UpDown}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="EnableNegativeColors" Value="False"/>
        <Setter Property="ApplyZeroColor" Value="False" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FocusedBorderBrush" Value="{StaticResource HoverBorderBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource Defaultcontextmenu}" />
        <Setter Property="FontFamily"  Value="Segoe UI" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="FocusedBackground" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="FocusedForeground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:UpDown}">
                    <Grid>
                        <Border x:Name="Border"  CornerRadius="{TemplateBinding CornerRadius}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.Clip>
                                <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource RadiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource RadiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource ClipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid ClipToBounds="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto">
                                    </ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>

                                <shared:DoubleTextBox x:Name="SecondBlock" Grid.Column="0" Grid.RowSpan="2"  Cursor="None" HorizontalContentAlignment="Center" BorderBrush="#595959"
                                                 VerticalContentAlignment="Center"  Visibility="Collapsed"  BorderThickness="0"
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 NumberFormat="{TemplateBinding NumberFormatInfo}" EnterToMoveNext="False"
                                                 ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 HorizontalAlignment="Stretch" Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 Focusable="{TemplateBinding Focusable}"   IsTabStop="{TemplateBinding IsTabStop}" />

                                <shared:DoubleTextBox x:Name="textBox" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed"
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 BorderThickness="0" EnterToMoveNext="False" Focusable="{TemplateBinding Focusable}"
                                                 ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 BorderBrush="Transparent" NumberFormat="{TemplateBinding NumberFormatInfo}" Grid.Column="0" Grid.RowSpan="2"
                                                 Style="{StaticResource NumericUpDownDoubleTextBoxStyle}"  Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 IsTabStop="{TemplateBinding IsTabStop}" />

                                <shared:DoubleTextBox x:Name="DoubleTextBox" Grid.Column="0" Grid.RowSpan="2" Padding="{TemplateBinding Padding}" TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}" EnterToMoveNext="False"
                                                 Focusable="{TemplateBinding Focusable}"  ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="0" BorderBrush="Transparent" VerticalAlignment="Stretch"
                                                 HorizontalContentAlignment="Center"  HorizontalAlignment="Stretch"  VerticalContentAlignment="Center"
                                                 MinValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValue, Mode=TwoWay}"
                                                 MaxValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValue, Mode=TwoWay}"
                                                 NumberFormat="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberFormatInfo, Mode=TwoWay}"
                                                 UseNullOption="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UseNullOption, Mode=TwoWay}"
                                                 NullValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NullValue, Mode=TwoWay}"
                                                 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Culture="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Culture, Mode=TwoWay}"
                                                 Step="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Step, Mode=TwoWay}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 MaxValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValidation, Mode=TwoWay}"
                                                 MinValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValidation, Mode=TwoWay}"
                                                 IsScrollingOnCircle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsScrollingOnCircle, Mode=TwoWay}"
                                                 NumberDecimalDigits="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberDecimalDigits, Mode=TwoWay}"
                                                 IsReadOnly="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Mode=TwoWay}"
                                                 MaxValueOnExceedMaxDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValueOnExceedMaxDigit, Mode=TwoWay}"
                                                 MinValueOnExceedMinDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValueOnExceedMinDigit, Mode=TwoWay}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                IsTabStop="{TemplateBinding IsTabStop}" TabIndex="{TemplateBinding TabIndex}"  Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" GroupSeperatorEnabled="{TemplateBinding GroupSeperatorEnabled}" />
                                <TextBox x:Name="text" Grid.Column="0" Grid.RowSpan="2"  Width="{TemplateBinding Width}" SelectionBrush="{StaticResource ContentSelectionBrush}"
                                     ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                     Height="{TemplateBinding Height}" BorderThickness="0" BorderBrush="Transparent"
                                     Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}"
                                     Background="{TemplateBinding Background}" IsTabStop="{TemplateBinding IsTabStop}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Converter={StaticResource NullToVisibilityConverter},Mode=TwoWay}"
                                     Text="{TemplateBinding NullValueText}" HorizontalContentAlignment="Left"
                                     VerticalContentAlignment="Center" />
                                <RepeatButton Focusable="{TemplateBinding Focusable}" x:Name="upbutton" Margin="0,-1,-1,0" IsTabStop="False" Command="shared:UpDown.m_upValue"  Grid.Row="0" Grid.Column="1" SnapsToDevicePixels="True"  Style="{StaticResource RepeatButtonStyle}" Width="17">
                                    <Path x:Name="upbuttonpath" Stretch="Uniform" Height="4" Width="7" Fill="{StaticResource ForegroundBrush}" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                    </Path>
                                </RepeatButton>
                                <RepeatButton Focusable="{TemplateBinding Focusable}" x:Name="downbutton" Margin="0,-1,-1,-1" IsTabStop="False" Command="shared:UpDown.m_downValue" Grid.Row="2" SnapsToDevicePixels="True"  Grid.Column="1" Style="{StaticResource RepeatButtonStyle}" Width="17">
                                    <Path x:Name="downbuttonpath" Stretch="Uniform" Fill="{StaticResource ForegroundBrush}" Height="4" Width="7" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                    </Path>
                                </RepeatButton>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOver_Border" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
                        <Border x:Name="Focused_Border" BorderBrush="{TemplateBinding FocusedBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
                        <Border />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="MouseOver_Border" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Focused_Border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MouseOver_Border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOver_Border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Focused_Border" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="Border" Property="CornerRadius" Value="0">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,8" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="Width" TargetName="upbutton" Value="40" />
                            <Setter Property="Width" TargetName="downbutton" Value="40" />
                            <Setter Property="Height" TargetName="upbutton" Value="25" />
                            <Setter Property="Height" TargetName="downbutton" Value="25" />
                            <Setter Property="Width" TargetName="upbuttonpath" Value="12" />
                            <Setter Property="Width" TargetName="downbuttonpath" Value="12" />
                            <Setter Property="Height" TargetName="downbuttonpath" Value="8" />
                            <Setter Property="Height" TargetName="upbuttonpath" Value="8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="upbutton">
                            <Setter Property="Background" TargetName="upbutton" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="Fill" TargetName="upbuttonpath" Value="{StaticResource  ActiveGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="downbutton">
                            <Setter Property="Background" TargetName="downbutton" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="Fill" TargetName="downbuttonpath" Value="{StaticResource  ActiveGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsUpdownFocused" Value="true">
                            <Setter Property="Background"  Value="{Binding Path=FocusedBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=FocusedBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"  Value="{Binding Path=FocusedForeground,RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsValueNegative" Value="true">

                            <Setter Property="Background"   Value="{Binding Path=NegativeBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=NegativeBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"   Value="{Binding Path=NegativeForeground,RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsKeyboardFocusWithin" Value="true" />
                                <Condition Property="EnableFocusedColors" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="{Binding Path=FocusedBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=FocusedBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"     Value="{Binding Path=FocusedForeground,RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:MiniToolBar">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:MiniToolBar">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentControl x:Name="content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid>
                                <Grid Background="{StaticResource ContentBackgroundBrush}" x:Name="PART_ToolBarGrid">
                                    <Grid.Resources>
                                        <Style x:Key="BoldToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image VerticalAlignment="Center" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Bold_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="ItalicToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image VerticalAlignment="Center" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Italic_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="UnderLineToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image VerticalAlignment="Center" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Underline_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="IncrementButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="16"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="16"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/IncreaseFontSize_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="DecrementButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="16"/>
                                                                <RowDefinition Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="16"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle Grid.RowSpan="3" Grid.ColumnSpan="3" x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DecreaseFontSize_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="HighlightColorToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="border" BorderBrush="Red" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                            <Border x:Name="checkedBorder" BorderBrush="Yellow" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                <Setter Property="BorderThickness" TargetName="checkedBorder" Value="1"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                                <Setter Property="BorderThickness" TargetName="checkedBorder" Value="1"/>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="true">
                                                                <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="InsertTableButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Height="45" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image VerticalAlignment="Top" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertTable_Icon.png" Margin="0,3,0,0" Height="32" Width="32"/>
                                                            <TextBlock Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Light" Margin="0,5,0,0" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTable}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="DeleteTableButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Height="45" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image VerticalAlignment="Top" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DeleteTable_Icon.png" Margin="0,3,0,0" Height="32" Width="32"/>
                                                            <TextBlock Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Light" Margin="0,5,0,0" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDeleteTable}"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="AlignButtonstyle" TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid Name="backgroundGrid" Visibility="Visible">
                                                            <Rectangle x:Name="border" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                            <Image Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/LeftAlignment_Icon.png" Height="16" Width="16"/>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="MiniToolBarSplitButtonStyle" TargetType="{x:Type tools_controls_shared:SplitButtonAdv}">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type tools_controls_shared:SplitButtonAdv}">
                                                        <Grid>
                                                            <Grid.Resources>
                                                                <tools_controls_shared:MultiLineConverter x:Key="TextConverter"/>
                                                            </Grid.Resources>
                                                            <Popup x:Name="PART_DropDown" AllowsTransparency="True" Placement="Bottom" StaysOpen="False">
                                                                <Grid x:Name="Part_GridPopup" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                                                                    <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Background="{StaticResource BackgroundBrush}" SnapsToDevicePixels="True">
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="2"/>
                                                                    </Border>
                                                                </Grid>
                                                            </Popup>
                                                            <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="22" SnapsToDevicePixels="True">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition/>
                                                                        <ColumnDefinition Width="Auto"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Border x:Name="PART_ButtonNormal" Grid.Column="0">
                                                                        <Grid Margin="{TemplateBinding Padding}">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border x:Name="PART_ImageBorder" Grid.Column="0">
                                                                                <Image x:Name="SmallImage" Height="16" Margin="2" Source="{Binding SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Width="16"/>
                                                                            </Border>
                                                                            <TextBlock x:Name="PART_Text" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,4,0" Text="{TemplateBinding Label}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        </Grid>
                                                                    </Border>
                                                                    <Border x:Name="PART_DropDownButtonNormal" BorderThickness="1,0,0,0" Background="Transparent" Grid.Column="1">
                                                                        <Path x:Name="Arrow" Data="M0,0L4,4 8,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="2,1" VerticalAlignment="Center"/>
                                                                    </Border>
                                                                </Grid>
                                                            </Border>
                                                            <Border x:Name="ItemBorder1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MinHeight="22" SnapsToDevicePixels="True" Visibility="Collapsed">
                                                                <Grid Margin="{TemplateBinding Padding}">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="*"/>
                                                                        <RowDefinition Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="PART_Button">
                                                                        <Border x:Name="PART_ImageBorderLarge">
                                                                            <Image x:Name="LargeImage" Height="26" Margin="2" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Source="{Binding LargeIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Width="26"/>
                                                                        </Border>
                                                                    </Border>
                                                                    <Border x:Name="PART_DropDownButton" BorderThickness="0,1,0,0" Background="Transparent" Grid.Row="1">
                                                                        <ItemsControl x:Name="PART_TextAreaLarge" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,0,4,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    </Border>
                                                                </Grid>
                                                            </Border>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource HoverBorderBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource HoverBorderBrush}"/>
                                                            </Trigger>
                                                            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                                                <Setter Property="Margin" TargetName="Arrow" Value="8,3,10,3"/>
                                                                <Setter Property="Data" TargetName="Arrow" Value="M0,0L7,7 14,0z"/>
                                                                <Setter Property="FontSize" Value="18"/>
                                                                <Setter Property="Padding" Value="8"/>
                                                                <Setter Property="Height" TargetName="SmallImage" Value="20"/>
                                                                <Setter Property="Width" TargetName="SmallImage" Value="20"/>
                                                                <Setter Property="CornerRadius" TargetName="PART_DropDownButtonNormal" Value="0"/>
                                                                <Setter Property="CornerRadius" TargetName="ItemBorder" Value="0"/>
                                                                <Setter Property="CornerRadius" TargetName="ItemBorder1" Value="0"/>
                                                                <Setter Property="Margin" TargetName="SmallImage" Value="0,2,2,2"/>
                                                                <Setter Property="Height" TargetName="LargeImage" Value="30"/>
                                                                <Setter Property="Width" TargetName="LargeImage" Value="30"/>
                                                                <Setter Property="Margin" TargetName="PART_Text" Value="5,0,0,0"/>
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButtonNormal" Value="White"/>
                                                                <Setter Property="Background" TargetName="ItemBorder1" Value="{StaticResource HoverBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButton" Value="White"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButtonNormal" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ItemBorder" Value="White"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButtonNormal" Value="{StaticResource HoverBackgroundBrush}"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButtonNormal" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_ButtonNormal" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButtonNormal" Value="White"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_ButtonNormal" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButton" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ItemBorder1" Value="White"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButton" Value="{StaticResource HoverBackgroundBrush}"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButton" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_Button" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ItemBorder1" Value="{StaticResource HoverBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButton" Value="White"/>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                                                    <Condition Property="IsMouseOver" SourceName="PART_Button" Value="True"/>
                                                                </MultiTrigger.Conditions>
                                                            </MultiTrigger>
                                                            <Trigger Property="IsPressed" Value="True">
                                                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="ItemBorder1" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="ItemBorder1" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_DropDownButton" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButton" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButtonNormal" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ActiveGlyphBrush}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsDropDownPressed" Value="True">
                                                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="ItemBorder1" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="ItemBorder1" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_DropDownButton" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButton" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="Background" TargetName="PART_DropDownButtonNormal" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="ItemBorder" Value="0.5"/>
                                                                <Setter Property="Opacity" TargetName="ItemBorder1" Value="0.5"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="ListItemToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter TargetName="border" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="true">
                                                                <Setter TargetName="border" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ComboBox Grid.Column="0" x:Name="PART_FontFamilyBox" Focusable="False" Text="{Binding Selection.CharacterFormat.FontFamily, Mode=OneWay,Converter={StaticResource FontFamilyStringConverter}}" Style="{StaticResource DialogComboBoxStyle}" IsEditable="True"
                                                      SelectedValue="{Binding Selection.CharacterFormat.FontFamily,Mode=TwoWay,Converter={StaticResource FontFamilyStringConverter}}" Margin="3,5,0,3" Width="130" Height="23" ToolTipService.ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarFontToolTip}"/>
                                            <ComboBox Grid.Column="1" x:Name="PART_FontSizeBox" Focusable="False" Text="{Binding Selection.CharacterFormat.FontSize, Mode=OneWay,Converter={StaticResource DoubleStringConverter}}" Style="{StaticResource DialogComboBoxStyle}" IsEditable="True"
                                                      SelectedValue="{Binding Selection.CharacterFormat.FontSize}"  Margin="0,5,0,3" Width="50" Height="23" VerticalAlignment="Top" ToolTipService.ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarFontSizeToolTip}"/>
                                            <Button x:Name="PART_IncreaseFontSizeButton" Grid.Column="2" Focusable="False" Margin="3,0,0,3" Height="23" Width="23" Style="{StaticResource IncrementButtonStyle}" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarIncreaseFontToolTip}" />
                                            <Button x:Name="PART_DecreaseFontSizeButton" Grid.Column="3" Focusable="False" Margin="3,0,0,3" Height="23" Width="23" Style="{StaticResource DecrementButtonStyle}" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDecreaseFontToolTip}"/>
                                        </Grid>
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton Grid.Column="0" Focusable="False" x:Name="PART_BoldToggleButton" IsChecked="{Binding Selection.CharacterFormat.Bold, Mode=TwoWay}"  Margin="3,0,0,3" Height="23" Width="23" Style="{StaticResource BoldToggleButtonStyle}" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBoldToolTip}" HorizontalAlignment="Left"/>
                                            <ToggleButton Grid.Column="1" Focusable="False" x:Name="PART_ItalicToggleButton" IsChecked="{Binding Selection.CharacterFormat.Italic, Mode=TwoWay}" Margin="0,0,0,3" Height="23" Width="23" Style="{StaticResource ItalicToggleButtonStyle}" ToolTipService.ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarItalicToolTip}"/>
                                            <ToggleButton Grid.Column="2" Focusable="False" x:Name="PART_UnderlineToggleButton" IsChecked="{Binding Selection.CharacterFormat.Underline, Mode=TwoWay, Converter={StaticResource UnderlineToggleconverter}}" Margin="0,0,0,3" Height="23" Width="23" Style="{StaticResource UnderLineToggleButtonStyle}" ToolTipService.ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarUnderlineToolTip}" HorizontalAlignment="Left"/>
                                            <tools_controls_shared:SplitButtonAdv x:Name="PART_FontColorSplitButton" Style="{StaticResource MiniToolBarSplitButtonStyle}" Focusable="False" Grid.Column="3" SizeMode="Small" Margin="0,0,0,3" Height="24" SmallIcon="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/FontColor_Icon.png" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarFontColorToolTip}">
                                                <tools_controls_shared:ColorPickerPalette Focusable="False" IsExpanded="True" x:Name="PART_ColorPicker" BlackWhiteVisibility="Both" RecentlyUsedPanelVisibility="Collapsed" MoreColorOptionVisibility="Collapsed" />
                                            </tools_controls_shared:SplitButtonAdv>
                                            <tools_controls_shared:SplitButtonAdv x:Name="PART_HighlightColorSplitButton" Style="{StaticResource MiniToolBarSplitButtonStyle}" Focusable="False" Grid.Column="4"  SizeMode="Small" Margin="0,0,0,3" Height="24" SmallIcon="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Highlight_Icon.png" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarHighlightColorToolTip}">
                                                <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton x:Name="PART_YellowHighlightButton" Grid.Column="0" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 0}" Margin="3" Height="24" Width="24" Background="#FFFFFF00" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarYellowHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_BrightGreenHighlightButton" Grid.Column="1" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 1}" Margin="3" Height="24" Width="24" Background="#FF00FF00" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBrightGreenHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_TurquoiseHighlightButton" Grid.Column="2" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 2}" Margin="3" Height="24" Width="24"  Background="#FF00FFFF" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarTurquoiseHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_PinkHighlightButton" Grid.Column="3" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 3}" Margin="3" Height="24" Width="24" Background="#FFFF00FF" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarPinkHighlightToolTip}" />
                                                        <ToggleButton x:Name="PART_BlueHighlightButton" Grid.Column="4" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 4}" Margin="3" Height="24" Width="24" Background="#FF0000FF" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBlueHighlightToolTip}"/>
                                                    </Grid>
                                                    <Grid Grid.Row="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton x:Name="PART_RedHighlightButton" Grid.Column="0" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 5}" Margin="3" Height="24" Width="24" Background="#FFFF0000" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarRedHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_DarkBlueHighlightButton" Grid.Column="1" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 6}" Margin="3" Height="24" Width="24" Background="#FF000080" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDarkBlueHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_TealHighlightButton" Grid.Column="2" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 7}" Margin="3" Height="24" Width="24" Background="#FF008080" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarTealHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_GreenHighlightButton" Grid.Column="3" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 8}" Margin="3" Height="24" Width="24" Background="#FF008000" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarGreenHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_VioletHighlightButton" Grid.Column="4" Focusable="False" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 9}" Margin="3" Height="24" Width="24" Background="#FF800080" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarVioletHighlightToolTip}"/>
                                                    </Grid>
                                                    <Grid Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton x:Name="PART_DarkRedHighlightButton" Focusable="False" Grid.Column="0" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 10}" Margin="3" Height="24" Width="24" Background="#FF800000" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDarkRedHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_DarkYellowHighlightButton" Focusable="False" Grid.Column="1" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 11}" Margin="3" Height="24" Width="24" Background="#FF808000" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDarkYelowHighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_DarkGrayHighlightButton" Focusable="False" Grid.Column="2" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 12}" Margin="3" Height="24" Width="24" Background="#FF808080" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarGray50HighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_LightGrayHighlightButton" Focusable="False" Grid.Column="3" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 13}" Margin="3" Height="24" Width="24" Background="#FFC0C0C0" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarGray25HighlightToolTip}"/>
                                                        <ToggleButton x:Name="PART_BlackHighlightButton" Focusable="False" Grid.Column="4" Style="{StaticResource HighlightColorToggleButtonStyle}" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 14}" Margin="3" Height="24" Width="24" Background="#FF000000" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBlackHighlightToolTip}"/>
                                                    </Grid>
                                                    <Grid Grid.Row="3">
                                                        <ToggleButton x:Name="PART_NoHighlightButton" Focusable="False" IsChecked="{Binding Selection.CharacterFormat.HighlightColor, Mode=TwoWay, Converter={StaticResource HighlightColorConverter},ConverterParameter= 15}" Margin="2" Height="24" Width="Auto" BorderThickness="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Background="Transparent" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNoHighlightToolTip}">
                                                            <ToggleButton.Content>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <Border Height="16" Width="16" Margin="8 0 8 0" HorizontalAlignment="Left" Background="Transparent" BorderBrush="Gray" BorderThickness="1"/>
                                                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNoColorHighlight}" Foreground="#333333"/>
                                                                </StackPanel>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                </Grid>
                                            </tools_controls_shared:SplitButtonAdv>
                                            <Button Grid.Column="5" Focusable="False" x:Name="PART_AlignmentButton" Margin="0,0,0,3" Height="23" Width="23" Style="{StaticResource AlignButtonstyle}" ToolTipService.ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarAlignmentToolTip}"/>
                                            <tools_controls_shared:SplitButtonAdv x:Name="PART_BulletedListSplitButton" Style="{StaticResource MiniToolBarSplitButtonStyle}" Focusable="False" Grid.Column="6" SizeMode="Small" SmallIcon="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Bullet_Icon.png" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBulletToolTip}">
                                                <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="12"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="12"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="12"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="12"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarBulletsHeader}" FontWeight="Bold" Padding="4 0 0 0" Margin="2 6" VerticalAlignment="Top" SnapsToDevicePixels="True" />
                                                    <Grid Grid.Row="2" Grid.Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton Focusable="False" x:Name="PART_NoBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="0" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNoListToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_None.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" x:Name="PART_DotBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="1" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Dot.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" x:Name="PART_CircleBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="2" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Circle.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" x:Name="PART_SquareBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="3" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Square.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                    <Grid Grid.Row="3" Grid.Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton Focusable="False" x:Name="PART_FlowerBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="0" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Flower.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" x:Name="PART_ArrowBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="1" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Arrow.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" x:Name="PART_TickBulletButton" Style="{StaticResource ListItemToggleButtonStyle}" Grid.Column="2" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left">
                                                            <ToggleButton.Content>
                                                                <Image Height="40" Width="40" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Bullet/Bullet_Tick.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                </Grid>
                                            </tools_controls_shared:SplitButtonAdv>
                                            <tools_controls_shared:SplitButtonAdv x:Name="PART_NumberedListSplitButton" Style="{StaticResource MiniToolBarSplitButtonStyle}" Focusable="False" SizeMode="Small" Grid.Column="7" SmallIcon="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Numbering_Icon.png" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingToolTip}">
                                                <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="12"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="12"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="12"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="12"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingHeader}" FontWeight="Bold" Padding="4 0 0 0" Margin="2 6" VerticalAlignment="Top" SnapsToDevicePixels="True" />
                                                    <Grid Grid.Row="2" Grid.Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton Focusable="False" Grid.Column="0" x:Name="PART_NoNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNoListToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_None.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" Grid.Column="1" x:Name="PART_NumberDotNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignLeftToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_Number_Dot.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" Grid.Column="2" x:Name="PART_NumberBraceNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignLeftToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_Number_Brace.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                    <Grid Grid.Row="3" Grid.Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton Focusable="False" Grid.Column="0" x:Name="PART_UpRomanNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignRightToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_UpRoman.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" Grid.Column="1" x:Name="PART_UpLetterNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignLeftToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_UpLetter.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" Grid.Column="2" x:Name="PART_LowLetterBraceNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignLeftToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_LowLetter_Brace.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                    <Grid Grid.Row="4" Grid.Column="1">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton Focusable="False" Grid.Column="0" x:Name="PART_LowLetterDotNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignLeftToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_LowLetter_Dot.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                        <ToggleButton Focusable="False" Grid.Column="1" x:Name="PART_LowRomanNumberingButton" Style="{StaticResource ListItemToggleButtonStyle}" BorderThickness="0" Background="Transparent" Padding="4" HorizontalContentAlignment="Left" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarNumberingAlignRightToolTip}">
                                                            <ToggleButton.Content>
                                                                <Image Height="76" Width="76" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/List/Numbering/Numbering_LowRoman.png"/>
                                                            </ToggleButton.Content>
                                                        </ToggleButton>
                                                    </Grid>
                                                </Grid>
                                            </tools_controls_shared:SplitButtonAdv>
                                        </Grid>
                                    </Grid>
                                    <Separator x:Name="PART_Separator" Visibility="Collapsed" HorizontalAlignment="Left" Grid.Column="1">
                                        <Separator.LayoutTransform>
                                            <RotateTransform Angle="90"/>
                                        </Separator.LayoutTransform>
                                    </Separator>
                                    <Button Focusable="False" x:Name="PART_InsertButton" Visibility="Collapsed" Grid.Column="2" Margin="5" Style="{StaticResource InsertTableButtonStyle}" Foreground="Black" HorizontalAlignment="Left" VerticalAlignment="Center" Width="32" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTableToolTip}"/>
                                    <Button Focusable="False" x:Name="PART_DeleteButton" Visibility="Collapsed" Grid.Column="3" Margin="0,0,5,0" Style="{StaticResource DeleteTableButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="32" ToolTip="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDeleteTableToolTip}"/>
                                </Grid>
                                <Popup x:Name="PART_AlignmentPopup" IsOpen="False" PlacementTarget="{Binding ElementName=PART_ToolBarGrid}">
                                    <Border BorderBrush="LightGray" BorderThickness="1">
                                        <StackPanel Orientation="Horizontal">
                                            <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                <Grid.Resources>
                                                    <richtextboxadv:LeftAlignmentToggleConverter x:Key="LeftAlignmentToggleConverter"/>
                                                    <richtextboxadv:CenterAlignmentToggleConverter x:Key="CenterAlignmentToggleConverter"/>
                                                    <richtextboxadv:RightAlignmentToggleConverter x:Key="RightAlignmentToggleConverter"/>
                                                    <richtextboxadv:JustifyAlignmentToggleConverter x:Key="JustifyAlignmentToggleConverter"/>
                                                    <Style x:Key="LeftAlignmentButtonStyle" TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/LeftAlignment_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=LeftAlignment}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="RightAlignmentButtonStyle" TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/RightAlignment_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=RightAlignment}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="CenterAlignmentButtonStyle" TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/CenterAlignment_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=CenteredAlignment}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="JustifyAlignmentButtonStyle" TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/JustifyAlignment_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=JustifiedAlignment}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsChecked" Value="True">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                           <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <ToggleButton x:Name="PART_LeftAlignmentButton" Focusable="False" Style="{StaticResource LeftAlignmentButtonStyle}" IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Mode=TwoWay,Converter={StaticResource LeftAlignmentToggleConverter}}" Grid.Row="0" Width="110" />
                                                <ToggleButton x:Name="PART_CenterAlignmentButton" Focusable="False" Style="{StaticResource CenterAlignmentButtonStyle}" IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Mode=TwoWay,Converter={StaticResource CenterAlignmentToggleConverter}}" Grid.Row="1" Width="110" />
                                                <ToggleButton x:Name="PART_RightAlignmentButton" Focusable="False" Style="{StaticResource RightAlignmentButtonStyle}" IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Mode=TwoWay,Converter={StaticResource RightAlignmentToggleConverter}}" Grid.Row="2" Width="110" />
                                                <ToggleButton x:Name="PART_JustifyAlignmentButton" Focusable="False" Style="{StaticResource JustifyAlignmentButtonStyle}" IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Mode=TwoWay,Converter={StaticResource JustifyAlignmentToggleConverter}}" Grid.Row="3" Width="110" />
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <Popup x:Name="PART_InsertPopup" IsOpen="False" PlacementTarget="{Binding ElementName=PART_ToolBarGrid}">
                                    <Border BorderBrush="LightGray" BorderThickness="1">
                                        <StackPanel Orientation="Horizontal">
                                            <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                <Grid.Resources>
                                                    <Style x:Key="InsertRowAboveButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowBefore_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTableAbove}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="InsertRowBelowButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowAfter_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTableBelow}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="InsertColumnBeforeButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnBefore_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTableLeft}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		<Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="InsertColumnAfterButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnAfter_Icon.png" Height="15" Width="15"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarInsertTableRight}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		<Trigger Property="IsEnabled" Value="false">
                                                                           <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button x:Name="PART_InsertRowAboveButton" Focusable="False" Grid.Row="0" Command="richtextboxadv:SfRichTextBoxAdv.InsertRowCommand" CommandParameter="Above" CommandTarget="{Binding DataContext}" Style="{StaticResource InsertRowAboveButtonStyle}" Width="110"/>
                                                <Button x:Name="PART_InsertRowBelowButton" Focusable="False" Grid.Row="1" Command="richtextboxadv:SfRichTextBoxAdv.InsertRowCommand" CommandParameter="Below" CommandTarget="{Binding DataContext}" Style="{StaticResource InsertRowBelowButtonStyle}" Width="110"/>
                                                <Button x:Name="PART_InsertColumnLeftButton" Focusable="False" Grid.Row="2" Command="richtextboxadv:SfRichTextBoxAdv.InsertColumnCommand" CommandParameter="Left" CommandTarget="{Binding DataContext}" Style="{StaticResource InsertColumnBeforeButtonStyle}" Width="110"/>
                                                <Button x:Name="PART_InsertColumRightButton" Focusable="False" Grid.Row="3" Command="richtextboxadv:SfRichTextBoxAdv.InsertColumnCommand" CommandParameter="Right" CommandTarget="{Binding DataContext}" Style="{StaticResource InsertColumnAfterButtonStyle}" Width="110"/>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                <Popup x:Name="PART_DeletePopup" IsOpen="False" PlacementTarget="{Binding ElementName=PART_ToolBarGrid}">
                                    <Border BorderBrush="LightGray" BorderThickness="1">
                                        <StackPanel Orientation="Horizontal">
                                            <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                <Grid.Resources>
                                                    <Style x:Key="DeleteColumnButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DeleteColumn_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDeleteTableColumns}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="DeleteRowButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DeleteRow_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDeleteTableRows}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		 <Trigger Property="IsEnabled" Value="false">
                                                                            <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style x:Key="DeleteEntireTableButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="0.3*"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="*"/>
                                                                            <RowDefinition Height="0.3*"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Rectangle x:Name="border" Grid.RowSpan="4" Opacity="0" Fill="{StaticResource HoverBackgroundBrush}" />
                                                                        <Grid Grid.Row="1" Name="backgroundGrid" Height="26" Visibility="Visible">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="auto"/>
                                                                                <ColumnDefinition Width="auto"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Image Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0" Source="/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/DeleteEntireTable_Icon.png" Height="16" Width="16"/>
                                                                            <TextBlock Grid.Column="1" Margin="15,0,0,0" VerticalAlignment="Center" FontWeight="Light" FontFamily="Segeo UI" FontSize="11" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=MiniToolBarDeleteTable}"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="true">
                                                                            <Setter TargetName="border" Property="Opacity" Value="1" />
                                                                            <Setter TargetName="border" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}" />
                                                                        </Trigger>
																		<Trigger Property="IsEnabled" Value="false">
                                                                           <Setter Property="Opacity" Value="0.5"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Button x:Name="PART_DeleteColumnButton" Focusable="False" Grid.Row="0" Command="richtextboxadv:SfRichTextBoxAdv.DeleteColumnCommand" CommandTarget="{Binding DataContext}"  Style="{StaticResource DeleteColumnButtonStyle}"  Width="130" />
                                                <Button x:Name="PART_DeleteRowButton" Focusable="False" Grid.Row="1" Command="richtextboxadv:SfRichTextBoxAdv.DeleteRowCommand" CommandTarget="{Binding DataContext}" Style="{StaticResource DeleteRowButtonStyle}"  Width="130"/>
                                                <Button x:Name="PART_DeleteEntireRowButton" Focusable="False" Grid.Row="2" Command="richtextboxadv:SfRichTextBoxAdv.DeleteTableCommand" CommandTarget="{Binding DataContext}" Style="{StaticResource DeleteEntireTableButtonStyle}" Width="130"/>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:DialogWindow">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Icon" Value="{x:Null}"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:DialogWindow">
                    <Border x:Name="MainBorder" BorderThickness="1" BorderBrush="{StaticResource ContentBorderBrush}" >
                        <DockPanel LastChildFill="True">
                            <Border x:Name="Dialog_TitleBar" Background="{StaticResource HeaderBackgroundBrush}" BorderThickness="0 0 0 1" BorderBrush="{StaticResource HeaderBorderBrush}" Margin="0" Height="32" DockPanel.Dock="Top">
                                <Border.Resources>
                                    <Style x:Key="DialogCloseButtonStyle" TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="Height" Value="32"/>
                                        <Setter Property="Width" Value="32"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <ContentPresenter.Content>
                                                                <Path x:Name="pathFill" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Width="10" Margin="0" Data="F1M54.0573,47.8776L38.1771,31.9974 54.0547,16.1198C55.7604,14.4141 55.7604,11.6511 54.0573,9.94531 52.3516,8.23962 49.5859,8.23962 47.8802,9.94531L32.0026,25.8229 16.1224,9.94531C14.4167,8.23962 11.6511,8.23962 9.94794,9.94531 8.24219,11.6511 8.24219,14.4141 9.94794,16.1198L25.8255,32 9.94794,47.8776C8.24219,49.5834 8.24219,52.3477 9.94794,54.0534 11.6511,55.7572 14.4167,55.7585 16.1224,54.0534L32.0026,38.1745 47.8802,54.0534C49.5859,55.7585 52.3516,55.7572 54.0573,54.0534 55.7604,52.3477 55.763,49.5834 54.0573,47.8776z"/>
                                                            </ContentPresenter.Content>
                                                        </ContentPresenter>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource HoverGlyphBrush}"/>
                                                            <Setter Property="Background" TargetName="border" Value="{StaticResource HoverBackgroundBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Fill" TargetName="pathFill" Value="{StaticResource ActiveGlyphBrush}"/>
                                                            <Setter Property="Background" TargetName="border" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Border.Resources>
                                <DockPanel LastChildFill="False">
                                    <TextBlock Margin="8 0 0 4" VerticalAlignment="Center" Foreground="{StaticResource HeaderForegroundBrush}" TextWrapping="NoWrap" Text="{TemplateBinding Title}" FontSize="14" />
                                    <Button x:Name="Dialog_CloseButton" DockPanel.Dock="Right" VerticalAlignment="Center" Style="{StaticResource DialogCloseButtonStyle}"/>
                                </DockPanel>
                            </Border>
                            <AdornerDecorator DockPanel.Dock="Bottom">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                            </AdornerDecorator>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:PasswordDialog">
        <Setter Property="Width" Value="450" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:PasswordDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock x:Name="PART_LabelText" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=PasswordDialogEnterPassword}" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <PasswordBox x:Name="PART_PasswordBox" Height="26" FontSize="12" Background="{StaticResource ContentBackgroundBrush}" Foreground="{StaticResource ContentForegroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Padding="3" SnapsToDevicePixels="True"/>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -9 0">
                                <Button x:Name="PART_OkButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                                <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}" Width="100"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:HyperlinkDialog">
        <Setter Property="Width" Value="450"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:HyperlinkDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <StackPanel>
                                <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=HyperlinkDialogDisplayText}" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <TextBox x:Name="PART_DisplayTextBox" Height="26" FontSize="12" Style="{StaticResource DialogTextBoxStyle}" BorderThickness="1" Padding="3" SnapsToDevicePixels="true"/>
                            </StackPanel>
                            <StackPanel Grid.Row="1">
                                <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=HyperlinkDialogAddress}" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                <TextBox x:Name="PART_UrlTextBox" Height="26" FontSize="12" Style="{StaticResource DialogTextBoxStyle}" BorderThickness="1" Padding="3" SnapsToDevicePixels="true"/>
                            </StackPanel>

                            <StackPanel Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -9 0">
                                <Button x:Name="PART_AddHyperlinkButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                                <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}" Width="100"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:InsertTableDialog">
        <Setter Property="Width" Value="340"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:InsertTableDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="12"/>
                                <ColumnDefinition Width="3*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=TableDialogColumnSize}" Grid.Row="0" Grid.Column="0" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            <shared:UpDown x:Name="PART_ColumnSizeBox" Style="{StaticResource DialogUpDownStyle}" Grid.Row="0" Grid.Column="2" Margin="5" Padding="0" Value="2" Step="1" NumberDecimalDigits="0" MinValue="1" MaxValue="63"/>
                            <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=TableDialogRowSize}" Grid.Row="1" Grid.Column="0" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            <shared:UpDown x:Name="PART_RowSizeBox" Style="{StaticResource DialogUpDownStyle}" Grid.Row="1" Grid.Column="2" Margin="5" Value="2" Step="1" NumberDecimalDigits="0"  MinValue="1" MaxValue="32767"/>
                            <StackPanel Grid.Row="3" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -4 0">
                                <Button Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" x:Name="PART_AddTableButton" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                                <Button Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" x:Name="PART_CancelButton" Style="{StaticResource DialogButtonStyle}" Width="100"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2,6,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                            <Border x:Name="innerBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1,1,1,0" Background="{StaticResource ContentBackgroundBrush}" Margin="-1" Opacity="0"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ContentBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ContentBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ContentBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ContentBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ContentBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ContentBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource ContentBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource ContentBorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:FindAndReplaceDialog">
        <Setter Property="Width" Value="572"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:FindAndReplaceDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <TabControl Margin="12" x:Name="PART_FindAndReplaceTab" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}">
                            <TabControl.Items>
                                <TabItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogFind}" x:Name="PART_FindTab" Padding="14 3 14 3" Style="{StaticResource TabItemStyle}" >
                                    <Grid Margin="12 0 12 0">
                                        <Grid.Resources>
                                            <Style x:Key="MoreOptionsStyle" TargetType="{x:Type Button}">
                                                <Setter Property="Foreground" Value="{StaticResource GlyphBrush}"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Width" Value="Auto"/>
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                    <ContentPresenter.Content>
                                                                        <Grid Height="22">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="1"/>
                                                                                <RowDefinition Height="2*"/>
                                                                                <RowDefinition Height="4"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="3"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="3"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBlock x:Name="block" Grid.Row="1" Grid.Column="1" FontSize="14" Margin="-4 0 0 0" SnapsToDevicePixels="True" FontWeight="Normal" Foreground="{StaticResource ContentForegroundBrush}" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogMoreOption}"/>
                                                                            <Polygon x:Name="block1" Grid.Row="1" Grid.Column="2" Margin="3 3 0 0" Fill="{StaticResource ContentForegroundBrush}" Points="8,12.1 2,6 3.4,4.6 8,9.3 12.6,4.6 14,6 "/>
                                                                        </Grid>
                                                                    </ContentPresenter.Content>
                                                                </ContentPresenter>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Foreground" TargetName="block" Value="{StaticResource HoverGlyphBrush}"/>
                                                                    <Setter Property="Fill" TargetName="block1" Value="{StaticResource HoverGlyphBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <Style x:Key="LessOptionsStyle" TargetType="{x:Type Button}">
                                                <Setter Property="Foreground" Value="{StaticResource GlyphBrush}"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Width" Value="Auto"/>
                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                    <ContentPresenter.Content>
                                                                        <Grid Height="22">
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="1"/>
                                                                                <RowDefinition Height="2*"/>
                                                                                <RowDefinition Height="4"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="3"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="Auto"/>
                                                                                <ColumnDefinition Width="3"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <TextBlock x:Name="block" Grid.Row="1" Grid.Column="1" FontSize="14" FontWeight="Normal" Margin="-4 0 0 0" Foreground="{StaticResource ContentForegroundBrush}" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogLessOption}" SnapsToDevicePixels="True"/>
                                                                            <Polygon x:Name="block1" Grid.Row="1" Grid.Column="2" Margin="3 3 0 0" Fill="{StaticResource ContentForegroundBrush}" Points="8,3.9 14,10 12.6,11.4 8,6.7 3.4,11.4 2,10 "/>
                                                                        </Grid>
                                                                    </ContentPresenter.Content>
                                                                </ContentPresenter>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Foreground" TargetName="block" Value="{StaticResource HoverGlyphBrush}"/>
                                                                    <Setter Property="Fill" TargetName="block1" Value="{StaticResource HoverGlyphBrush}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2"/>
                                            <RowDefinition Height="60"/>
                                            <RowDefinition Height="60"/>
                                            <RowDefinition Height="12"/>
                                            <RowDefinition Height="34"/>
                                            <RowDefinition Height="6"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="12"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel x:Name="PART_FindTextPanel" Grid.Row="1">
                                            <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogFindText}" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <TextBox x:Name="PART_FindWhatTextBox" Height="26" FontSize="12" Style="{StaticResource DialogTextBoxStyle}" BorderThickness="1" Padding="3" SnapsToDevicePixels="true"/>
                                        </StackPanel>
                                        <StackPanel x:Name="PART_ReplaceTextPanel" Grid.Row="2" Visibility="Collapsed">
                                            <TextBlock Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogReplaceText}" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="0 12 0 6" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <TextBox x:Name="PART_ReplaceWithTextBox" Height="26" FontSize="12" Style="{StaticResource DialogTextBoxStyle}" BorderThickness="1" Padding="3" SnapsToDevicePixels="true"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -9 0">
                                            <Button x:Name="PART_ReplaceButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogReplace}" Style="{StaticResource DialogButtonStyle}" Visibility="Collapsed"/>
                                            <Button x:Name="PART_ReplaceAllButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogReplaceAll}" Style="{StaticResource DialogButtonStyle}" Visibility="Collapsed"/>
                                            <Button x:Name="PART_FindNextButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogFindNext}" Style="{StaticResource DialogButtonStyle}" IsDefault="True"/>
                                            <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}"/>
                                        </StackPanel>
                                        <Button Grid.Row="6" x:Name="PART_MoreOptionsButton" Height="30" Style="{StaticResource MoreOptionsStyle}"/>
                                        <Grid Grid.Row="6" x:Name="PART_FindOptionsGrid" Visibility="Collapsed">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="6"/>
                                                <RowDefinition Height="20"/>
                                                <RowDefinition Height="6"/>
                                                <RowDefinition Height="20"/>
                                                <RowDefinition Height="6"/>
                                                <RowDefinition Height="20"/>
                                            </Grid.RowDefinitions>
                                            <Button x:Name="PART_LessOptionsButton" Style="{StaticResource LessOptionsStyle}"/>
                                            <CheckBox x:Name="PART_MatchCaseCheckBox" Grid.Row="2" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogMatchCase}"/>
                                            <CheckBox x:Name="PART_MatchWordCheckBox" Grid.Row="4" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogWholeWord}"/>
                                            <CheckBox x:Name="PART_MatchExpressionCheckBox" Grid.Row="6" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogRegularExpression}"/>
                                        </Grid>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceDialogReplace}" x:Name="PART_ReplaceTab" Padding="14 3 14 3" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}"/>
                            </TabControl.Items>
                        </TabControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:ParagraphDialog">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:ParagraphDialog">
                    <Grid x:Name="PART_Root" Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="16"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogGeneralHeader}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="1">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogAlignment}" Foreground="{StaticResource ContentForegroundBrush}" VerticalAlignment="Center"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_TextAlignmentComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}"
                                   ItemsSource="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphAlignmentColletion}" SelectedValue="{Binding ParagraphFormat.TextAlignment, Mode=TwoWay, Converter={StaticResource TextAlignmentStringConverter}}">
                                </ComboBox>
                            </StackPanel>
                            <Border Grid.Row="2" Grid.ColumnSpan="4" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogIndentHeader}" Grid.Row="3" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="4">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogLeftIndentValue}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_LeftIndentButton" Margin="5" Padding="4 2 2 2" Value="{Binding ParagraphFormat.LeftIndent, Mode=TwoWay}" Style="{StaticResource DialogUpDownStyle}" Height="22" Step="1"  MinValue="-1584" MaxValue="1584"/>
                            </StackPanel>
                            <StackPanel Grid.Row="4" Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogRightIndent}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_RightIndentButton" Margin="5" Padding="4 2 2 2" Value="{Binding ParagraphFormat.RightIndent, Mode=TwoWay}" Height="22" Style="{StaticResource DialogUpDownStyle}" Step="1" MinValue="-1584" MaxValue="1584"/>
                            </StackPanel>
                            <StackPanel Grid.Row="5">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogSpecialIndent}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_SpecialIndentComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}">
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogNoIndent}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogFirstLineIndent}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogHangingIndent}"></ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="5" Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogSpecialIndentBy}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_FirstLineIndentButton" Margin="5" Padding="4 2 2 2" Value="{Binding FirstLineIndent, Mode=TwoWay}" Height="22" Style="{StaticResource DialogUpDownStyle}" Step="1" MinValue="0" MaxValue="1584"/>
                            </StackPanel>
                            <Border Grid.Row="6" Grid.ColumnSpan="4" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogSpacingHeader}" Grid.Row="7" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="8">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogBeforeSpacing}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_BeforeSpacingButton" Margin="5" Padding="4 2 2 2" Style="{StaticResource DialogUpDownStyle}" Height="22" Step="6" MinValue="0" MaxValue="1584"/>
                            </StackPanel>
                            <StackPanel Grid.Row="8"  Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogAfterSpacing}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_AfterSpacingButton" Margin="5" Padding="4 2 2 2" Height="22" Style="{StaticResource DialogUpDownStyle}" Step="6"  MinValue="0" MaxValue="1584"/>
                            </StackPanel>
                            <StackPanel Grid.Row="9">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogLineSpacingType}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox x:Name="PART_LineSpacingTypeComboBox" Margin="5" Padding="4 2 2 2" Height="22" Style="{StaticResource DialogComboBoxStyle}"
                                    ItemsSource="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=LineSpacingColletion}" SelectedValue="{Binding ParagraphFormat.LineSpacingType, Mode=TwoWay, Converter={StaticResource LineSpacingTypeStringConverter}}">

                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="9"  Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ParagraphDialogLineSpacingAt}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_LinespacingButton" Margin="5" Padding="4 2 2 2" Style="{StaticResource DialogUpDownStyle}" Height="22" Step="0.5" MinValue="0.06" MaxValue="132"/>
                            </StackPanel>
                            <StackPanel Grid.Row="11" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button x:Name="PART_ApplyParagraphFormatButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                                <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}" Width="100" Margin="0 0 2 0"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:ListDialog">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:ListDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="16"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogListLevel}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="1">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogChooseLevel}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_ListLevelComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}">
                                    <ComboBox.Items>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelOne}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelTwo}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelThree}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelFour}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelFive}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelSix}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelSeven}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelEight}"></ComboBoxItem>
                                        <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListLevelNine}"></ComboBoxItem>
                                    </ComboBox.Items>
                                </ComboBox>
                            </StackPanel>
                            <Border Grid.Row="2" Grid.ColumnSpan="4" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogNumberFormat}" Grid.Row="3" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="4">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogNumberStyle}" VerticalAlignment="Center"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_ListLevelPatternComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}">
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ArabicList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=UpRomanList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=LowRomanList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=UpLetterList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=LowLetterList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=NumberList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=LeadingZeroList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=BulletList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=OrdinalList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=OrdinalTextList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=SpecialList}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FindReplaceEastList}"></ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="4" Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogFormattingNumber}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <Border BorderBrush="{StaticResource ContentBorderBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderThickness="1" Margin="5" Height="22">
                                    <Grid>
                                        <ComboBox x:Name="PART_BulletsComboBox" Style="{StaticResource DialogComboBoxStyle}" BorderThickness="0" Padding="4 2 2 2" Visibility="Collapsed">
                                            <TextBlock FontFamily="Wingdings" Text="&#xf076;" FontSize="16"/>
                                            <TextBlock FontFamily="Wingdings" Text="&#xf0d8;" FontSize="16"/>
                                            <TextBlock FontFamily="Wingdings" Text="&#xf0a7;" FontSize="16"/>
                                            <TextBlock FontFamily="Wingdings" Text="&#xf0fc;" FontSize="16"/>
                                            <TextBlock FontFamily="Symbol" Text="&#xf0b7;" FontSize="16"/>
                                            <TextBlock FontFamily="Symbol" Text="&#xf06f;&#x0020;" FontSize="16"/>
                                            <TextBlock FontFamily="Symbol" Text="&#xf0a8;" FontSize="16"/>
                                            <TextBlock FontFamily="Symbol" Text="&#xf0ae;" FontSize="16"/>
                                            <TextBlock FontFamily="Symbol" Text="&#xf0a7;" FontSize="16"/>
                                        </ComboBox>
                                        <TextBox x:Name="PART_NumberFormatTextBox" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderThickness="0" Padding="4 2 2 2" FontSize="12" Margin="0 0 25 0" Text=""/>
                                    </Grid>
                                </Border>
                            </StackPanel>
                            <StackPanel Grid.Row="5">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogStartAt}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_StartAtButton" Margin="5" Padding="4 2 2 2" Height="22" Style="{StaticResource DialogUpDownStyle}" NumberDecimalDigits="0" Step="1"  MinValue="0" MaxValue="50"/>
                            </StackPanel>
                            <StackPanel Grid.Row="5" Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogRestart}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_RestartLevelComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}" />
                            </StackPanel>
                            <Border Grid.Row="6" Grid.ColumnSpan="4" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogIndents}" Grid.Row="7" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                            <StackPanel Grid.Row="8">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogLeftIndents}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_LeftIndentButton" Margin="5" Padding="4 2 2 2" Height="22" Style="{StaticResource DialogUpDownStyle}" Step="6" MinValue="-1583" MaxValue="1584" NumberDecimalDigits="0"/>
                            </StackPanel>

                            <StackPanel Grid.Row="8"  Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogFirstLineIndent}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <shared:UpDown x:Name="PART_FirstLineIndentButton" Margin="5" Padding="4 2 2 2" Height="22" Style="{StaticResource DialogUpDownStyle}" NumberDecimalDigits="0" Step="6" MinValue="-1583" MaxValue="1584"/>
                            </StackPanel>
                            <StackPanel Grid.Row="9">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=ListDialogNumberFollow}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox Margin="5" Padding="4 2 2 2" x:Name="PART_FollowCharacterComboBox" Height="22" Style="{StaticResource DialogComboBoxStyle}" >
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FollowNumberWithTab}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FollowNumberWithSpace}"></ComboBoxItem>
                                    <ComboBoxItem Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FollowNumberWithNone}"></ComboBoxItem>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="11" >
                                <Button x:Name="PART_FontButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogFontText}" Style="{StaticResource DialogButtonStyle}" Width="100"/>
                            </StackPanel>
                            <StackPanel Grid.Row="11" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -4 0">
                                <Button x:Name="PART_ApplyListButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True" />
                                <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}" Width="100" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:FontDialog">
        <Setter Property="Width" Value="500"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:FontDialog">
                    <Grid x:Name="PART_Root" Background="{StaticResource ContentBackgroundBrush}">
                        <Grid.Resources>
                            <richtextboxadv:StringFontFamilyConverter x:Key="StringFontFamilyConverter"/>
                            <richtextboxadv:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
                            <Style x:Key="FontColorDropDownButtonStyle" TargetType="tools_controls_shared:DropDownButtonAdv">
                                <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
                                <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="tools_controls_shared:DropDownButtonAdv">
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                            <Grid Background="{StaticResource ContentBackgroundBrush}">
                                                <Border Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" MinHeight="22" Name="ItemBorder" SnapsToDevicePixels="True">
                                                    <Grid Margin="4 3 4 3">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"  SnapsToDevicePixels="True" Margin="0 0 4 0"/>
                                                        <TextBlock Focusable="False" Padding="60 0" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogAutomaticColor}" Opacity="{Binding ElementName=ContentBorder, Path=Background, Mode=OneWay, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=False}" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}"/>
                                                        <TextBlock Focusable="False" Padding="60 0" Text="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogNoColor}" Opacity="{Binding ElementName=ContentBorder, Path=Background, Mode=OneWay, Converter={StaticResource BrushOpacityConverter}, ConverterParameter=True}" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}"/>
                                                        <Path Grid.Column="2" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 0 0 L 4 4 L 8 0 Z" Margin="2 0 2 0"/>
                                                    </Grid>
                                                </Border>
                                                <Popup x:Name="PART_DropDown" Placement="Bottom" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" StaysOpen="False">
                                                    <Grid x:Name="Part_GridPopup" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                                                        <Border Background="{StaticResource ContentBackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource ContentBorderBrush}" >
                                                            <Border Background="Transparent" BorderThickness="0" BorderBrush="{StaticResource ContentBorderBrush}" >
                                                                <ContentPresenter/>
                                                            </Border>
                                                        </Border>
                                                    </Grid>
                                                </Popup>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="12"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="16"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogFontText}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <TextBox  x:Name="PART_FontFamilyTextBox" Margin="5 5 5 0" Text="{Binding CharacterFormat.FontFamily, Mode=OneWay}" IsReadOnly="True" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}"/>
                                <ListBox x:Name="PART_FontFamilyListBox" SelectedValue="{Binding CharacterFormat.FontFamily, Mode=TwoWay, Converter={StaticResource FontFamilyStringConverter}}" Height="100" Margin="5 0 5 5" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock x:Name="PART_ListBoxItem" FontSize="12" Text="{TemplateBinding Content}" FontFamily="{Binding ElementName=PART_ListBoxItem, Path=Text, Converter={StaticResource StringFontFamilyConverter}}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Grid.Column="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogFontStyle}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <TextBox x:Name="PART_FontStyleTextBox" Text="{Binding ElementName=PART_FontStyleListBox, Path=SelectedValue, Mode=OneWay}" IsReadOnly="True" Margin="5 5 5 0" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}"/>
                                <ListBox Height="100" Margin="5 0 5 5" x:Name="PART_FontStyleListBox" SelectedValue="{Binding FontStyle}" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}">
                                    <ListBox.Items>
                                        <sys:String>Regular</sys:String>
                                        <sys:String>Bold</sys:String>
                                        <sys:String>Italic</sys:String>
                                        <sys:String>BoldItalic</sys:String>
                                    </ListBox.Items>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Grid.Column="4">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogFontSize}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <TextBox x:Name="PART_FontSizeTextBox" Text="{Binding CharacterFormat.FontSize, Mode=OneWay, Converter={StaticResource DoubleStringConverter}}" IsReadOnly="True" Margin="5 5 5 0" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}"/>
                                <ListBox x:Name="PART_FontSizeListBox" SelectedValue="{Binding CharacterFormat.FontSize, Mode=TwoWay}" Height="100" Margin="5 0 5 5" Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}">
                                    <ListBox.Items>
                                        <sys:Double>8</sys:Double>
                                        <sys:Double>9</sys:Double>
                                        <sys:Double>10</sys:Double>
                                        <sys:Double>11</sys:Double>
                                        <sys:Double>12</sys:Double>
                                        <sys:Double>14</sys:Double>
                                        <sys:Double>16</sys:Double>
                                        <sys:Double>18</sys:Double>
                                        <sys:Double>20</sys:Double>
                                        <sys:Double>24</sys:Double>
                                        <sys:Double>26</sys:Double>
                                        <sys:Double>28</sys:Double>
                                        <sys:Double>36</sys:Double>
                                        <sys:Double>48</sys:Double>
                                        <sys:Double>72</sys:Double>
                                        <sys:Double>96</sys:Double>
                                    </ListBox.Items>
                                </ListBox>
                            </StackPanel>
                            <StackPanel Grid.Row="2">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogFontColor}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <tools_controls_shared:DropDownButtonAdv x:Name="PART_FontColorDropDownButton" Width="180" Height="22" Margin="5" Padding="4 2 2 2" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Style="{StaticResource FontColorDropDownButtonStyle}">
                                    <tools_controls_shared:ColorPickerPalette x:Name="PART_ColorPicker" IsExpanded="True" RecentlyUsedPanelVisibility="Collapsed" MoreColorOptionVisibility="Collapsed"/>
                                </tools_controls_shared:DropDownButtonAdv>
                            </StackPanel>
                            <StackPanel Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="3">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogUnderline}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <ComboBox x:Name="PART_UnderlineStyleComboBox" Width="180" Height="22" HorizontalAlignment="Left" Margin="5" HorizontalContentAlignment="Left" Padding="4 2 2 2" Style="{StaticResource DialogComboBoxStyle}">
                                    <ComboBox.Resources>
                                        <Style x:Key="UnderlineComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
                                            <Setter Property="Margin" Value="4 6"/>
                                            <Setter Property="Height" Value="20"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ComboBox.Resources>
                                    <ComboBox.Items>
                                        <ComboBoxItem Height="20" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogNoUnderline}"></ComboBoxItem>
                                        <ComboBoxItem Height="20" Padding="6 8" VerticalContentAlignment="Center">
                                            <Border Height="2" Width="160" VerticalAlignment="Center" Background="{StaticResource ContentForegroundBrush}"/>
                                        </ComboBoxItem>
                                    </ComboBox.Items>
                                </ComboBox>
                            </StackPanel>
                            <Border Grid.Row="3" Grid.ColumnSpan="5" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <StackPanel Grid.Row="4" Grid.ColumnSpan="5">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogEffects}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel>
                                        <CheckBox Margin="5" x:Name="PART_SingleStrikeCheckBox" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogStrikeThrough}" IsChecked="{Binding CharacterFormat.StrikeThrough, Mode=TwoWay, Converter={StaticResource SingleStrikeThroughToggleConverter}}"/>
                                        <CheckBox Margin="5" x:Name="PART_DoubleStrikeCheckBox" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogDoubleStrikeThrough}" IsChecked="{Binding CharacterFormat.StrikeThrough, Mode=TwoWay, Converter={StaticResource DoubleStrikeThroughToggleConverter}}"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="2">
                                        <CheckBox x:Name="PART_SuperScriptCheckBox" Margin="5" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogSuperscript}" IsChecked="{Binding CharacterFormat.BaselineAlignment, Mode=TwoWay, Converter={StaticResource SuperscriptToggleConverter}}"/>
                                        <CheckBox x:Name="PART_SubScriptCheckBox" Margin="5" Style="{StaticResource DialogCheckBoxStyle}" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogSubscript}" IsChecked="{Binding CharacterFormat.BaselineAlignment, Mode=TwoWay, Converter={StaticResource SubscriptToggleConverter}}"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                            <Border Grid.Row="6" Grid.ColumnSpan="5" Height="1" Margin="5 12 5 5" Padding="4 2 2 2" BorderThickness="0 0 0 1" Opacity="0.5" VerticalAlignment="Center" Background="{StaticResource ContentBorderBrush}"/>
                            <StackPanel Grid.Row="7" Grid.ColumnSpan="5">
                                <Label Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=FontDialogPreview}" VerticalAlignment="Center" Foreground="{StaticResource ContentForegroundBrush}"/>
                                <Border Height="60" Margin="5" BorderBrush="{StaticResource ContentBorderBrush}" Background="{StaticResource ContentBackgroundBrush}" BorderThickness="1">
                                    <Grid>
                                        <Border Width="440" Background="{StaticResource ContentBackgroundBrush}">
                                            <Canvas>
                                                <TextBlock x:Name="PART_PreviewTextBlock" ClipToBounds="True" Height="Auto" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="6 0 6 0" Margin="0 0 0 0" FontFamily="{Binding CharacterFormat.FontFamily}"/>
                                            </Canvas>
                                        </Border>
                                    </Grid>
                                </Border>
                            </StackPanel>
                            <StackPanel Grid.Row="9" Grid.ColumnSpan="5" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 -5 0">
                                <Button x:Name="PART_ApplyFontFormatButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                                <Button x:Name="PART_CancelButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxCancel}" Style="{StaticResource DialogButtonStyle}" Width="100"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="richtextboxadv:ShowMessageDialog">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="richtextboxadv:ShowMessageDialog">
                    <Grid Background="{StaticResource ContentBackgroundBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="24"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="1" x:Name="PART_MessageTextBlock" FontSize="12" Foreground="{StaticResource ContentForegroundBrush}" Margin="5 12 0 6" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 0 -10 10">
                                <Button x:Name="PART_OkButton" Content="{Binding Source={StaticResource SfRichTextBoxAdvResourceWrapper}, Path=DialogBoxOk}" Style="{StaticResource DialogButtonStyle}" Width="100" IsDefault="True"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
