<ResourceDictionary  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    >

	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


    <FontFamily x:Key="ClockFontFamily">Segoe UI</FontFamily>

    <!--converter-->

    <shared:SecondsConverter x:Key="secondsConverter"/>
    <shared:MinutesConverter x:Key="minutesConverter"/>
    <shared:HoursConverter x:Key="hoursConverter"/>
    <BooleanToVisibilityConverter x:Key="ClockBooleanToVisibilityConverter" />

    <Geometry x:Key="Clock_DownArrowGeometry">M 0 0 L 3.5 3 L 7 0 Z</Geometry>
    <Geometry x:Key="UpArrowGeometry">M 0 3 L 3.5 0 L 7 3 Z</Geometry>

    <!--InnerClockGeneralStyle-->
    <Style x:Key="InnerClockGeneralStyle" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Width" Value="{Binding Path=InnerClockGeneralWidth, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=InnerClockGeneralHeight, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>

    <!--FirstBorderFrameStyle-->
    <Style x:Key="FirstBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"  />
        <Setter Property="Width" Value="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />

    </Style>

    <!--SecondBorderFrameStyle-->
    <Style x:Key="SecondBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>

    <!--SecondInnerBorderFrameStyle-->
    <Style x:Key="SecondInnerBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource  BackgroundBrush}" />
        <Setter Property="Width" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondInnerBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>

    <!--ThirdBorderFrameStyle-->
    <Style x:Key="ThirdBorderFrameStyle" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource  BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"  />
        <Setter Property="Width" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=ThirdBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=InnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>
    
    <!--InnerBorderStyle-->
    <Style x:Key="InnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="{Binding Path=DialBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="CornerRadius" Value="{Binding Path=ClockCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>

    <!--CenteredEllipseStyle-->
    <Style x:Key="CenteredEllipseStyle" TargetType="{x:Type Ellipse}">
        
        <Setter Property="Width" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=CenteredEllipseRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="4" />
        <Setter Property="Canvas.Top" Value="60" />
        <Setter Property="Canvas.Left" Value="57" />
    </Style>

    <!--ClockPointStyle-->
    <Style x:Key="ClockPointStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Width" Value="3" />
        <Setter Property="Height" Value="6" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.VisualStyle" Value="Default">
                <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ClockPointLittleStyle-->
    <Style x:Key="ClockPointLittleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Width" Value="1" />
        <Setter Property="Height" Value="5" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="60" />
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.VisualStyle" Value="Default">
                <Setter Property="Fill" Value="{Binding Path=ClockPointBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--HourHandStyle-->
    <Style x:Key="HourHandStyle" TargetType="{x:Type Path}">
        
        <Setter Property="Data" Value="M 5,5 L 0,28 L 3.5,38 L 8,28 Z" />
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="Canvas.Top" Value="27" />
        <Setter Property="Canvas.Left" Value="58" />
       
       
    </Style>

    <!--HourHandDefaultStyle-->
    <Style x:Key="HourHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource HourHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=HourHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=HourHandBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=HourHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=HourHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedHourHand, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=HourHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
                <Setter Property="Stroke" Value="{Binding Path=HourHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--MinuteHandStyle-->
    <Style x:Key="MinuteHandStyle" TargetType="{x:Type Path}">
       
        <Setter Property="Data" Value="M 5,5 L 0,40 L 3.5,48 L 8,40 Z" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Canvas.Top" Value="16" />
        <Setter Property="Canvas.Left" Value="57" />
      
    </Style>

    <!--MinuteHandDefaultStyle-->
    <Style x:Key="MinuteHandDefaultStyle" TargetType="{x:Type Path}" BasedOn="{StaticResource MinuteHandStyle}">
        <Setter Property="Stroke" Value="{Binding Path=MinuteHandBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Fill" Value="{Binding Path=MinuteHandBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"  Value="{Binding Path=MinuteHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter Property="Stroke" Value="{Binding Path=MinuteHandMouseOverBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedMinuteHand, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=MinuteHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
                <Setter Property="Stroke" Value="{Binding Path=MinuteHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--SecondHandStyle-->
    <Style x:Key="SecondHandStyle" TargetType="{x:Type Rectangle}">
        
        <Setter Property="Width" Value="{Binding Path=SecondHandThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Height" Value="{Binding Path=SecondHandHeight, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Panel.ZIndex" Value="3" />
        <Setter Property="Canvas.Top" Value="12" />
        <Setter Property="Canvas.Left" Value="61" />
       
    </Style>
    
    <!--SecondHandDefaultStyle-->
    <Style x:Key="SecondHandDefaultStyle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource SecondHandStyle}">
        <Setter Property="Fill" Value="{Binding Path=SecondHandBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandMouseOverBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsPressedSecondHand, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Value="True">
                <Setter Property="Fill" Value="{Binding Path=SecondHandPressedBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--TimeTextBlockStyle-->
    <Style x:Key="TimeTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="62" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
    </Style>

    <!--TimeTextBlockSmallStyle-->
    <Style x:Key="TimeTextBlockSmallStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <!--ContentPresenterStyle-->
    <Style x:Key="ContentPresenterStyle" TargetType="{x:Type ContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <!--RectangleStyle-->
    <Style x:Key="RectangleStyle" TargetType="{x:Type Rectangle}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="8" />
        <Setter Property="RadiusX" Value="0" />
        <Setter Property="RadiusY" Value="0" />
        
    </Style>
    
    <!--PathStyle-->
    <Style x:Key="PathStyle" TargetType="{x:Type Path}">
        <Setter Property="Margin" Value="0,-3,0,-3" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Canvas.Top" Value="5" />
        <Setter Property="Canvas.Left" Value="5" />
    </Style>
    
    <!--ArrowBorderStyle-->
    <Style x:Key="ArrowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        
    </Style>
    
    <!--FrameBorderStyle-->
    <Style x:Key="FrameBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
       
        <Setter Property="Width" Value="{Binding Path=FrameWidth, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
    </Style>

    <!--FrameInnerBorderStyle-->
    <Style x:Key="FrameInnerBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="{Binding Path=FrameCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="BorderThickness" Value="{Binding Path=FrameInnerBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
        <Setter Property="Padding" Value="10,5,10,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Background" Value="{Binding Path=FrameBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />

    </Style>

    <!--TwelfthPartTemplate-->
    <DataTemplate x:Key="TwelfthPartTemplate">

        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="337" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="343" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="349" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="355" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="0" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--EleventhPartTemplate-->
    <DataTemplate x:Key="EleventhPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="307" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="313" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="319" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="325" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="330" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>


    <!--TenthPartTemplate-->
    <DataTemplate x:Key="TenthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="277" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="283" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="289" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="295" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="300" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--NinethPartTemplate-->
    <DataTemplate x:Key="NinethPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="247" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="253" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="259" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="265" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="270" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--EighthPartTemplate-->
    <DataTemplate x:Key="EighthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="217" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="223" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="229" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="235" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="240" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SeventhPartTemplate-->
    <DataTemplate x:Key="SeventhPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="187" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="193" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="199" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="205" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="210" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SixthPartTemplate-->
    <DataTemplate x:Key="SixthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="157" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="163" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="169" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="175" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="180" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FifthPartTemplate-->
    <DataTemplate x:Key="FifthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="127" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="133" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="139" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="145" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="150" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FourthPartTemplate-->
    <DataTemplate x:Key="FourthPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="97" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="103" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="109" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="115" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="120" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--ThirdPartTemplate-->
    <DataTemplate x:Key="ThirdPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="67" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="73" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="79" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="85" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="90" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--SecondPartTemplate-->
    <DataTemplate x:Key="SecondPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="37" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="43" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="49" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="55" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="60" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>

    <!--FirstPartTemplate-->
    <DataTemplate x:Key="FirstPartTemplate">
        <Canvas>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="7" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="13" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="19" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Rectangle Style="{StaticResource ClockPointLittleStyle}">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="25" />
                </Rectangle.RenderTransform>
            </Rectangle>

            <Rectangle Style="{StaticResource ClockPointStyle}" Canvas.Left="61">
                <Rectangle.RenderTransform>
                    <RotateTransform CenterX="2" CenterY="60" Angle="30" />
                </Rectangle.RenderTransform>
            </Rectangle>
        </Canvas>
    </DataTemplate>
   
    <!--ScrollBarButtonDownTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonDownTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <Button Name="TopButton" Command="shared:Clock.m_AMPMSelect"/>
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="DownBorder" SnapsToDevicePixels="True"  BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="DownRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="DownPath" SnapsToDevicePixels="True" 
						  Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
						  Data="{StaticResource Clock_DownArrowGeometry}"
						  Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="DownPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="DownPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="DownBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter TargetName="DownRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter TargetName="DownPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">

                <Setter TargetName="DownRect" Property="Fill" Value="{StaticResource  ActiveBackgroundBrush}"/>
                <Setter TargetName="DownPath" Property="Fill" Value="{StaticResource  ActiveGlyphBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ScrollBarButtonUpTemplate -->
    <ControlTemplate x:Key="ScrollBarButtonUpTemplate" TargetType="{x:Type RepeatButton}">
        <Grid FocusManager.IsFocusScope="True">
            <ContentPresenter Style="{StaticResource ContentPresenterStyle}" >
                <ContentPresenter.Content>
                    <Canvas Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}">
                        <Border Name="UpBorder"  SnapsToDevicePixels="True"  BorderBrush="{Binding Path=AMPMSelectorButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource ArrowBorderStyle}" Height="{TemplateBinding RepeatButton.Height}">
                            <Rectangle Name="UpRect" Fill="{Binding Path=AMPMSelectorButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Height="{TemplateBinding RepeatButton.Height}" Width="{TemplateBinding RepeatButton.Width}" Style="{StaticResource RectangleStyle}" />
                        </Border>
                        <Path Name="UpPath"
					    Fill="{Binding Path=AMPMSelectorButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
					    Data="{StaticResource UpArrowGeometry}" SnapsToDevicePixels="true"
					    Style="{StaticResource PathStyle}"/>
                    </Canvas>
                </ContentPresenter.Content>
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RepeatButton.Width" Value="10">
                <Setter TargetName="UpPath" Property="Canvas.Top" Value="4"/>
                <Setter TargetName="UpPath" Property="Canvas.Left" Value="1"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="UpBorder" Property="BorderBrush" Value="{Binding Path=AMPMMouseOverButtonsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter TargetName="UpRect" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                <Setter TargetName="UpPath" Property="Fill" Value="{Binding Path=AMPMMouseOverButtonsArrowBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">

                <Setter TargetName="UpRect" Property="Fill" Value="{StaticResource  ActiveBackgroundBrush}"/>
                <Setter TargetName="UpPath" Property="Fill" Value="{StaticResource  ActiveGlyphBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
  
    <Style TargetType="{x:Type shared:Clock}">
        <Setter Property="shared:Clock.ClockPointBrush" Value="{StaticResource TickColor}"/>
        <Setter Property="shared:Clock.CenterCircleBrush" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="shared:Clock.BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="shared:Clock.DialCenterBackground" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="shared:Clock.InnerBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="shared:Clock.DialBackground" Value="{StaticResource ContentBackgroundBrush}"/>

        <Setter Property="shared:Clock.HourHandBrush" Value="{StaticResource GlyphBrush}"/>
        <Setter Property="shared:Clock.MinuteHandBrush" Value="{StaticResource GlyphBrush}"/>
        <Setter Property="shared:Clock.SecondHandBrush" Value="{StaticResource GlyphBrush}"/>
        <Setter Property="shared:Clock.HourHandMouseOverBrush" Value="{StaticResource HoverGlyphBrush}"/>
        <Setter Property="shared:Clock.MinuteHandMouseOverBrush"  Value="{StaticResource HoverGlyphBrush}"/>
        <Setter Property="shared:Clock.SecondHandMouseOverBrush" Value="{StaticResource HoverGlyphBrush}"/>
        <Setter Property="shared:Clock.HourHandPressedBrush" Value="{StaticResource  GlyphBrush}"/>
        <Setter Property="shared:Clock.MinuteHandPressedBrush" Value="{StaticResource  GlyphBrush}"/>
        <Setter Property="shared:Clock.SecondHandPressedBrush" Value="{StaticResource  GlyphBrush}"/>

        <Setter Property="shared:Clock.AMPMSelectorButtonsBackground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="shared:Clock.AMPMSelectorButtonsBorderBrush" Value="{StaticResource  BorderBrush}"/>
        <Setter Property="shared:Clock.AMPMSelectorBorderBrush" Value="{StaticResource  BorderBrush}"/>
        <Setter Property="shared:Clock.AMPMSelectorButtonsArrowBrush" Value="{StaticResource  GlyphBrush}"/>
        <Setter Property="shared:Clock.AMPMMouseOverButtonsArrowBrush" Value="{StaticResource  GlyphBrush}"/>
        <Setter Property="shared:Clock.AMPMMouseOverButtonsBorderBrush" Value="{StaticResource  HoverBorderBrush}"/>
        <Setter Property="shared:Clock.AMPMMouseOverButtonsBackground" Value="{StaticResource  HoverBackgroundBrush}"/>
        <Setter Property="shared:Clock.AMPMSelectorBackground" Value="{StaticResource  ContentBackgroundBrush}"/>
        <Setter Property="shared:Clock.AMPMSelectorForeground" Value="{StaticResource  ContentForegroundBrush}"/>

        <Setter Property="shared:Clock.FrameBorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="shared:Clock.FrameInnerBorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="shared:Clock.FrameBackground" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="shared:Clock.ClockFrameBrush" Value="{StaticResource ContentBackgroundBrush}"/>
      
        <!--<Setter Property="FirstBorderFrameRadius" Value="151"/>-->
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="ClockCornerRadius" Value="90"/>
        <!--<Setter Property="SecondInnerBorderFrameRadius" Value="135"/>-->
        <!--<Setter Property="ThirdBorderFrameRadius" Value="122"/>-->
        <Setter Property="InnerBorderThickness" Value="2"/>
        <Setter Property="DialBorderThickness" Value="25"/>        
        <Setter Property="FrameCornerRadius" Value="0"/>
        <Setter Property="FrameInnerBorderThickness" Value="1"/>
        <Setter Property="shared:Clock.AMPMSelectorCornerRadius" Value="0"/>  
        <!--<Setter Property="CenteredEllipseRadius" Value="10"/>-->
        <Style.Triggers>
            <Trigger Property="CanResize" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type shared:Clock}">
                            <Viewbox Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}" MinHeight="{TemplateBinding MinHeight}" MinWidth="{TemplateBinding MinWidth}">
                                <Border Name="FrameBorder" Background="{Binding Path=FrameInnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" BorderBrush="{Binding Path=FrameBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource FrameBorderStyle}">
                                    <Border Name="FrameInnerBorder" Style="{StaticResource FrameInnerBorderStyle}">
                                        <Grid HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                                                <RowDefinition Height="30" />
                                            </Grid.RowDefinitions>
                                            <Border Name="FirstBorder" BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Row="0" Grid.Column="0" Style="{StaticResource FirstBorderFrameStyle}">
                                                <Border Style="{StaticResource SecondBorderFrameStyle}" Background="{StaticResource ContentBackgroundBrush}" >
                                                    <Border Name="SecondBorder" Background="{Binding Path=ClockFrameBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource SecondBorderFrameStyle}">
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="#c8c8c8" BlurRadius="8" Direction="270" ShadowDepth="1" Opacity="0.35"/>
                                                        </Border.Effect>
                                                        <Border Name="SecondInnerBorder" Background="{Binding Path=FrameBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource SecondInnerBorderFrameStyle}">
                                                            <Border Name="ThirdBorder" BorderBrush="{Binding Path=InnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Background="{Binding Path=DialCenterBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource ThirdBorderFrameStyle}">
                                                                <Border Name="InnerBorder" BorderBrush="{Binding Path=DialBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource InnerBorderStyle}"/>
                                                            </Border>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>

                                            <Canvas Style="{StaticResource InnerClockGeneralStyle}" FlowDirection="LeftToRight">
                                                <Ellipse Name="CenteredEllipse" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1"  Fill="{Binding Path=CenterCircleBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource CenteredEllipseStyle}" />
                                                <ContentPresenter ContentTemplate="{StaticResource FirstPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SecondPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource ThirdPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource FourthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource FifthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SixthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SeventhPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource EighthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource NinethPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource TenthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource EleventhPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource TwelfthPartTemplate}"/>
                                                <Path x:Name="HourHand" Style="{StaticResource HourHandDefaultStyle}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="HourHandRotateTransform" CenterX="4" CenterY="39" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hoursConverter}}"></RotateTransform>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Path x:Name="MinuteHand" Style="{StaticResource MinuteHandDefaultStyle}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="MinuteHandRotateTransform" CenterX="4.7" CenterY="49" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource minutesConverter}}"></RotateTransform>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Rectangle x:Name="SecondHand" Style="{StaticResource SecondHandDefaultStyle}">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform x:Name="SecondHandRotateTransform" CenterX="0.5" CenterY="55" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource secondsConverter}}"></RotateTransform>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                                <StackPanel Name="SmallAmPmPanel" Width="26" Panel.ZIndex="0" Canvas.Top="76" Canvas.Left="45" Visibility="{TemplateBinding IsInsideAmPmVisible, Converter={StaticResource ClockBooleanToVisibilityConverter}}">
                                                    <Border Name="SmallAmPmPanelBorder"
                CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
                BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" 
                BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                        <Grid Name="SmallAmPmPanelGrid" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="12" />
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Name="SmallTimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockSmallStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                            <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition />
                                                                    <RowDefinition />
                                                                </Grid.RowDefinitions>
                                                                <RepeatButton Name="UpInnerRepeatButton" SnapsToDevicePixels="True"  Grid.Row="0" Margin="-1,0,0,0" Width="10" Height="8" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                                <RepeatButton Name="DownInnerRepeatButton" SnapsToDevicePixels="True"  Grid.Row="1" Margin="-1,0,0,0" Width="10" Height="8" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}"/>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </StackPanel>
                                            </Canvas>

                                            <StackPanel Name="BigAmPmPanel" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Width="90" 
                      Visibility="{TemplateBinding IsDigitalAmPmVisible, Converter={StaticResource ClockBooleanToVisibilityConverter}}">
                                                <Border Name="BigAmPmPanelBorder" SnapsToDevicePixels="true"
              CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
              BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" 
              BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                    <StackPanel Name="BigAmPmContainer" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Orientation="Horizontal">
                                                        <TextBlock Name="TimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Grid Name="BigAmPmSelectorGrid" Width="16" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <RepeatButton Name="UpRepeatButton" SnapsToDevicePixels="True"  Margin="0,-1,1,0" Grid.Row="0" Width="15" Height="10" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                            <RepeatButton Name="DownRepeatButton" SnapsToDevicePixels="True"  Margin="0,-1,1,-1" Grid.Row="1" Width="15" Height="10" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}" />
                                                        </Grid>
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:Clock.IsDigitalAmPmVisible" Value="False">
                                    <Setter TargetName="BigAmPmPanel" Property="Width" Value="75" />
                                </Trigger>
                                <Trigger Property="shared:Clock.IsDigitalAmPmVisible" Value="True">
                                    <Setter TargetName="BigAmPmPanel" Property="Width" Value="90" />
                                </Trigger>

                                <Trigger Property="shared:Clock.ClockFrameBrush" Value="Transparent">
                                    <Setter TargetName="SecondInnerBorder" Property="Background" Value="{StaticResource  ContentBackgroundBrush}" />
									<Setter TargetName="SecondInnerBorder" Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
                                    <Setter TargetName="SecondBorder" Property="Background" Value="{StaticResource  BackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Bottom">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="96" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="49" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Top">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="16" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="48" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Left">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="10" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Right">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="87" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CanResize" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type shared:Clock}">
                            
                                <Border Name="FrameBorder" Background="{Binding Path=FrameInnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" BorderBrush="{Binding Path=FrameBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource FrameBorderStyle}">
                                    <Border Name="FrameInnerBorder" Style="{StaticResource FrameInnerBorderStyle}">
                                        <Grid HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding Path=FirstBorderFrameRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"/>
                                                <RowDefinition Height="30" />
                                            </Grid.RowDefinitions>
                                            <Border Name="FirstBorder" BorderThickness="1"  BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Row="0" Grid.Column="0" Style="{StaticResource FirstBorderFrameStyle}">
                                                <Border Style="{StaticResource SecondBorderFrameStyle}" Background="{TemplateBinding Background}" >
                                                    <Border Name="SecondBorder" Background="{Binding Path=ClockFrameBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource SecondBorderFrameStyle}">
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="{TemplateBinding BorderBrush}" BlurRadius="8" Direction="270" ShadowDepth="1" Opacity="0.35"/>
                                                        </Border.Effect>
                                                        <Border Name="SecondInnerBorder" Background="{Binding Path=FrameBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource SecondInnerBorderFrameStyle}">
                                                            <Border Name="ThirdBorder" BorderBrush="{Binding Path=InnerBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Background="{Binding Path=DialCenterBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource ThirdBorderFrameStyle}">
                                                                <Border Name="InnerBorder" BorderBrush="{Binding Path=DialBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource InnerBorderStyle}"/>
                                                            </Border>
                                                        </Border>
                                                    </Border>
                                                </Border>
                                            </Border>

                                            <Canvas Style="{StaticResource InnerClockGeneralStyle}" FlowDirection="LeftToRight">
                                                <Ellipse Name="CenteredEllipse" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1"  Fill="{Binding Path=CenterCircleBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Style="{StaticResource CenteredEllipseStyle}" />
                                                <ContentPresenter ContentTemplate="{StaticResource FirstPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SecondPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource ThirdPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource FourthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource FifthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SixthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource SeventhPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource EighthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource NinethPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource TenthPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource EleventhPartTemplate}"/>
                                                <ContentPresenter ContentTemplate="{StaticResource TwelfthPartTemplate}"/>
                                                <Path x:Name="HourHand" Style="{StaticResource HourHandDefaultStyle}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="HourHandRotateTransform" CenterX="4" CenterY="39" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hoursConverter}}"></RotateTransform>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Path x:Name="MinuteHand" Style="{StaticResource MinuteHandDefaultStyle}">
                                                    <Path.RenderTransform>
                                                        <RotateTransform x:Name="MinuteHandRotateTransform" CenterX="4.7" CenterY="49" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource minutesConverter}}"></RotateTransform>
                                                    </Path.RenderTransform>
                                                </Path>
                                                <Rectangle x:Name="SecondHand" Style="{StaticResource SecondHandDefaultStyle}">
                                                    <Rectangle.RenderTransform>
                                                        <RotateTransform x:Name="SecondHandRotateTransform" CenterX="0.5" CenterY="55" Angle="{Binding Path=DateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource secondsConverter}}"></RotateTransform>
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>

                                            <StackPanel Name="SmallAmPmPanel" Width="26" Panel.ZIndex="0" Canvas.Top="76" Canvas.Left="45" Visibility="{TemplateBinding IsInsideAmPmVisible, Converter={StaticResource ClockBooleanToVisibilityConverter}}">
                                                    <Border Name="SmallAmPmPanelBorder"
                CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
                BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" 
                BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                        <Grid Name="SmallAmPmPanelGrid" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="16" />
                                                                <ColumnDefinition Width="12" />
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Name="SmallTimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockSmallStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                            <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="3">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition />
                                                                    <RowDefinition />
                                                                </Grid.RowDefinitions>
                                                                <RepeatButton Name="UpInnerRepeatButton" SnapsToDevicePixels="True"  Grid.Row="0" Margin="-1,0,0,0" Width="10" Height="8" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                                <RepeatButton Name="DownInnerRepeatButton" SnapsToDevicePixels="True"  Grid.Row="1" Margin="-1,0,0,0" Width="10" Height="8" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}"/>
                                                            </Grid>
                                                        </Grid>
                                                    </Border>
                                                </StackPanel>
                                            </Canvas>

                                            <StackPanel Name="BigAmPmPanel" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Width="90" 
                      Visibility="{TemplateBinding IsDigitalAmPmVisible, Converter={StaticResource ClockBooleanToVisibilityConverter}}">
                                                <Border Name="BigAmPmPanelBorder" SnapsToDevicePixels="true"
              CornerRadius="{Binding Path=AMPMSelectorCornerRadius, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}"
              BorderThickness="{Binding Path=AMPMSelectorBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" 
              BorderBrush="{Binding Path=AMPMSelectorBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}">
                                                    <StackPanel Name="BigAmPmContainer" Background="{Binding Path=AMPMSelectorBackground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Orientation="Horizontal">
                                                        <TextBlock Name="TimeTextBlock" Foreground="{Binding Path=AMPMSelectorForeground, RelativeSource={RelativeSource AncestorType={x:Type shared:Clock}}}" Grid.Column="0" Style="{StaticResource TimeTextBlockStyle}" Text="{Binding Path=LongTime, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <Grid Name="BigAmPmSelectorGrid" Width="16" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <RepeatButton Name="UpRepeatButton" SnapsToDevicePixels="True"  Margin="0,-1,1,0" Grid.Row="0" Width="15" Height="10" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonUpTemplate}" />
                                                            <RepeatButton Name="DownRepeatButton" SnapsToDevicePixels="True"  Margin="0,-1,1,-1" Grid.Row="1" Width="15" Height="10" Command="shared:Clock.m_AMPMSelect" Template="{StaticResource ScrollBarButtonDownTemplate}" />
                                                        </Grid>
                                                    </StackPanel>
                                                </Border>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Border>
                           
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:Clock.IsDigitalAmPmVisible" Value="False">
                                    <Setter TargetName="BigAmPmPanel" Property="Width" Value="75" />
                                </Trigger>
                                <Trigger Property="shared:Clock.IsDigitalAmPmVisible" Value="True">
                                    <Setter TargetName="BigAmPmPanel" Property="Width" Value="90" />
                                </Trigger>

                                <Trigger Property="shared:Clock.ClockFrameBrush" Value="Transparent">
                                    <Setter TargetName="SecondInnerBorder" Property="Background" Value="{StaticResource BorderBrush }" />
                                    <Setter TargetName="SecondBorder" Property="Background" Value="{StaticResource BorderBrush}" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Bottom">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="96" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="49" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Top">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="16" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="48" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Left">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="10" />
                                </Trigger>
                                <Trigger Property="shared:Clock.AMPMSelectorPosition" Value="Right">
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Top" Value="56" />
                                    <Setter TargetName="SmallAmPmPanel" Property="Canvas.Left" Value="87" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
      
    </Style>
    
</ResourceDictionary>
