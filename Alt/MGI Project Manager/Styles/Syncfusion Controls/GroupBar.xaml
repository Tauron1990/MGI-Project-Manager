<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.Wpf"  
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
          xmlns:tools_controls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF" 
          xmlns:tools_resources="clr-namespace:Syncfusion.Windows.Tools.Controls.Resources;assembly=Syncfusion.Tools.WPF" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework">
    
    <ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

    <tools_controls:HeaderTrimmingTemplate x:Key="HeaderTrimmingTemplate"/>
    <BooleanToVisibilityConverter x:Key="GroupBooleanToVisibilityConverter"/>

    <tools_resources:ResourceWrapper x:Key="GroupResourceWrapperKey"/>
	<tools_controls:AngleConverter x:Key="GroupAngleConverter"/>
    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15"/>
    <MenuScrollingVisibilityConverter x:Key="GroupMenuScrollingVisibilityConverter"/>
    <Geometry x:Key="GroupDownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="GroupUpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>

    <!-- Default image for item of the GroupView -->
    <Image x:Key="DefaultItemImage" Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Controls/GroupBar/Resources/DefaultItemImage.png"/>

    <sys:Double x:Key="NavigationMenuDefaultWidth">18</sys:Double>
    <!--<SolidColorBrush x:Key="Blend_Selected_Foreground" Color="#FF000000"/>-->
    <FontFamily x:Key="GroupFontFamily">Segoe UI</FontFamily>
    
    <!--Animation-->
    <!-- Animating GroupBarItem on selected -->
    <Storyboard x:Key="GroupBarItem_SelectedStoryboard"
		Storyboard.TargetName="ContentHost">
        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
			Duration="0:0:0.5"
			From="0"
			To="1"/>
    </Storyboard>

    <!-- TargetProperty (width or height) depends on orientation and is set in codebehind -->
    <DoubleAnimation x:Key="GroupBarItem_UnselectedAnimation"
		Storyboard.TargetName="ContentHost"
		Duration="0:0:0.1"
		To="0"/>

    <!-- TargetProperty (width or height) depends on orientation and is set in codebehind -->
    <DoubleAnimation x:Key="GroupBarItem_SelectedAnimation"
		Storyboard.TargetName="ContentHost"
		Duration="0:0:0.1"
		From="0"/>

    <!-- Orientation content Storyboard -->
    <Storyboard x:Key="OrientationChangedContentStoryboard"
		Storyboard.TargetName="ContentHost">
        <DoubleAnimation
			Storyboard.TargetProperty="(UIElement.Opacity)"
			BeginTime="0:0:0.0"
			Duration="0:0:1"
			From="0"
			To="1"/>
    </Storyboard>

    <!-- Horizontal orientation Storyboard -->
    <Storyboard x:Key="GroupBar_HorStoryboard">
        <DoubleAnimation
			Storyboard.TargetProperty="(LayoutTransform).(Children)[0].(Angle)"
			Duration="0:0:0.6"
			To="-90"/>
    </Storyboard>

    <!-- Vertical orientation Storyboard -->
    <Storyboard x:Key="GroupBar_VerStoryboard">
        <DoubleAnimation
			Storyboard.TargetProperty="(LayoutTransform).(Children)[0].(Angle)"
			Duration="0:0:0.6"
			To="0"/>
    </Storyboard>

    <!-- Styles -->

    <!-- ToggleButton for MenuItem Template -->
    <ControlTemplate x:Key="ToggleButtonKeyTemplate" TargetType="{x:Type ToggleButton}">
        <Border>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}" 
							  HorizontalAlignment="Left" 
							  VerticalAlignment="Center" 
							  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
							  RecognizesAccessKey="True" 
							  Content="{TemplateBinding ContentControl.Content}"/>
        </Border>
    </ControlTemplate>

   
    <WrapPanel x:Key="Office_NavigationToolBar_UpMenuItemHeader"
			   Margin="4,0,0,0" 
			   Orientation="Horizontal">
        <Border Height="8"
				Width="12"
				VerticalAlignment="Center"
				HorizontalAlignment="Center">
            <Canvas>
                <Path StrokeThickness="1"
					  Data="M 0 6 L 4 6 L 4 9 L 8 9 L 8 6 L 12 6 L 6 0 L 0 6 Z"  Fill="{StaticResource  GlyphBrush}">

                </Path>
            </Canvas>
        </Border>
        <WrapPanel.Triggers>

        </WrapPanel.Triggers>
    </WrapPanel>

    <!-- Down arrow for menu of the NavigationToolbar for Office like visul style -->
    <WrapPanel x:Key="Office_NavigationToolBar_DownMenuItemHeader"
			   Margin="4,0,0,0"
			   Orientation="Horizontal">
        <Border Height="8"
				Width="12"
				VerticalAlignment="Center"
				HorizontalAlignment="Center">
            <Canvas>
                <Path StrokeThickness="1"
					  Data="M 0 3 L 4 3 L 4 0 L 8 0 L 8 3 L 12 3 L 6 8 L 0 3 Z" Fill="{StaticResource  GlyphBrush}" >

                </Path>
            </Canvas>
        </Border>
    </WrapPanel>

    <ControlTemplate x:Key="SeparatorKeyTemplate" TargetType="{x:Type Separator}">
        <!--<DockPanel  Name="panel" Background="Transparent"  Margin="10,0,0,0">
                    <Border DockPanel.Dock="Left"
					Width="20" Name="bd1"
					Height="3"
					Background="red" Margin="0,0,6,0"/>-->
        <Rectangle Name="bd2"  DockPanel.Dock="Top" StrokeDashOffset="1" 
					Height="1" Stroke="{StaticResource BorderBrush}" SnapsToDevicePixels="true"
					Margin="30,1,2,1">
            <Rectangle.StrokeDashArray>
                <sys:Double>2</sys:Double>
            </Rectangle.StrokeDashArray>
        </Rectangle>


      
    </ControlTemplate>


    <!-- Separator Style -->
    <Style x:Key="SeparatorKeyStyle" TargetType="{x:Type Separator}">
        <Setter Property="Template" Value="{StaticResource SeparatorKeyTemplate}"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <!-- MenuItem Template -->
   
    <ControlTemplate x:Key="MenuItemKeyTemplate" TargetType="{x:Type MenuItem}">
        <Border  Name="Bd"
				 BorderThickness="0"
				 SnapsToDevicePixels="True"
				 Background="{StaticResource BackgroundBrush}"  >

            <Grid ShowGridLines="False" Background="{StaticResource BackgroundBrush}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="22" MinWidth="17" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>

                <Border Name="grad" 
						SnapsToDevicePixels="True" 
						Background="{StaticResource BackgroundBrush}" BorderThickness="0,0,1,0" BorderBrush="{StaticResource BorderBrush}" Margin="2,0,0,-3">
                </Border>

                <Border Name="back" 
						BorderThickness="1" CornerRadius="2"
						SnapsToDevicePixels="True"  Margin="1,0,1,0"
						Grid.ColumnSpan="4" 
						Background="{StaticResource BackgroundBrush}"  
						BorderBrush="{StaticResource BorderBrush}"
						Opacity="0">
                    <Border Margin="1" Background="{StaticResource BackgroundBrush}" BorderThickness="0" x:Name="InnerBorder" />
                </Border>

                <Border Name="GlyphPanel"
						Visibility="Hidden"
						HorizontalAlignment="Center"
						Margin="1,2,2,1"
						VerticalAlignment="Center"
						Width="16" BorderBrush="{StaticResource GlyphBrush}" CornerRadius="2" Background="{StaticResource GlyphBrush}"
						Height="16"						
						BorderThickness="1"
						>

                    <Path Name="Glyph" 
						  Fill="{TemplateBinding Border.Background}"
						  Stretch="Fill"
						  Stroke="{StaticResource GlyphBrush}"
						  HorizontalAlignment="Center"
						  Margin="0"
						  VerticalAlignment="Center"
						  Width="7.5"
						  Height="5.875"
						  Data="M5.375,11.125 L7.75,13.25 11.875,8.375"/>
                </Border>

                <ContentPresenter Name="HeaderHost" 
								  Margin="4,2,4,2"
								  RecognizesAccessKey="True" 
								  VerticalAlignment="Center"
								  Grid.Column="1"
								  ContentSource="Header"  
								  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}">
                </ContentPresenter>

                <TextBlock Margin="5,2,0,2"
						   Grid.Column="2"
						   DockPanel.Dock="Right"
                           x:Name="Text"
						   Text="{TemplateBinding MenuItem.InputGestureText}"/>
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
            </Trigger>

            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="back" Property="Opacity" Value="1"/>
                <Setter TargetName="back" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="back" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="InnerBorder" Property="Background"	Value="{StaticResource HoverBackgroundBrush}"/>             
                <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush}"/>
				<Setter Property="Opacity" Value="0.5"/>
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="HeaderHost" Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="CentextMenuTemplate" TargetType="{x:Type ContextMenu}">
        <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"
				Background="{TemplateBinding Background}" Padding="1"  >
            <ItemsPresenter />
        </Border>
    </ControlTemplate>

    <!-- ContextMenu Style -->
	<Style x:Key="ContextMenuKeyStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="Panel.Background" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Padding" Value="1"/>
        <Setter Property="Template" Value="{StaticResource CentextMenuTemplate}"/>
    </Style>


    <Style x:Key="MenuItemKeyStyle" TargetType="{x:Type MenuItem}">
        <!--<Setter Property="DockPanel.Dock" Value="{x:Static Dock.Top}"/>-->
        <Setter Property="Control.Padding" Value="0,2,0,2"/>
        <Setter Property="Margin" Value="0"/>   
        <Setter Property="Template" Value="{StaticResource MenuItemKeyTemplate}"/>     
    </Style>


    <!-- Context Menu for GroupBar -->
    <ContextMenu x:Key="GroupBar_ContextMenu" 
				 ItemContainerStyle="{StaticResource MenuItemKeyStyle}"
				 Style="{StaticResource ContextMenuKeyStyle}">
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemCut}" Command="tools_controls:GroupBar.CutItemCommand" />
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemCopy}" Command="tools_controls:GroupBar.CopyItemCommand" />
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemPaste}" Command="tools_controls:GroupBar.PasteItemCommand" />
        <Separator Style="{StaticResource SeparatorKeyStyle}"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemListView}" Command="tools_controls:GroupBar.ChangeListViewModeCommand"
				  IsCheckable="True"
				  IsChecked="{Binding Path=(PlacementTarget).(tools_controls:GroupView.IsListViewMode), RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemSortAsc}" Command="tools_controls:GroupBar.SortAscCommand" />
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemSortDec}" Command="tools_controls:GroupBar.SortDesCommand" />
        <Separator Style="{StaticResource SeparatorKeyStyle}"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemAddTab}" Command="tools_controls:GroupBar.AddTabCommand"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemDeleteTab}" Command="tools_controls:GroupBar.DeleteTabCommand"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemRenameTab}" Command="tools_controls:GroupBar.RenameTabCommand"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemAddItem}" Command="tools_controls:GroupBar.AddItemCommand"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemRenameItem}" Command="tools_controls:GroupBar.RenameItemCommand"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemDeleteItem}" Command="tools_controls:GroupBar.DeleteItemCommand"/>
        <Separator Style="{StaticResource SeparatorKeyStyle}"/>
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemMoveUp}" Command="tools_controls:GroupBar.MoveUpCommand" />
        <MenuItem Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=GroupbarMItemMoveDown}" Command="tools_controls:GroupBar.MoveDownCommand" />
    </ContextMenu>


    <!-- Scroll Viewer Style-->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.Column="0" Background="{StaticResource ContentBackgroundBrush}">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton x:Name="upButton"
                                      Style="{StaticResource GroupDefaultMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource GroupMenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource GlyphBrush}" x:Name="upPath"
                                  Data="{StaticResource GroupUpArrow}"/>
                        </RepeatButton>
                        <RepeatButton x:Name="downButton"
                                      Style="{StaticResource GroupDefaultMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource GroupMenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource GlyphBrush}" x:Name="downPath"
                                  Data="{StaticResource GroupDownArrow}"/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" SourceName="upButton"
                                 Value="true">
                            <Setter TargetName="upPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="upButton"
                                 Value="true">
                            <Setter TargetName="upPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="downButton"
                                 Value="true">
                            <Setter TargetName="downPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="downButton"
                                 Value="true">
                            <Setter TargetName="downPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupDefaultMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode"
                Value="Hover"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="{DynamicResource BackgroundBrush}"
                               SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Collapse button Template -->
   
    <ControlTemplate x:Key="CollapseButtonTemplateKey" TargetType="{x:Type ToggleButton}">
        <Border x:Name="PART_Border" 
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"
                Width="16"
                Height="15"
                Padding="0"
                Background="{StaticResource BackgroundBrush}" 
                SnapsToDevicePixels="True"
                ToolTip="{Binding Path=CollapseButtonToolTip, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}">
           

            <Path Stretch="Fill" x:Name="CollapseButtonPath" Fill="{StaticResource GlyphBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"  Data="F1 M 401.591,269.486L 399.618,269.486L 399.618,270.486L 398.618,270.486L 398.618,271.458L 397.645,271.458L 397.645,272.431L 396.618,272.431L 396.618,273.431L 397.591,273.431L 397.591,274.487L 398.591,274.487L 398.591,275.486L 399.645,275.486L 399.645,276.486L 401.591,276.486L 401.591,274.487L 400.617,274.487L 400.617,273.486L 399.618,273.486L 399.618,272.514L 400.617,272.514L 400.617,271.486L 401.591,271.486L 401.591,269.486 Z "  Height="7"   Width="4.973" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <TransformGroup>

                        <RotateTransform Angle="360"/>

                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
        </Border>
        <ControlTemplate.Triggers>
         <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}" TargetName="PART_Border"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:GroupBar.IsCollapsed), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
					                             Value="True">
                <Setter TargetName="PART_Border" Property="ToolTip" Value="{Binding Path=ExpandButtonToolTip, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
            </DataTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName ="CollapseButtonPath" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180">

                        </RotateTransform>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <!--<Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="PART_Path1" Property="Data" Value="M 1, 0 L 4, 3 1, 6"/>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M 5, 0 L 8, 3 5, 6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_Border"
                        Property="Background" 
                        Value="{Binding Path=CollapseButtonBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border"
                        Property="Background" 
                        Value="{Binding Path=CollapseButtonMouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:GroupBar.IsCollapsed), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
					                             Value="True">
                            <Setter TargetName="PART_Border" Property="ToolTip" Value="{Binding Path=ExpandButtonToolTip, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
                        </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Header Style-->
    <Style x:Key="HeaderStyle" TargetType="{x:Type Border}">
        <Setter  Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter  Property="TextElement.Foreground"  Value="{StaticResource  ForegroundBrush}"/>
        <Setter  Property="TextBlock.FontSize" Value="13"/>
        <Setter  Property="TextBlock.FontStyle" Value="Normal"/>
        <Setter  Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter  Property="Height" Value="{Binding Path=HeaderHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
        <Setter  Property="BorderThickness" Value="0,0,0,1"/>
        <Setter  Property="CornerRadius" Value="{Binding Path=HeaderTopCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
        <Setter  Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter  Property="TextElement.FontWeight" Value="Bold"/>
        <Setter Property="TextElement.FontFamily" Value="{StaticResource GroupFontFamily}"/>
    </Style>

    <!-- GroupBar StackedMode Template -->
    <ControlTemplate x:Key="Office2007Blue_GroupBarStackedTemplateKey" TargetType="{x:Type tools_controls:GroupBar}">
        <Border   Background="{StaticResource  BackgroundBrush}" BorderBrush="{StaticResource  BorderBrush}" BorderThickness="1">
            <Grid Name="MainHost"
			  SnapsToDevicePixels="True"			 
			  Background="{StaticResource BackgroundBrush}" >
                <Grid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="{Binding Path=RotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                    </TransformGroup>
                </Grid.LayoutTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="{Binding Path=ItemContentLength, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border Name="HeaderHost" Grid.Row="0" Style="{Binding Path=GroupBarHeaderStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					KeyboardNavigation.IsTabStop="False"             >
                    <DockPanel Name="HeaderDockPanel"
                  Margin="{Binding Path=HeaderMarginRight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
                        <Border DockPanel.Dock="Right"
                            Width="5"/>
                        <ToggleButton Name="CloseButton" 
                                  DockPanel.Dock="Right"
                                  Grid.Column="1"
								  ClickMode="Press"
                                  Margin="2"
                                  Width="16"
                                  Height="15"
                                  Visibility="Collapsed"
                                  Command="tools_controls:GroupBar.m_closeButtonCommand">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border Name="CloseButtonContentBorder"
                                                    Background="{Binding Path=CollapseButtonBackground, 
                                                                 RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
                                                    BorderBrush="{StaticResource BorderBrush}">
                                                    <Path Name="pathButton" SnapsToDevicePixels="False" Stretch="Fill" StrokeThickness="1.5"
                                                      Stroke="{StaticResource GlyphBrush}"
                                                      Data="M109,51 L216,142 M215,52 L109,142"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Height="8"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger SourceName="CloseButtonContentBorder" Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="CloseButtonContentBorder" Property="Background" 
                                                            Value="{Binding Path=CollapseButtonMouseOverBackground, 
                                                                    RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ToggleButton Name="CollapseButton" Template="{Binding Path=CollapseButtonTemplate, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
                                  DockPanel.Dock="Right" Margin="0,0,4,0"
                                  Grid.Column="1"
								  ClickMode="Press"
								  IsChecked="{Binding Path=IsCollapsed, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="FrameworkElement.Focusable" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(tools_controls:GroupBar.AllowCollapse), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
					                             Value="False" >
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter Name="HeaderContent"
                                      VerticalAlignment="Center"
				                      ContentSource="SelectedHeader"
                                      Content="{TemplateBinding SelectedHeader}"
                                      ContentTemplateSelector="{StaticResource HeaderTrimmingTemplate}"/>

                    </DockPanel>
                </Border>
                <StackPanel Grid.Row="1">
                    <Border Name="ContentHostBorder"
					Height="{TemplateBinding ItemContentLength}"
					BorderThickness="0"
					Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					Focusable="True">
                        <ScrollViewer Name="ScrollViewer" 
                                  Background="{TemplateBinding Background}"
                                  Focusable="false"
                                  CanContentScroll="false"
                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                  Padding="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Margin="{Binding Path=ScrollViewerMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
                            <ContentPresenter Name="ContentHost" ContentSource="SelectedContent">
                            <ContentPresenter.LayoutTransform>
                                <TransformGroup>
                                        <RotateTransform Angle="{Binding Path=ContentRotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                                </TransformGroup>
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </ScrollViewer>
                    </Border>
                    <ToggleButton Name="CollapsedContentToggleButton"					
					Height="{TemplateBinding ItemContentLength}" 
                    Command="tools_controls:GroupBar.m_popupCommand">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Name="CollapsedContentHostBorder"
                                            Background="{StaticResource BackgroundBrush}"
                                            BorderThickness="1" 
                                            BorderBrush="{StaticResource BorderBrush}">
                                                <Border BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" Background="{StaticResource BackgroundBrush}" x:Name="InnerBorder">
                                                    <TextBlock Name="ToggleButtonText"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Text="{Binding Path=NavigationPaneText,
                                                                 RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
                                                Foreground="{StaticResource  ForegroundBrush}"
                                                FontSize="14">
                                                <TextBlock.LayoutTransform>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="270"/>
                                                    </TransformGroup>
                                                </TextBlock.LayoutTransform>
                                                    </TextBlock>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger SourceName="CollapsedContentHostBorder" Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="CollapsedContentHostBorder" Property="ToolTip" Value="Click to expand groupbar item header"/>
                                                    <Setter TargetName="CollapsedContentHostBorder" Property="Cursor" Value="Hand"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                    <Setter TargetName="CollapsedContentHostBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                    <Setter TargetName="CollapsedContentHostBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Path=(tools_controls:GroupBar.Orientation), 
                                                RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}" Value="Horizontal" >
                                                    <Setter TargetName="ToggleButtonText" Property="LayoutTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="90"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                </StackPanel>
                <tools_controls:GroupBarSplitter x:Name="Splitter"
									Height="8"
									Grid.Row="2"
									DragIncrement="{TemplateBinding ItemHeaderHeight}"
									KeyboardNavigation.IsTabStop="False"
									Focusable="True"
									BorderThickness="1,1,1,0"
									BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
									Margin="0"/>
                <Border Name="StackItemsHost"
					Grid.Row="3" 
					BorderThickness="1,0,1,1"
          Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					BorderBrush="{StaticResource BorderBrush}" 
					Height="Auto"
					Focusable="False">
                    <ItemsPresenter/>
                </Border>
                <tools_controls:NavigationToolbar
				Height="{TemplateBinding StackItemHostHeight}"
				Width="{Binding ElementName=MainHost, Path=ActualWidth}"
				BorderThickness="1,0,1,1"
				Grid.Row="4"
				Background="{StaticResource BackgroundBrush}"
				x:Name="NavigationToolbar"
				KeyboardNavigation.IsTabStop="False"
				Focusable="False"/>
                <Popup Name="PART_Popup"
                       Focusable="False"
                       AllowsTransparency="True"
			           StaysOpen="False"                       
                       IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                               RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
                       PopupAnimation="Fade">
                    <Border Name="PopupResizePart"
                               Background="{StaticResource BackgroundBrush}"
                               BorderThickness="1"
                               BorderBrush="{StaticResource BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="0" Name="PopupGripperRow"/>
                            </Grid.RowDefinitions>
                            <Border Name="PopupInnerBorder" Grid.Row="0" 
                                Margin="2"
                               BorderThickness="0,0,0,2" Background="{StaticResource BackgroundBrush}"
                                BorderBrush="{StaticResource BorderBrush}" >
                                <Grid>
                                    <ScrollViewer Name="popup_ScrollViewer" 
                                  Background="{TemplateBinding Background}"
                                  Focusable="false"
                                  CanContentScroll="false"
                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                  Padding="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Margin="{Binding Path=ScrollViewerMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
                                        <ContentPresenter Name="PopupContentHost" Focusable="True" />
                                    </ScrollViewer>

                                    <Canvas Name="PopupGripper" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                Height="10" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" 
                                Visibility="{Binding Path=ShowGripper, RelativeSource={RelativeSource TemplatedParent}, 
                                    Converter={StaticResource GroupBooleanToVisibilityConverter}}">
                                        <Canvas.RenderTransform>
                                            <RotateTransform Angle="180"/>
                                        </Canvas.RenderTransform>
                                        <Line Stroke="{StaticResource GlyphBrush}" SnapsToDevicePixels="True"  
                                  StrokeThickness="1" 
                                  X1="1" Y1="3" X2="3" Y2="1"/>
                                        <Line Stroke="{StaticResource GlyphBrush}" SnapsToDevicePixels="True" 
                                  StrokeThickness="1" 
                                  X1="1" Y1="6" X2="6" Y2="1"/>
                                        <Line Stroke="{StaticResource GlyphBrush}" SnapsToDevicePixels="True" 
                                  StrokeThickness="1" 
                                  X1="1" Y1="9" X2="9" Y2="1"/>
                                    </Canvas>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <!--<Trigger Property="tools_controls:GroupBar.GroupBarHeaderStyle" Value="{x:Null}">
                <Setter TargetName="HeaderHost" Property="Background" Value="{utilsOuter:SkinObject GroupBar_HeaderBrush}"/>
                <Setter TargetName="HeaderHost" Property="TextBlock.FontSize" Value="14"/>
                <Setter TargetName="HeaderHost" Property="TextBlock.FontStyle" Value="Normal"/>
                <Setter TargetName="HeaderHost" Property="TextBlock.TextAlignment" Value="Center"/>
                <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{utilsOuter:SkinObject TabText_Brush}"/>
                <Setter TargetName="HeaderHost" Property="Height" Value="{Binding Path=HeaderHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
                <Setter TargetName="HeaderHost" Property="BorderThickness" Value="1,1,1,1"/>
                <Setter TargetName="HeaderHost" Property="CornerRadius" Value="{Binding Path=HeaderTopCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>               
                <Setter TargetName="HeaderHost" Property="TextElement.FontWeight" Value="Bold"/>
            </Trigger>-->
            <Trigger Property="ShowGripper" Value="False">
                <Setter TargetName="PopupGripperRow" Property="Height" Value="5"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter TargetName="Splitter" Property="Cursor" Value="SizeWE"/>
            </Trigger>
            <Trigger Property="IsCollapsed" Value="False">
                <Setter TargetName="CollapsedContentToggleButton" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ContentHostBorder" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="HeaderDockPanel" Property="Margin" Value="0"/>
                <Setter TargetName="HeaderContent" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="CollapsedContentToggleButton" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ContentHostBorder" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsToolBarEnabled" Value="True">
                <Setter TargetName="Splitter" Property="Visibility" Value="Visible"/>
                <!--<Setter TargetName="StackItemsHost" Property="Visibility" Value="Visible"/>-->
                <!--<Setter TargetName="NavigationToolbar" Property="Visibility" Value="Visible"/>-->
            </Trigger>
            <Trigger Property="IsToolBarEnabled" Value="False">
                <Setter TargetName="Splitter" Property="Visibility" Value="Collapsed"/>
                <!--<Setter TargetName="StackItemsHost" Property="Visibility" Value="Collapsed"/>-->
                <!--<Setter TargetName="NavigationToolbar" Property="Visibility" Value="Collapsed"/>-->
                <Setter TargetName="HeaderHost" Property="TextBlock.TextAlignment" Value="Left"/>
                <Setter TargetName="HeaderHost" Property="Padding" Value="5,1,1,1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCloseButtonEnabled" Value="True"/>
                    <Condition Property="IsToolBarEnabled" Value="False"/>
                    <Condition Property="IsCollapsed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="CloseButton" Property="Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger SourceName="CloseButton" Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="TextBlock.FontSize" TargetName="HeaderContent" Value="18"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- GroupBar MultipleExpansion Template -->
    <ControlTemplate x:Key="Office2007Blue_GroupBarMultipleExpansionTemplateKey" TargetType="{x:Type tools_controls:GroupBar}">
        <Grid Name="MainHost"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True"
			  Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
            <Grid.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="{Binding Path=RotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                </TransformGroup>
            </Grid.LayoutTransform>
            <Border Name="ItemsHost" 
              CornerRadius="{TemplateBinding CornerRadius}"
              Background="{StaticResource ContentBackgroundBrush}" 
					BorderThickness="1"
					BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
               <ScrollViewer Name="ScrollViewer"
                      Margin="{Binding Path=ScrollViewerMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
							  Focusable="False" 
							  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                    <ItemsPresenter/>
                </ScrollViewer>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- GroupBar NonStackedMode Template -->
    <ControlTemplate x:Key="Office2007Blue_GroupBarNonStackedTemplateKey" TargetType="{x:Type tools_controls:GroupBar}">
        <Grid Name="MainHost"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True"
			  Background="{StaticResource BackgroundBrush}">
            <Grid.LayoutTransform>
                <TransformGroup>
                    <RotateTransform Angle="{Binding Path=RotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                </TransformGroup>
            </Grid.LayoutTransform>
            <Border Name="ItemsHost"
              CornerRadius="{TemplateBinding CornerRadius}"
              Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					BorderThickness="{TemplateBinding BorderThickness}"
					BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}">
                <ScrollViewer Name="ScrollViewer"  
                      Margin="{Binding Path=ScrollViewerMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"  
							  Focusable="False" 
							  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                    <ItemsPresenter Margin="{Binding Path=ScrollViewerMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
                </ScrollViewer>
            </Border>
        </Grid>
    </ControlTemplate>


    <Style x:Key="Office2007BlueGroupBarStyle" TargetType="{x:Type tools_controls:GroupBar}">
        <Setter Property="ItemHeaderHeight" Value="32"/>
        <Setter Property="HeaderHeight" Value="32"/>
        <Setter Property="GroupBarHeaderStyle" Value="{StaticResource HeaderStyle}"/>
        <Setter Property="StackItemHostHeight" Value="32"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FocusManager.IsFocusScope" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel
						KeyboardNavigation.TabNavigation="Local"
						KeyboardNavigation.DirectionalNavigation="Cycle"
						KeyboardNavigation.ControlTabNavigation="None"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource  ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource  BorderBrush}"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="BorderThickness" Value="{utilsOuter:SkinObject BorderThickness}"/>
        <Setter Property="CornerRadius" Value="{utilsOuter:SkinObject CornerRadius}"/>-->

        <!--<Setter Property="DefaultItemImage" Value="{StaticResource DefaultItemImage}"/>-->
        <Setter Property="VerticalOrientationStoryboard" Value="{StaticResource GroupBar_VerStoryboard}"/>
        <Setter Property="HorizontalOrientationStoryboard" Value="{StaticResource GroupBar_HorStoryboard}"/>
        <Setter Property="OrientationChangedContentStoryboard" Value="{StaticResource OrientationChangedContentStoryboard}"/>
        <Setter Property="CollapseButtonBackground" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="CollapseButtonMouseOverBackground" Value="{StaticResource HoverBackgroundBrush}"/>
        <Setter Property="CollapseButtonTemplate" Value="{StaticResource CollapseButtonTemplateKey}"/>

        <Style.Triggers>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="False">
                <!--<Setter Property="ContextMenu" Value="{StaticResource GroupBar_ContextMenu}"/>-->
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="Default">
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarNonStackedTemplateKey}"/>
            </Trigger>
            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="StackMode">
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarStackedTemplateKey}"/>
            </Trigger>
            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="MultipleExpansion">
                <Setter Property="ItemHeaderHeight" Value="18"/>
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarMultipleExpansionTemplateKey}"/>
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.IsEnabledContextMenu" Value="False">
                <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
            </Trigger>
            
              <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="HeaderHeight" Value="45"/>
                <Setter Property="ItemHeaderHeight" Value="45"/>       
                <Setter Property="StackItemHostHeight" Value="45"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource Office2007BlueGroupBarStyle}" TargetType="{x:Type tools_controls:GroupBar}"/>

    <!-- GroupBarItem NonStackedMode Template -->
    <ControlTemplate x:Key="Office2007Blue_GroupBarItemNonStackedTemplateKey" TargetType="{x:Type tools_controls:GroupBarItem}">
        <Grid Name="MainGrid"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>            
                <Border Name="HeaderHost" Cursor="{Binding Path=GroupBarItemCursor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
				  Height="{Binding Path=ItemHeaderHeight, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
					Grid.Row="0"
					Margin="1"
					Background="{TemplateBinding Background}" 
					BorderBrush="{TemplateBinding BorderBrush}" 
					BorderThickness="1">

                    <ContentPresenter Content="{TemplateBinding Header}" x:Name="contentText"
									  ContentTemplate="{TemplateBinding HeaderTemplate}"
									  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>

                </Border>            
            <Border Name="ContentHostBorder"
					Grid.Row="1"
					BorderBrush="{StaticResource BorderBrush}"
					BorderThickness="0,0,0,1"
					Background="{StaticResource BackgroundBrush}">
                <Border.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="{Binding Path=ContentRotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                    </TransformGroup>
                </Border.LayoutTransform>
                <ContentPresenter Name="ContentHost"
								  Content="{TemplateBinding Content}"
								  ContentTemplate="{TemplateBinding ContentTemplate}"
								  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsLastItem" Value="True"/>
                    <Condition Property="IsExpanded" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter  Property="BorderThickness" TargetName="HeaderHost"  Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsLastItem" Value="True"/>
                    <Condition Property="IsExpanded" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderThickness" TargetName="ContentHostBorder"  Value="0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="Transparent"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource GroupBarItem_SelectedStoryboard}"/>
                </MultiTrigger.EnterActions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                
                <Setter TargetName="contentText" Property="TextElement.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="Transparent"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  HoverBackgroundBrush}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>                  
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="Transparent"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  HoverBackgroundBrush}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsContextMenuOpened" Value="True">
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="HeaderHost" Property="Opacity" Value="0.3"/>
            </Trigger>
              <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Margin" TargetName="contentText" Value="5"/>
                <Setter Property="VerticalAlignment" TargetName="contentText" Value="Center"/>
                <Setter Property="TextBlock.FontSize" Value="18"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <PathGeometry x:Key="GroupBarTreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True"
                            StartPoint="0 0"
                            IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6"/>
                            <LineSegment Point="6 0"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <!-- GroupBarItem MultipleExpansion Template -->
    <ControlTemplate x:Key="Office2007Blue_GroupBarItemMultipleExpansionTemplateKey" TargetType="{x:Type tools_controls:GroupBarItem}">
        <Grid Name="MainGrid"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel>
                <Border Name="HeaderHost"  Margin="2,0,2,0"
						Height="{Binding Path=ItemHeaderHeight, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
						ClipToBounds="True"
						Cursor="{Binding Path=GroupBarItemCursor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
							Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"  
						BorderThickness="0.5"   >
                    <DockPanel >
                        <ToggleButton Name="Expander" DockPanel.Dock="Left" 
									  ClickMode="Press"
									  IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FrameworkElement.Focusable" Value="False"/>
                                    <Setter Property="FrameworkElement.Width" Value="16"/>
                                    <Setter Property="FrameworkElement.Height" Value="16"/>
                                    <Setter Property="FrameworkElement.Margin" Value="0,0,0,0"/>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="OuterPath" Background="{StaticResource ContentBackgroundBrush}" Width="16"  Height="16">
                                                    <Path Name="ExpandPath"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Fill="{StaticResource GlyphBrush}"  StrokeThickness="1"
                                                  Stroke="{StaticResource GlyphBrush}" Data="{StaticResource GroupBarTreeArrow}">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="OuterPath" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource ActiveGlyphBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                        <Setter TargetName="OuterPath" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource HoverGlyphBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="UIElement.IsMouseOver" Value="True"/>
                                                            <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="OuterPath" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                                                        <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource ActiveGlyphBrush}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                                        <Setter Property="Height" Value="35"/>
                                                        <Setter Property="Width" Value="35"/>
                                                        <Setter Property="Height" TargetName="OuterPath" Value="17"/>
                                                        <Setter Property="Width" TargetName="OuterPath" Value="17"/>
                                                        <Setter Property="HorizontalAlignment" TargetName="OuterPath" Value="Center"/>
                                                        <Setter Property="VerticalAlignment" TargetName="OuterPath" Value="Center"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>                     
                        </ToggleButton>

                        <ContentPresenter DockPanel.Dock="Top"  Margin="-2" x:Name="contentText"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>
                    </DockPanel>

                </Border>
            </StackPanel>

            <Border Name="ContentHostBorder"
					Grid.Row="1"
					Height="0"
					Width="0" Margin="2"
					BorderBrush="{StaticResource BorderBrush}"
					BorderThickness="0"
					Background="{StaticResource BackgroundBrush}" >
                <Border.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="{Binding Path=ContentRotationAngle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}, Converter={StaticResource GroupAngleConverter}}" />
                    </TransformGroup>
                </Border.LayoutTransform>
                <ContentPresenter Name="ContentHost"
								  Height="{Binding Height, ElementName=ContentHostBorder, UpdateSourceTrigger=PropertyChanged}"
								  Width="{Binding Width, ElementName=ContentHostBorder, UpdateSourceTrigger=PropertyChanged}"
								  Content="{TemplateBinding Content}"
								  ContentTemplate="{TemplateBinding ContentTemplate}"
								  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								  KeyboardNavigation.IsTabStop="False"
								  KeyboardNavigation.TabNavigation="Continue"
								  KeyboardNavigation.ControlTabNavigation="Continue"
								  KeyboardNavigation.DirectionalNavigation="Continue"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsLastItem" Value="True">
                <!--<Setter Property="BorderThickness" TargetName="HeaderHost"  Value="0,0,0,1" />-->
                <Setter Property="BorderThickness" TargetName="ContentHostBorder"  Value="0,0,0,0" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource GroupBarItem_SelectedStoryboard}"/>
                </MultiTrigger.EnterActions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                <Setter TargetName="contentText" Property="TextElement.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                <Setter TargetName="contentText" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="Transparent"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  HoverBackgroundBrush}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <Condition Property="Background" Value="Transparent"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  HoverBackgroundBrush}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsContextMenuOpened" Value="True">
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
             <Trigger Property="IsContextMenuOpened" Value="True">
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="HeaderHost" Property="Opacity" Value="0.3"/>
            </Trigger>
              <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Margin" TargetName="contentText" Value="5"/>
                <Setter Property="VerticalAlignment" TargetName="contentText" Value="Center"/>
                <Setter Property="TextBlock.FontSize" Value="18"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- GroupBarItem StackedMode Template -->

    <ControlTemplate x:Key="Office2007Blue_GroupBarItemStackedTemplateKey" TargetType="{x:Type tools_controls:GroupBarItem}">
        <Grid Name="MainGrid"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True">
            <Grid Name="HeaderGrid"
				  Grid.Row="0"
				  ClipToBounds="True"
				  Cursor="{Binding Path=GroupBarItemCursor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
				  Height="{Binding Path=ItemHeaderHeight, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*"/>
                    <RowDefinition Height="0.5*"/>
                </Grid.RowDefinitions>
                <Border Name="HeaderHost"
						Grid.Row="0"
						Grid.RowSpan="2" Margin="0"
						Background="{StaticResource ContentBackgroundBrush}"
						BorderBrush="Transparent"
						BorderThickness="1">
                    <ContentPresenter Content="{TemplateBinding Header}" x:Name="contentText"
									  ContentTemplate="{TemplateBinding HeaderTemplate}"
									  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
									  KeyboardNavigation.IsTabStop="False"
									  KeyboardNavigation.TabNavigation="Continue"
									  KeyboardNavigation.ControlTabNavigation="Continue"
									  KeyboardNavigation.DirectionalNavigation="Continue"/>
                </Border>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <!--<Condition Property="Background" Value="Transparent"/>-->
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter TargetName="contentText" Property="TextElement.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                <Setter TargetName="contentText" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <!--<Condition Property="Background" Value="Transparent"/>-->
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  HoverBackgroundBrush}"/>
                <Setter  Property="TextBlock.Foreground" Value="{StaticResource HoverForegroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                    <!--<Condition Property="Background" Value="Transparent"/>-->
                </MultiTrigger.Conditions>
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource  ActiveBackgroundBrush}"/>
                <Setter TargetName="HeaderHost" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="contentText" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsContextMenuOpened" Value="True">
                <Setter TargetName="HeaderHost" Property="Background" Value="{StaticResource BackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="HeaderHost" Property="Opacity" Value="0.3"/>
            </Trigger>
              <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Margin" TargetName="contentText" Value="5"/>
                <Setter Property="VerticalAlignment" TargetName="contentText" Value="Center"/>
                <Setter Property="TextBlock.FontSize" Value="18"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="Office2007BlueGroupBarItemStyle" TargetType="{x:Type tools_controls:GroupBarItem}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"  />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/><Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontFamily" Value="{StaticResource GroupFontFamily}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SelectedAnimation" Value="{StaticResource GroupBarItem_SelectedAnimation}"/>
        <Setter Property="UnselectedAnimation" Value="{StaticResource GroupBarItem_UnselectedAnimation}"/>
        <Style.Triggers>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="False">
                <!--<Setter Property="ContextMenu" Value="{StaticResource GroupBar_ContextMenu}"/>-->
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Blend_Selected_Foreground}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource Blend_Selected_Foreground}"/>
                </Trigger>-->


            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="Default">
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarItemNonStackedTemplateKey}"/>
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="StackMode">
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarItemStackedTemplateKey}"/>
            </Trigger>
            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="MultipleExpansion">
                <Setter Property="Template" Value="{StaticResource Office2007Blue_GroupBarItemMultipleExpansionTemplateKey}"/>
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.IsEnabledContextMenu" Value="False">
                <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource Office2007BlueGroupBarItemStyle}" TargetType="{x:Type tools_controls:GroupBarItem}"/>



    <!-- GroupBarItemHeader Template -->
    <Style  TargetType="{x:Type tools_controls:GroupBarItemHeader}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextHorizontalAlignment" Value="{Binding Path=TextAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"/>
        <Setter Property="ImageMargin" Value="0,0,5,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:GroupBarItemHeader}">
                    <DockPanel Name="MainGrid"
				   SnapsToDevicePixels="True"
				   Margin="5,0,0,0">
                        <Border Name="ImageHost"
					DockPanel.Dock="Left"
					Height="{TemplateBinding ImageHeight}"
					Width="{TemplateBinding ImageWidth}"
					HorizontalAlignment="{TemplateBinding ImageHorizontalAlignment}"
					VerticalAlignment="{TemplateBinding ImageVerticalAlignment}"
					Margin="{TemplateBinding ImageMargin}">
                            <Image Name="Image"
					   Source="{TemplateBinding ImageSource}"
					   Visibility="Visible"
					   Stretch="Fill"/>
                        </Border>
                        <Border Name="TextHost"
					DockPanel.Dock="Top"
					Margin="{TemplateBinding TextMargin}"
					HorizontalAlignment="{TemplateBinding TextHorizontalAlignment}"
					VerticalAlignment="{TemplateBinding TextVerticalAlignment}"
					TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBarItem}}}">
                            <StackPanel>
                                <TextBlock Name="Text"
							   HorizontalAlignment="{TemplateBinding TextHorizontalAlignment}"
							   VerticalAlignment="{TemplateBinding TextVerticalAlignment}"
							   Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBarItemHeader}}}"
							   FontWeight="Bold"
							   Margin="1,1,1,1"
							   TextTrimming="CharacterEllipsis"/>
                                <TextBox Name="TextEditor"
							 Visibility="Collapsed"
							 Width="{Binding ActualWidth, ElementName=TextHost}"
							 Height="14"
							 Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBarItemHeader}}}"
							 FontSize="10"
							 Margin="1,0,0,0"
							 Padding="0,0,0,0"
							 BorderThickness="0"/>
                            </StackPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter TargetName="TextEditor" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ImageHost" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TextHost" Property="HorizontalAlignment" Value="Stretch"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBarItem}}}" Value="True"/>
                                <Condition Binding="{Binding Path=VisualMode, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}" Value="StackMode"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"></Setter>
                        </MultiDataTrigger>
                     
                        <DataTrigger Binding="{Binding Path=(tools_controls:GroupBar.IsCollapsed), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
					               Value="True" >
                            <Setter TargetName="ImageHost" Property="Margin" Value="-4,2,0,2"/>
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>    
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- GroupView MultipleExpansion Template -->
    <ControlTemplate x:Key="MetroGroupViewMultipleExpansionTemplateKey" TargetType="{x:Type tools_controls:GroupView}">
        <StackPanel Name="MainHost"
					Background="{StaticResource ContentBackgroundBrush}" 
					TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupView}}}">
            <ItemsPresenter Margin="0,0,0,0" />
        </StackPanel>
    </ControlTemplate>

    <!-- GroupView Default Template -->

    <ControlTemplate x:Key="MetroGroupViewDefaultTemplateKey" TargetType="{x:Type tools_controls:GroupView}">
        <ScrollViewer Name="MainHost"
					  Focusable="False"
					  Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupView}}}"
					  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupView}}}"
					  VerticalScrollBarVisibility="Auto"
					  Style="{StaticResource ScrollViewerStyle}">
            <Border Name="ItemsHost" Padding="0,0,0,0">
                <ItemsPresenter ClipToBounds="True"/>
            </Border>
        </ScrollViewer>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:GroupBarItem.IsAnimating)}"
						 Value="True" >
                <Setter TargetName="MainHost" Property="VerticalScrollBarVisibility" Value="Hidden"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MetroGroupViewStackModeTemplateKey" TargetType="{x:Type tools_controls:GroupView}">
        <Border Name="ItemsHost" Padding="0,0,0,0">
            <ItemsPresenter ClipToBounds="True"/>
        </Border>
    </ControlTemplate>

    <Style  TargetType="{x:Type tools_controls:GroupView}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource  ContentBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
							   VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
							   KeyboardNavigation.TabNavigation="Cycle"
							   KeyboardNavigation.DirectionalNavigation="Continue"
							   KeyboardNavigation.ControlTabNavigation="None"
                 Orientation="{Binding Path=Orientation, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="False">
                <!--<Setter Property="ContextMenu" Value="{StaticResource GroupBar_ContextMenu}"/>-->
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="Default">
                <Setter Property="Template" Value="{StaticResource MetroGroupViewDefaultTemplateKey}"/>
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="StackMode">
                <Setter Property="Template" Value="{StaticResource MetroGroupViewStackModeTemplateKey}"/>
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.VisualMode" Value="MultipleExpansion">
                <Setter Property="Template" Value="{StaticResource MetroGroupViewMultipleExpansionTemplateKey}"/>
            </Trigger>


            <Trigger Property="tools_controls:GroupBar.IsEnabledContextMenu" Value="False">
                <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="tools_controls:GroupView.IsListViewMode" Value="False">
                <Setter Property="IsShowText" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--GroupViewIem Style-->

    <ControlTemplate x:Key="MetroGroupViewItemTemplateKey" TargetType="{x:Type tools_controls:GroupViewItem}">
        <Border Name="MainGrid"
				Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupViewItem}}}"
				BorderBrush="Transparent"
				BorderThickness="1"
				ClipToBounds="True"
				SnapsToDevicePixels="True"
				Cursor="{Binding Path=GroupViewItemCursor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}">
            <Grid>
                <Grid.Resources>
                    <tools_controls:ContentToVisibilityConverter x:Key="ContentToVisibility"/>
                </Grid.Resources>
                <DockPanel Name="ContentHost" Visibility="{Binding Path=Content,ElementName=contentpresenter, Converter={StaticResource ContentToVisibility}}" Margin="3"
						   Width="{Binding Path=InternalContentLength, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
						   HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}">
                    <Border Name="ImageHost"
							DockPanel.Dock="Left"
							Width="{TemplateBinding ImageWidth}"
							Height="{TemplateBinding ImageHeight}"
							HorizontalAlignment="Left"
							Background="{StaticResource BackgroundBrush}">
                        <Image Name="Image"
							   Stretch="Fill"
							   Source="{TemplateBinding ImageSource}"/>
                    </Border>
                    <Border Name="TextHost"
							DockPanel.Dock="Top"
							Padding="3,2,3,2"
							HorizontalAlignment="{Binding Path=TextAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
							TextBlock.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupViewItem}}}" >
                        <StackPanel>
                            <TextBlock Name="Text"
									   Visibility="Visible"
									   TextTrimming="CharacterEllipsis"
									   Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}"/>
                            <TextBox Name="TextEditor"
									 Visibility="Collapsed"
									 Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}"
									 Background="{TemplateBinding Background}"/>
                        </StackPanel>
                    </Border>
                </DockPanel>
                <Border >
                    <DockPanel>
                        <ContentControl x:Name="contentpresenter"
								Content="{TemplateBinding Content}" ContentTemplateSelector="{Binding Path=ItemTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
                         ContentTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
								Width="{Binding Path=InternalContentLength, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
								HorizontalContentAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"/>
                    </DockPanel>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsShowText, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}" Value="False">
                <Setter TargetName="TextHost" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <Trigger Property="IsInEditMode" Value="True">
                <Setter TargetName="TextEditor" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="TextHost" Property="HorizontalAlignment" Value="Stretch"/>
                <Setter TargetName="TextHost" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="MainGrid" Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="MainGrid"  Value="{StaticResource  HoverBackgroundBrush}">
                </Setter>
                <Setter Property="BorderBrush" TargetName="MainGrid"  Value="{StaticResource  HoverBorderBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="MainGrid" Value="{StaticResource ActiveBackgroundBrush}">
                    <!--<Setter.Value>
                        <SolidColorBrush Color="{Binding Path=MouseDownColor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}"/>
                    </Setter.Value>-->
                </Setter>
                <Setter Property="BorderBrush" TargetName="MainGrid"  Value="{StaticResource  ActiveBorderBrush}"/>
                <Setter Property="Foreground" TargetName="Text" Value="{StaticResource ActiveForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="MainGrid" Value="{StaticResource ActiveBackgroundBrush}">
                    <!--<Setter.Value>
                        <SolidColorBrush Color="{Binding Path=SelectedItemColor, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}"/>
                    </Setter.Value>-->
                </Setter>
                <Setter Property="BorderBrush" TargetName="MainGrid"  Value="{StaticResource  ActiveBorderBrush}"/>
                <Setter Property="Foreground" TargetName="Text" Value="{StaticResource ActiveForegroundBrush}"/>            
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="MainGrid" Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="MainGrid" Value="{StaticResource ActiveBackgroundBrush}">                   
                </Setter>
                <Setter Property="BorderBrush" TargetName="MainGrid"  Value="{StaticResource  ActiveBorderBrush}"/>
                <Setter Property="Foreground" TargetName="Text" Value="{StaticResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" TargetName="MainGrid" Value="{Binding Path=SelectedItemMouseHoverColor,RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}">
                   
                </Setter>
                <!--<Setter Property="Background" TargetName="MainGrid" Value="{Binding Path=(tools_controls:GroupViewItem.SelectedItemMouseHoverColor),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupViewItem}}}"/>-->
                <Setter TargetName="MainGrid" Property="BorderBrush" Value="{StaticResource  ActiveBackgroundBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:GroupView.IsListViewMode), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupView}}}"
						 Value="False">
                <Setter TargetName="ContentHost" Property="Width" Value="{Binding Path=Width}" />
            </DataTrigger>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Padding" TargetName="MainGrid" Value="1,8"/>
                <Setter Property="FontSize" TargetName="Text" Value="18"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MetroGroupViewItemStyle"  TargetType="{x:Type tools_controls:GroupViewItem}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}"/>
        <Setter Property="SelectedItemColor" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="MouseDownColor" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="SelectedItemMouseHoverColor" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template" Value="{StaticResource MetroGroupViewItemTemplateKey}"/>

        <Setter Property="ToolTipService.IsEnabled" Value="True"/>
        <Setter Property="ToolTipService.Placement" Value="Mouse"/>

        <Style.Triggers>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="False">
               
            </Trigger>

            <Trigger Property="tools_controls:GroupBar.IsEnabledContextMenu" Value="False">
                <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="ShowToolTip" Value="False">
                <Setter Property="ToolTipService.IsEnabled" Value="False"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource MetroGroupViewItemStyle}" TargetType="{x:Type tools_controls:GroupViewItem}"/>

    <!-- Naviagation Toolbar Template -->
    <ControlTemplate x:Key="MetroNavigationToolbar" TargetType="{x:Type tools_controls:NavigationToolbar}">
        <Grid Name="MainGrid"
			  SnapsToDevicePixels="True"
			  ClipToBounds="True"
			  Background="{StaticResource BackgroundBrush}">
            <Grid.Resources>
                <ResourceDictionary>
                    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template" Value="{StaticResource ToggleButtonKeyTemplate}"/>
                    </Style>
                    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
                        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1">
                                        <ContentPresenter ContentSource="Content"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True" >
                                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </Grid.Resources>
            <Border Name="MainHost"
              CornerRadius="{Binding Path=ToolbarBottomCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
          Background="{StaticResource BackgroundBrush}"  
					BorderBrush="{Binding Path=BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
					BorderThickness="0">
                <WrapPanel Name="MainPanel"
						   Orientation="Horizontal"
						   FlowDirection="RightToLeft">
                    <Menu Name="Menu" Margin="{Binding Path=ToolbarMenuMarginRight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"
						  FlowDirection="LeftToRight"
						  Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" KeyboardNavigation.IsTabStop="False"
					KeyboardNavigation.TabNavigation="None">
                        <MenuItem Name="TopMenuItem"
								  Padding="0"	Margin="0,3,0,3"							 
								  Background="{StaticResource BackgroundBrush}"
								 >
                            <!--Template="{StaticResource MenuItemSubmenuTemplateKey}"
								  ItemContainerStyle="{StaticResource MenuItemKeyStyle}"-->
                            <MenuItem.Header>
                                <Border  BorderThickness="1" Background="{StaticResource BackgroundBrush}" Name="InnerBorder">
                                    <DockPanel Name="MenuImageHost"
										   Background="{Binding Background, ElementName=TopMenuItem}" Margin="1">
                                        <Border Name="MenuImage" SnapsToDevicePixels="True" 
											Height="{TemplateBinding Height}" 
											Width="{Binding Path=MenuDefaultWidth, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NavigationToolbar}}}"
											VerticalAlignment="Center"
											HorizontalAlignment="Center" Margin="-4,0,-4,0">
                                           
                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                                                <Path Stretch="Fill" x:Name="topmenuitempath1" Fill="{StaticResource GlyphBrush}" SnapsToDevicePixels="true " Data="F1 M 386,271.344L 392.667,271.344L 392.667,272.677L 391.312,272.677L 391.312,274.01L 390.021,274.01L 390.021,275.323L 388.646,275.323L 388.646,273.969L 387.354,273.969L 387.354,272.635L 386,272.635L 386,271.344 Z " HorizontalAlignment="Right" Height="3.167"  VerticalAlignment="Top" Width="4.604" Margin="0,0.875,1.063,0">

                                                </Path>

                                                <Path Stretch="Fill" x:Name="topmenuitempath2"  Fill="{StaticResource GlyphBrush}" SnapsToDevicePixels="true " Data="F1 M 386,271.344L 392.667,271.344L 392.667,272.677L 391.312,272.677L 391.312,274.01L 390.021,274.01L 390.021,275.323L 388.646,275.323L 388.646,273.969L 387.354,273.969L 387.354,272.635L 386,272.635L 386,271.344 Z " HorizontalAlignment="Right" Height="2.979"   VerticalAlignment="Top" Width="4.666" Margin="0,0,1.063,0" />
                                            </Grid>
                                        </Border>
                                    </DockPanel>
                                </Border>
                            </MenuItem.Header>
                            <MenuItem Name="SplitterUpMenuItem"
									  Command="tools_controls:GroupBar.SplitterUpCommand" 
									  Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=Showmorebuttons}"
									  StaysOpenOnClick="True">
                                <MenuItem.Icon>
                                    <WrapPanel 
			   Margin="4,0,0,0" 
			   Orientation="Horizontal">
                                        <Border Height="8"
				Width="12"
				VerticalAlignment="Center"
				HorizontalAlignment="Center">
                                            <Canvas>
                                                <Path StrokeThickness="1" x:Name="splittermenuitempath"
					  Data="M 0 6 L 4 6 L 4 9 L 8 9 L 8 6 L 12 6 L 6 0 L 0 6 Z"  Fill="{StaticResource  GlyphBrush}">

                                                </Path>
                                            </Canvas>
                                        </Border>
                                        <WrapPanel.Triggers>

                                        </WrapPanel.Triggers>
                                    </WrapPanel>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Name="SplitterDownMenuItem" 
									  Command="tools_controls:GroupBar.SplitterDownCommand"
									  Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=Showfewerbuttons}"
									  StaysOpenOnClick="True">
                                <MenuItem.Icon>
                                    <WrapPanel 
			   Margin="4,0,0,0"
			   Orientation="Horizontal">
                                        <Border Height="8"
				Width="12"
				VerticalAlignment="Center"
				HorizontalAlignment="Center">
                                            <Canvas>
                                                <Path StrokeThickness="1" x:Name="Splittermenuitempath1"
					  Data="M 0 3 L 4 3 L 4 0 L 8 0 L 8 3 L 12 3 L 6 8 L 0 3 Z" Fill="{StaticResource  GlyphBrush}" >

                                                </Path>
                                            </Canvas>
                                        </Border>
                                    </WrapPanel>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <!--Style="{StaticResource SeparatorKeyStyle}"-->
                            <MenuItem Name="OptionsMenu"
									  Command="tools_controls:GroupBar.OpenOptionsCommand"
									  Header="{Binding Path=NavigationOptionsMenuItemHeader, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:GroupBar}}}"/>
                            <Separator />
                            <!--Style="{StaticResource SeparatorKeyStyle}"-->
                            <MenuItem Name="ButtonsMenu"
									  Header="{Binding Source={StaticResource GroupResourceWrapperKey}, Path=Buttons}"
									 />
                            <!--ItemContainerStyle="{StaticResource MenuItemKeyStyle}"-->
                        </MenuItem>
                    </Menu>
                    <ItemsPresenter Name="ItemsPresenter"/>
                </WrapPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger
				Binding="{Binding Path=IsCollapsed, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
				Value="True">
                <Setter TargetName="Menu" Property="Margin" Value="0"/>
            </DataTrigger>
            <Trigger SourceName="TopMenuItem" Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="topmenuitempath1" Value="{StaticResource ActiveGlyphBrush}"/>
                <Setter Property="Fill" TargetName="topmenuitempath2" Value="{StaticResource ActiveGlyphBrush}"/>

            </Trigger>
            <MultiTrigger  >
                <MultiTrigger.Conditions>
                    <Condition SourceName="TopMenuItem" Property="IsSubmenuOpen" Value="true"/>
                    <Condition SourceName="TopMenuItem" Property="IsPressed" Value="false"/>
                </MultiTrigger.Conditions>

                <Setter Property="Fill" TargetName="topmenuitempath1" Value="{StaticResource ActiveGlyphBrush}"/>
                <Setter Property="Fill" TargetName="topmenuitempath2" Value="{StaticResource ActiveGlyphBrush}"/>
            </MultiTrigger>
            <Trigger SourceName="SplitterUpMenuItem" Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{StaticResource GlyphBrush}" TargetName="splittermenuitempath"/>
            </Trigger>
            <Trigger SourceName="SplitterDownMenuItem" Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{StaticResource GlyphBrush}" TargetName="Splittermenuitempath1"/>
            </Trigger>
            
              
           <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
						Binding="{Binding Path=Orientation, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
						Value="Horizontal"/>
                    <Condition
						Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
						Value="LeftToRight"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Menu" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="MenuImageHost" Property="LayoutTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="-90" />
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>

            <DataTrigger
				Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
				Value="RightToLeft">
                <Setter TargetName="MainPanel" Property="FlowDirection" Value="LeftToRight"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger
				Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}"
				Value="LeftToRight">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="ItemDefaultWidth" Value="30"/>
                <Setter Property="MenuDefaultWidth" Value="25"/>
                <Setter Property="Height"  TargetName="SplitterUpMenuItem" Value="45"/>
                <Setter Property="Height"  TargetName="SplitterDownMenuItem" Value="45"/>
                <Setter Property="Height"  TargetName="OptionsMenu" Value="45"/>
                <Setter Property="Height"  TargetName="ButtonsMenu" Value="45"/>
                <Setter Property="FontSize" TargetName="SplitterUpMenuItem" Value="18"/>
                <Setter Property="FontSize" TargetName="SplitterDownMenuItem" Value="18"/>
                <Setter Property="FontSize" TargetName="OptionsMenu" Value="18"/>
                <Setter Property="FontSize" TargetName="ButtonsMenu" Value="18"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  TargetType="{x:Type tools_controls:NavigationToolbar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:GroupBar}}}" />
        <Setter Property="ItemMargin" Value="1"/>
        <Setter Property="MenuDefaultWidth" Value="{StaticResource NavigationMenuDefaultWidth}"/>
        <Setter Property="ItemDefaultWidth" Value="22"/>
        <Setter Property="Template"  Value="{StaticResource MetroNavigationToolbar}"/>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <!-- NaviagationToolbarItem Template -->
    <ControlTemplate x:Key="MetroNaviagationToolbarItemTemplateKey" TargetType="{x:Type tools_controls:NavigationToolbarItem}">
        <Grid SnapsToDevicePixels="True" ClipToBounds="True">
            <Border Name="ImageHost"
					Width="{Binding Path=ItemDefaultWidth, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NavigationToolbar}}}"
					Background="{StaticResource BackgroundBrush}" 
					BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" 
					Margin="0,5,0,5">
                <StackPanel HorizontalAlignment="Center"
							VerticalAlignment="Center">
                    <Image Name="Image"
						   Source="{TemplateBinding ImageSource}"
						   Visibility="Visible"
						   Height="15"
						   Width="15"
						   Stretch="Fill"/>
                    <Border Name="EmptyImage"
							Visibility="Collapsed"
							BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
							Height="15"
							Width="15"/>
                </StackPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger  Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" TargetName="ImageHost"/>
                <Setter Property="BorderBrush" TargetName="ImageHost" Value="{StaticResource HoverBorderBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource  ActiveBackgroundBrush}" TargetName="ImageHost"/>
                <Setter Property="BorderBrush" TargetName="ImageHost" Value="{StaticResource  ActiveBorderBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource  ActiveBackgroundBrush}" TargetName="ImageHost"/>
                <Setter Property="BorderBrush" TargetName="ImageHost" Value="{StaticResource  ActiveBorderBrush}"/>
            </MultiTrigger>
            <Trigger SourceName="Image" Property="Source" Value="{x:Null}">
                <Setter TargetName="EmptyImage" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Image" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  TargetType="{x:Type tools_controls:NavigationToolbarItem}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Template"  Value="{StaticResource MetroNaviagationToolbarItemTemplateKey}"/>
    </Style>

    <!-- Splitter Template -->
   
    <ControlTemplate x:Key="Office2007Blue_GroupBarSplitterTemplateKey" TargetType="{x:Type tools_controls:GroupBarSplitter}">
        <Border BorderThickness="1"
				BorderBrush="{StaticResource BorderBrush}"
				Background="{StaticResource BackgroundBrush}" Margin="1">
            <Border Width="18" Height="2" HorizontalAlignment="Center" VerticalAlignment="Center"  >
            </Border>
        </Border>
    </ControlTemplate>


    <Style  TargetType="{x:Type tools_controls:GroupBarSplitter}">
        <Setter Property="MinWidth" Value="4"/>
        <Setter Property="MinHeight" Value="4"/>
        <Setter Property="Height" Value="8" />
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template"  Value="{StaticResource Office2007Blue_GroupBarSplitterTemplateKey}"/>
    </Style>
</ResourceDictionary>
