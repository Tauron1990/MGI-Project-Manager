<ResourceDictionary 
	    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:tools_controls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
     xmlns:tools="clr-namespace:Syncfusion.Windows.Tools;assembly=Syncfusion.Tools.WPF"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
>
    <ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

    <tools:SpeedToDurationConverter x:Key="SpeedToDurationConverter" />
    <tools:DoubleToNegativeDoubleConverter x:Key="DoubleToNegativeDoubleConverter" />

    <!--ToggleButton Style-->

    <Style x:Key="Office2010BlueToggleButtonStyle" TargetType="{x:Type tools_controls:ToggleButtonExt}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ToggleButton}">
                    <tools_controls:CheckableBorder MinHeight="19" BorderThickness="0,0,0,1" BorderBrush="{StaticResource HeaderBorderBrush}" x:Name="checkBorder"
                               Background="{StaticResource HeaderBackgroundBrush}">
                        <Border BorderThickness="0" Margin="1" Background="{Binding Path=HeaderBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" BorderBrush="Transparent">
                            <DockPanel>
                                <Border Name="bord" DockPanel.Dock="Right" Margin="0,2,3,2" ClipToBounds="True" Background="Transparent"
							Width="{Binding Path=(tools_controls:TaskBar.ButtonSize), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}"
							Height="{Binding Path=(tools_controls:TaskBar.ButtonSize), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}"
							BorderThickness="0" BorderBrush="Transparent">
                                    <Border Margin="2.5,2.5,2.5,2.5" Opacity="1" Name="LittelButton" RenderTransformOrigin="0.5, 0.5">
                                        <Border.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </Border.RenderTransform>
                                        <Path Stretch="Fill" Fill="{StaticResource GlyphBrush}" x:Name="path1" Data="F1 M 12.1615,8.974L 12.1615,7.99479L 11.1719,7.99479L 11.1719,7.01558L 10.2017,7.01558L 10.2017,6.00521L 9.18229,6.00521L 9.18229,7.01558L 8.16671,7.01558L 8.16671,7.99479L 7.17188,7.99479L 7.17188,8.974L 6.18229,8.974L 6.18229,10.9948L 8.1615,10.9948L 8.1615,9.98437L 9.18095,9.98437L 9.18095,8.974L 10.1523,8.974L 10.1523,9.98437L 11.1719,9.98437L 11.1719,10.9948L 13.1511,10.9948L 13.1511,8.974L 12.1615,8.974 Z " HorizontalAlignment="Center"  Height="4.99"  VerticalAlignment="Center"  Width="6.969" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="180" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Border>
                                </Border>
                                <ContentPresenter Name="ContentSite" Margin="7,2,7,2" HorizontalAlignment="Left" VerticalAlignment="Center"
								  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" RecognizesAccessKey="True"
								  Content="{TemplateBinding ContentControl.Content}" />
                            </DockPanel>
                        </Border>
                        <Border.Triggers>
                        </Border.Triggers>
                    </tools_controls:CheckableBorder>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" SourceName="bord" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bord" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="bord" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Fill" TargetName="path1" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Opacity" Value="1" TargetName="LittelButton" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="True" SourceName="bord" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bord" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="bord" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Fill" TargetName="path1" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Opacity" Value="1" TargetName="LittelButton" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true" />
                                <Condition Property="IsMouseOver" Value="False" SourceName="bord" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bord" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="bord" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Fill" TargetName="path1" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="MinHeight" TargetName="checkBorder" Value="45" />
                            <Setter Property="TextElement.FontSize" TargetName="ContentSite" Value="18" />
                            <Setter Property="TextElement.FontWeight" TargetName="ContentSite" Value="Normal" />
                            <Setter Property="Height" TargetName="bord" Value="25" />
                            <Setter Property="Width" TargetName="bord" Value="25" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource Office2010BlueToggleButtonStyle}" TargetType="{x:Type tools_controls:ToggleButtonExt}" />
    <!-- ExpanderExt Style -->
    <Style x:Key="ExpanderStyle" TargetType="{x:Type tools_controls:ExpanderExt}">
        <Setter Property="TextElement.FontWeight" Value="Normal" />
        <Setter Property="Control.Height" Value="{Binding Path=Height, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" />
        <Setter Property="Control.Width" Value="{Binding Path=Width, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" />
        <Setter Property="Control.HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" />
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}" />
        <Setter Property="Border.BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Border.BorderThickness" Value="{Binding Path=BorderThickness, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Name="GeneralBorder" BorderBrush="{TemplateBinding Border.BorderBrush}"
				BorderThickness="{TemplateBinding Border.BorderThickness}"
				Background="{TemplateBinding Background}" CornerRadius="0"
				SnapsToDevicePixels="True" Padding="{TemplateBinding Control.Padding}">
                        <DockPanel>
                            <tools_controls:ToggleButtonExt x:Name="HeaderSite1"
                              MinWidth="0" Margin="0"  
		   					  FontWeight="{TemplateBinding TextElement.FontWeight}"
							  HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
							  FontStretch="{TemplateBinding TextElement.FontStretch}"
							  VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                       Foreground="{StaticResource HeaderForegroundBrush}"
							  FontFamily="{TemplateBinding TextElement.FontFamily}"
							  FontStyle="{TemplateBinding TextElement.FontStyle}"
							  FontSize="{TemplateBinding TextElement.FontSize}" MinHeight="0"
							  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
							  Padding="{TemplateBinding Control.Padding}"
							  Content="{TemplateBinding HeaderedContentControl.Header}" DockPanel.Dock="Top"
Style="{StaticResource Office2010BlueToggleButtonStyle}"
                TextElement.Foreground="{TemplateBinding Foreground}"
>
                                <ToggleButton.IsChecked>
                                    <Binding Mode="TwoWay" Path="IsExpanded" RelativeSource="{RelativeSource TemplatedParent}"
								 NotifyOnSourceUpdated="False" BindsDirectlyToSource="False" IsAsync="False"
								 NotifyOnValidationError="False" NotifyOnTargetUpdated="False" />
                                </ToggleButton.IsChecked>
                            </tools_controls:ToggleButtonExt>
                            <ContentPresenter x:Name="ExpandSite"
                                             Margin="{TemplateBinding Control.Padding}"
								  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
								  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
								  Focusable="False" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
								  Content="{TemplateBinding ContentControl.Content}" DockPanel.Dock="Bottom" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ItemsPresenter Style -->
    <Style x:Key="ItemsPresenterStyle" TargetType="{x:Type tools_controls:ItemsPresenterExt}">
        <Style.Triggers>
            <Trigger Property="Opacity" Value="0">
                <Setter Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TaskBar Style -->
    <SolidColorBrush Color="#D2E2F7" x:Key="Office2010blueTaskBarBackground" />
    <Style x:Key="Office2010BlueTaskBarStyle" TargetType="{x:Type tools_controls:TaskBar}">
        <Setter	Property="TextBlock.Foreground"  Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Foreground"  Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TaskBar}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding Border.CornerRadius}" TextBlock.Foreground="{TemplateBinding Foreground}"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer  VerticalScrollBarVisibility="Auto">
                            <tools_controls:ItemsPresenterExt Name="TaskBarPresent" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Border.CornerRadius" Value="0" />
        <Setter Property="tools_controls:TaskBar.ButtonSize" Value="14" />
        <Style.Triggers>
            <Trigger Property="tools_controls:TaskBar.GroupOrientation" Value="Horizontal">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource Office2010BlueTaskBarStyle}" TargetType="{x:Type tools_controls:TaskBar}" />

    <!-- TaskBarItem Style -->

    <Style x:Key="Office2010BlueTaskBarItemStyle" TargetType="{x:Type tools_controls:TaskBarItem}">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TaskBarItem}">
                    <StackPanel Name="StackName">
                        <tools_controls:ExpanderExt x:Name="ExpandTemplate" Style="{StaticResource ExpanderStyle}"
							  IsExpanded="{Binding Path=(tools_controls:TaskBar.IsOpened), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" HeaderTemplate="{Binding Path=ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBar}}}"
							  Focusable="False" Header="{TemplateBinding Header}" ClipToBounds="True" ExpandDirection="Down">
                            <ScrollViewer Focusable="False"  VerticalScrollBarVisibility="Disabled">
                                <tools_controls:TaskBarStackPanel  x:Name="PanelPresenter" ClipToBounds="True">
                                    <StackPanel Name="SimplePanel">
                                        <StackPanel.RenderTransform>
                                            <TranslateTransform />
                                        </StackPanel.RenderTransform>
                                        <tools_controls:ItemsPresenterExt x:Name="ItemsPresenter" VerticalAlignment="Bottom" Style="{StaticResource ItemsPresenterStyle}"
										Margin="{Binding Path=(tools_controls:TaskBar.GroupPadding), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBarItem}}}" />
                                    </StackPanel>
                                </tools_controls:TaskBarStackPanel>
                            </ScrollViewer>        
                        </tools_controls:ExpanderExt>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" SourceName="ExpandTemplate"  Value="false">
                            <Setter TargetName ="PanelPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" SourceName="ExpandTemplate"  Value="true">
                            <Setter TargetName ="PanelPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="{Binding Path=GroupWidth, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBar}}}" />
        <Setter Property="Margin" Value="{Binding Path=GroupMargin, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TaskBar}}}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="HeaderBackground" Value="{StaticResource HeaderBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
		
	</Style>

    <Style BasedOn="{StaticResource Office2010BlueTaskBarItemStyle}" TargetType="{x:Type tools_controls:TaskBarItem}" />

</ResourceDictionary>
