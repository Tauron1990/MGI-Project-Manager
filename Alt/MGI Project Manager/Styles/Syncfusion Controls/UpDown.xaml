<ResourceDictionary  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
	>

					
	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


    <FontFamily x:Key="UpDownFontFamily">Segoe UI</FontFamily>
    <shared:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <shared:ClipConverter x:Key="clipConverter" />
    <shared:RadiusConverter x:Key="radiusConverter" />

    <Style x:Key="NumericUpDownDoubleTextBoxStyle"  TargetType="{x:Type shared:DoubleTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="PositiveForeground" Value="{StaticResource ContentForegroundBrush}" />

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:DoubleTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />
                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" IsTabStop="False" IsHitTestVisible="False"
                                                 Background="{TemplateBinding WatermarkBackground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                                 FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                                 Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                                 Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOver_Border" BorderBrush="{StaticResource  HoverBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Visibility="Collapsed" />
                        <Border x:Name="Focused_Border" BorderBrush="{TemplateBinding FocusedBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Visibility="Collapsed" />
                        <Border />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
        <Border Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="0"
                                        SnapsToDevicePixels="true">

            <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Chrome" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ContextMenu x:Key="defaultcontextmenu">
        <MenuItem Header="Cut" Command="Cut" />
        <MenuItem Header="Copy" Command="Copy" />
        <MenuItem Header="Paste" Command="Paste" />
    </ContextMenu>

    <Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background"
                Value="{StaticResource  BackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource  BorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource  ForegroundBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template" Value="{StaticResource RepeatButtonTemplate}" />
    </Style>

    <Style x:Key="MetroUpDownStyle" TargetType="{x:Type shared:UpDown}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="NegativeBackground" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="NegativeBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="ContextMenu" Value="{DynamicResource defaultcontextmenu}" />
        <Setter Property="FontFamily"  Value="{DynamicResource UpDownFontFamily}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="FocusedBackground" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="FocusedBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="FocusedForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="ZeroColor" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:UpDown}">
                    <Grid>
                        <Border x:Name="Border"  CornerRadius="{TemplateBinding CornerRadius}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Border.Clip>
                                <RectangleGeometry
                                              RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource clipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid ClipToBounds="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto">
                                    </ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>

                                <shared:DoubleTextBox x:Name="SecondBlock" Grid.Column="0" Grid.RowSpan="2"  Cursor="None" HorizontalContentAlignment="Center" BorderBrush="Transparent"
                                                 VerticalContentAlignment="Center"  Visibility="Collapsed"  BorderThickness="0"
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 NumberFormat="{TemplateBinding NumberFormatInfo}" EnterToMoveNext="False"
                                                 ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 HorizontalAlignment="Stretch" Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 Focusable="{TemplateBinding Focusable}"   IsTabStop="{TemplateBinding IsTabStop}" />

                                <shared:DoubleTextBox x:Name="textBox" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Collapsed"
                                                 TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 BorderThickness="0" EnterToMoveNext="False" Focusable="{TemplateBinding Focusable}"
                                                 ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 BorderBrush="Transparent" NumberFormat="{TemplateBinding NumberFormatInfo}" Grid.Column="0" Grid.RowSpan="2"
                                                 Style="{StaticResource NumericUpDownDoubleTextBoxStyle}"  Culture="{TemplateBinding Culture}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 IsTabStop="{TemplateBinding IsTabStop}" />

                                <shared:DoubleTextBox x:Name="DoubleTextBox" Grid.Column="0" Grid.RowSpan="2" Padding="{TemplateBinding Padding}" TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextAlignment, Mode=TwoWay}"
                                                 Background="{TemplateBinding Background}"  PositiveForeground="{TemplateBinding Foreground}" EnterToMoveNext="False"
                                                 Focusable="{TemplateBinding Focusable}"  ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                                 CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="0" BorderBrush="Transparent" VerticalAlignment="Stretch"
                                                 HorizontalContentAlignment="Center"  HorizontalAlignment="Stretch"  VerticalContentAlignment="Center"
                                                 MinValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValue, Mode=TwoWay}"
                                                 MaxValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValue, Mode=TwoWay}"
                                                 NumberFormat="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberFormatInfo, Mode=TwoWay}"
                                                 UseNullOption="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UseNullOption, Mode=TwoWay}"
                                                 NullValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NullValue, Mode=TwoWay}"
                                                 Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 Culture="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Culture, Mode=TwoWay}"
                                                 Step="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Step, Mode=TwoWay}"
                                                 ZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZeroColor, Mode=TwoWay}"
                                                 MaxValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValidation, Mode=TwoWay}"
                                                 MinValidation="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValidation, Mode=TwoWay}"
                                                 IsScrollingOnCircle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsScrollingOnCircle, Mode=TwoWay}"
												 NumberDecimalDigits="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NumberDecimalDigits, Mode=TwoWay}"
												 IsReadOnly="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsReadOnly, Mode=TwoWay}"
                                                 MaxValueOnExceedMaxDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MaxValueOnExceedMaxDigit, Mode=TwoWay}"
                                                 MinValueOnExceedMinDigit="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MinValueOnExceedMinDigit, Mode=TwoWay}"
                                                 ApplyZeroColor="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ApplyZeroColor, Mode=TwoWay}"
                                                 ApplyNegativeForeground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnableNegativeColors, Mode=TwoWay}"
                                                IsTabStop="{TemplateBinding IsTabStop}" TabIndex="{TemplateBinding TabIndex}"  Style="{StaticResource NumericUpDownDoubleTextBoxStyle}" GroupSeperatorEnabled="{TemplateBinding GroupSeperatorEnabled}" />

                                <TextBox x:Name="text" Grid.Column="0" Grid.RowSpan="2"  Width="{TemplateBinding Width}"
                                     ContextMenu="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContextMenu}"
                                     Height="{TemplateBinding Height}" BorderThickness="0" BorderBrush="Transparent"
                                     Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}"
                                     Background="{TemplateBinding Background}" IsTabStop="{TemplateBinding IsTabStop}"
                                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Converter={StaticResource NullToVisibilityConverter},Mode=TwoWay}"
                                     Text="{TemplateBinding NullValueText}" HorizontalContentAlignment="Left"
                                     VerticalContentAlignment="Center" />

                                <RepeatButton Focusable="{TemplateBinding Focusable}" x:Name="upbutton" IsTabStop="False" Command="shared:UpDown.m_upValue"  Grid.Row="0" Grid.Column="1" SnapsToDevicePixels="True"  Style="{StaticResource RepeatButtonStyle}" Width="17">
                                    <Path x:Name="upbuttonpath" Stretch="Uniform" Height="4" Width="7" Fill="{StaticResource GlyphBrush}" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                    </Path>
                                </RepeatButton>

                                <RepeatButton Focusable="{TemplateBinding Focusable}" x:Name="downbutton"  IsTabStop="False" Command="shared:UpDown.m_downValue" Grid.Row="2" SnapsToDevicePixels="True"  Grid.Column="1" Style="{StaticResource RepeatButtonStyle}" Width="17">
                                    <Path x:Name="downbuttonpath" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Height="4" Width="7" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                    </Path>
                                </RepeatButton>
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOver_Border" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
                        <Border x:Name="Focused_Border" BorderBrush="{TemplateBinding FocusedBorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" />
                        <Border />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOver_Border" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Focused_Border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MouseOver_Border" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOver_Border" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Focused_Border" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="Border" Property="CornerRadius" Value="0">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,8" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="Width" TargetName="upbutton" Value="40" />
                            <Setter Property="Width" TargetName="downbutton" Value="40" />
                            <Setter Property="Height" TargetName="upbutton" Value="25" />
                            <Setter Property="Height" TargetName="downbutton" Value="25" />
                            <Setter Property="Width" TargetName="upbuttonpath" Value="12" />
                            <Setter Property="Width" TargetName="downbuttonpath" Value="12" />
                            <Setter Property="Height" TargetName="downbuttonpath" Value="8" />
                            <Setter Property="Height" TargetName="upbuttonpath" Value="8" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="upbutton">
                            <Setter Property="Background" TargetName="upbutton" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="upbutton" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Fill" TargetName="upbuttonpath" Value="{StaticResource  HoverGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="downbutton">
                            <Setter Property="Background" TargetName="downbutton" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="downbutton" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Fill" TargetName="downbuttonpath" Value="{StaticResource  HoverGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="upbutton">
                            <Setter Property="Background" TargetName="upbutton" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="upbutton" Value="{StaticResource  ActiveBorderBrush}" />
                            <Setter Property="Fill" TargetName="upbuttonpath" Value="{StaticResource  ActiveGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True" SourceName="downbutton">
                            <Setter Property="Background" TargetName="downbutton" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="downbutton" Value="{StaticResource  ActiveBorderBrush}" />
                            <Setter Property="Fill" TargetName="downbuttonpath" Value="{StaticResource  ActiveGlyphBrush}" />
                        </Trigger>
                        <Trigger Property="IsUpdownFocused" Value="true">
                            <Setter Property="Background"  Value="{Binding Path=FocusedBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=FocusedBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"  Value="{Binding Path=FocusedForeground,RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <Trigger Property="IsValueNegative" Value="true">

                            <Setter Property="Background"   Value="{Binding Path=NegativeBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=NegativeBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"   Value="{Binding Path=NegativeForeground,RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsKeyboardFocusWithin" Value="true" />
                                <Condition Property="EnableFocusedColors" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"  Value="{Binding Path=FocusedBackground,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="BorderBrush"  Value="{Binding Path=FocusedBorderBrush,RelativeSource={RelativeSource Self}}" />
                            <Setter Property="Foreground"     Value="{Binding Path=FocusedForeground,RelativeSource={RelativeSource Self}}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MetroUpDownStyle}" TargetType="{x:Type shared:UpDown}" />
</ResourceDictionary>
