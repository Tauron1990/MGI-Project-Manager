<ResourceDictionary  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:tools_controls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF">

	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

	
    <FontFamily x:Key="RangeSliderFontFamily">Segoe UI</FontFamily>
    <!--Brushes-->

    <!--Custom Template for Horizontal Thumb-->
    <ControlTemplate x:Key="ThumbTemplateKey" TargetType="Thumb">
        <Grid>
            <Border x:Name="Bd"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
            <!--<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Margin="3,0,0,0" />-->
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverBackgroundBrush}">
                </Setter>
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}">

                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}">

                </Setter>
              <Setter TargetName="Bd" Property="Border.Background" Value="{StaticResource ActiveBackgroundBrush}">

              </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TouchThumbTemplateKey" TargetType="Thumb">
        <Grid>
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{StaticResource HoverBackgroundBrush}">
                </Setter>
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}">

                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Custom Template for vertical Thumb-->
    <ControlTemplate x:Key="ThumbTemplateVertical" TargetType="Thumb">
        <Grid>
            <Border x:Name="paththumbsecond"  Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" />
            <!--<Border  Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Margin="0,3,0,0" />-->
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="paththumbsecond" Property="Background" Value="{StaticResource HoverBackgroundBrush}">
                </Setter>
                <Setter TargetName="paththumbsecond" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}">

                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter TargetName="paththumbsecond" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TouchThumbTemplateVertical" TargetType="Thumb">
        <Grid>
            <Border x:Name="paththumbsecond"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="paththumbsecond" Property="Background" Value="{StaticResource HoverBackgroundBrush}">
                </Setter>
                <Setter TargetName="paththumbsecond" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}">

                </Setter>
            </MultiTrigger>
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter TargetName="paththumbsecond" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RepeatButtonTemplate1" TargetType="RepeatButton">
        <Grid>
            <Grid>
                <Path x:Name="BackgroundGradient" Width="16" Height="16" Margin="0,1,0,0" Stretch="Fill" Stroke="{StaticResource BorderBrush}"  StrokeLineJoin="Round" Data="F1 M 1040.29,64.2751C 1044.93,64.2751 1048.68,68.031 1048.68,72.664C 1048.68,77.2971 1044.93,81.0529 1040.29,81.0529C 1035.66,81.0529 1031.9,77.2971 1031.9,72.664C 1031.9,68.031 1035.66,64.2751 1040.29,64.2751 Z " Fill="{StaticResource BackgroundBrush}" />
            </Grid>
            <ContentControl IsTabStop="False"
                              x:Name="contentPresenter"
                              VerticalAlignment="Center" Margin="1,1,0,0" FontSize="16"
                              HorizontalAlignment="Center"
                              Foreground="{StaticResource GlyphBrush}"
>
                <ContentControl.Content>
                    <Viewbox x:Name="viewBox1" Height="8" Width="8"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="upbuttonpath" Width="8" Height="8" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Data="M 0 0 L 3.5 4 L 7 0 Z"  RenderTransformOrigin=".5,.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </ContentControl.Content>
            </ContentControl>


            <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="{StaticResource BackgroundBrush}" Opacity="0" IsHitTestVisible="false" />
            <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource ActiveBorderBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Width" Value="46"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Height" Value="46"></Setter>
                <Setter TargetName="contentPresenter" Property="FontSize" Value="30"></Setter>
                <Setter Property="Width" TargetName="viewBox1" Value="18" />
                <Setter Property="Height" TargetName="viewBox1" Value="18" />
                <Setter Property="Width" TargetName="upbuttonpath" Value="18" />
                <Setter Property="Height" TargetName="upbuttonpath" Value="18" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource HoverBorderBrush}"></Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource HoverGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource HoverBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource HoverGlyphBrush}"></Setter>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource ActiveBorderBrush}">
                </Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource ActiveGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RepeatButtonTemplate2" TargetType="RepeatButton">
        <Grid>
            <Grid>
                <Path x:Name="BackgroundGradient" Width="16" Height="16" Margin="0,1,0,0" Stretch="Fill" Stroke="{StaticResource BorderBrush}" StrokeLineJoin="Round" Data="F1 M 1040.29,64.2751C 1044.93,64.2751 1048.68,68.031 1048.68,72.664C 1048.68,77.2971 1044.93,81.0529 1040.29,81.0529C 1035.66,81.0529 1031.9,77.2971 1031.9,72.664C 1031.9,68.031 1035.66,64.2751 1040.29,64.2751 Z " Fill="{StaticResource BackgroundBrush}" />
            </Grid>
            <ContentControl IsTabStop="False"
                              x:Name="contentPresenter"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" FontSize="16"
                              Margin="1,1,0,0" Foreground="{StaticResource GlyphBrush}"
>
                <ContentControl.Content>
                    <Viewbox x:Name="viewBox1" Height="8" Width="8"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="upbuttonpath" Width="8" Height="8" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Data="M 0 0 L 3.5 4 L 7 0 Z"  RenderTransformOrigin=".5,.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="270" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </ContentControl.Content>
            </ContentControl>

            <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="{StaticResource BackgroundBrush}" Opacity="0" IsHitTestVisible="false" />
            <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource ActiveBorderBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Width" Value="46"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Height" Value="46"></Setter>
                <Setter TargetName="contentPresenter" Property="FontSize" Value="30"></Setter>
                <Setter Property="Width" TargetName="viewBox1" Value="18" />
                <Setter Property="Height" TargetName="viewBox1" Value="18" />
                <Setter Property="Width" TargetName="upbuttonpath" Value="18" />
                <Setter Property="Height" TargetName="upbuttonpath" Value="18" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource HoverBorderBrush}"></Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource HoverGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource HoverBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource HoverGlyphBrush}"></Setter>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource ActiveBorderBrush}">
                </Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource ActiveGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RepeatButtonTemplate3" TargetType="RepeatButton">
        <Grid>

            <Grid>
                <Path x:Name="BackgroundGradient" Width="16" Height="16" Margin="0,1,0,0" Stretch="Fill" Stroke="{StaticResource BorderBrush}" Fill="{StaticResource BackgroundBrush}" StrokeLineJoin="Round" Data="F1 M 1040.29,64.2751C 1044.93,64.2751 1048.68,68.031 1048.68,72.664C 1048.68,77.2971 1044.93,81.0529 1040.29,81.0529C 1035.66,81.0529 1031.9,77.2971 1031.9,72.664C 1031.9,68.031 1035.66,64.2751 1040.29,64.2751 Z ">
                </Path>
            </Grid>

            <ContentControl IsTabStop="False"
                              x:Name="contentPresenter"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" FontSize="16" Margin="1,1,0,0"
                             Foreground="{StaticResource GlyphBrush}"
>
                <ContentControl.Content>
                    <Viewbox x:Name="viewBox1" Height="8" Width="8"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="upbuttonpath" Width="8" Height="8" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Data="M 0 0 L 3.5 4 L 7 0 Z"  RenderTransformOrigin=".5,.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="180" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </ContentControl.Content>
            </ContentControl>

            <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="{StaticResource BackgroundBrush}" Opacity="0" IsHitTestVisible="false" />
            <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource ActiveBorderBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Width" Value="46"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Height" Value="46"></Setter>
                <Setter TargetName="contentPresenter" Property="FontSize" Value="30"></Setter>
                <Setter Property="Width" TargetName="viewBox1" Value="18" />
                <Setter Property="Height" TargetName="viewBox1" Value="18" />
                <Setter Property="Width" TargetName="upbuttonpath" Value="18" />
                <Setter Property="Height" TargetName="upbuttonpath" Value="18" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource HoverBorderBrush}"></Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource HoverGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource HoverBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource HoverGlyphBrush}"></Setter>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource ActiveBorderBrush}">
                </Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource ActiveGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RepeatButtonTemplate4" TargetType="RepeatButton">
        <Grid>
            <Grid>
                <Path x:Name="BackgroundGradient" Width="16" Height="16" Margin="0,1,0,0" Stretch="Fill" Stroke="{StaticResource BorderBrush}" Fill="{StaticResource BackgroundBrush}" StrokeLineJoin="Round" Data="F1 M 1040.29,64.2751C 1044.93,64.2751 1048.68,68.031 1048.68,72.664C 1048.68,77.2971 1044.93,81.0529 1040.29,81.0529C 1035.66,81.0529 1031.9,77.2971 1031.9,72.664C 1031.9,68.031 1035.66,64.2751 1040.29,64.2751 Z ">
                </Path>
            </Grid>
            <ContentControl IsTabStop="False"
                              x:Name="contentPresenter"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" FontSize="16"
                              Margin="1,1,0,0" Foreground="{StaticResource GlyphBrush}"
>
                <ContentControl.Content>
                    <Viewbox x:Name="viewBox1" Height="8" Width="8"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="upbuttonpath" Width="8" Height="8" Stretch="Uniform" Fill="{StaticResource GlyphBrush}" Data="M 0 0 L 3.5 4 L 7 0 Z"  RenderTransformOrigin=".5,.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="360" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Viewbox>
                </ContentControl.Content>
            </ContentControl>
            <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="{StaticResource BackgroundBrush}" Opacity="0" IsHitTestVisible="false" />
            <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource ActiveBorderBrush}" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Width" Value="46"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Height" Value="46"></Setter>
                <Setter TargetName="contentPresenter" Property="FontSize" Value="30"></Setter>
                <Setter Property="Width" TargetName="viewBox1" Value="18" />
                <Setter Property="Height" TargetName="viewBox1" Value="18" />
                <Setter Property="Width" TargetName="upbuttonpath" Value="18" />
                <Setter Property="Height" TargetName="upbuttonpath" Value="18" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                    <Condition Property="IsMouseOver" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource HoverBorderBrush}"></Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource HoverGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource HoverBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource HoverGlyphBrush}"></Setter>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="BackgroundGradient" Property="Stroke" Value="{StaticResource ActiveBorderBrush}">
                </Setter>
                <Setter TargetName="contentPresenter" Property="Foreground" Value="{StaticResource ActiveGlyphBrush}"></Setter>
                <Setter TargetName="BackgroundGradient" Property="Fill" Value="{StaticResource ActiveBackgroundBrush}"></Setter>
                <Setter TargetName="upbuttonpath" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template for RangeSlider Control-->

    <ControlTemplate x:Key="TouchRangeSliderControlTemplate" TargetType="{x:Type tools_controls:RangeSliderControl}">
        <Border x:Name="ControlBorder" Height="{TemplateBinding Height}">
            <Grid x:Name="MainGrid"  Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--Horizontal Template-->
                <Grid Grid.Row="0" x:Name="HorizontalTemplate"  VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Vertical"  Margin="48,0,-48,0">
                        <tools_controls:CustomPanelLabel  TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanellabel" Margin="18,0,0,5" Height="20"  HorizontalAlignment="Left"  VerticalAlignment="Top">
                        </tools_controls:CustomPanelLabel>
                        <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanel" Visibility="Collapsed" Margin="23,0,22,0" HorizontalAlignment="Left" VerticalAlignment="Top"  Height="7">
                        </tools_controls:CustomPanelTicks>
                    </StackPanel>

                    <Grid  Grid.Row="1">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition x:Name="col1" Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="48" />
                        </Grid.ColumnDefinitions>
                        <RepeatButton Grid.Column="0" Width="48"  IsTabStop="False" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding HorizontalLeftRepeatButtonTemplate}"  Cursor="Hand" Interval="100"   x:Name="DecreaseButton">
                        </RepeatButton>
                        <Rectangle x:Name="TrackRectangle"  Stroke="{StaticResource ContentBorderBrush}"  Grid.Column="1"  RadiusX="1" RadiusY="1" Height="10" Margin="5,0,5,0"    Grid.ColumnSpan="4" StrokeThickness="0.5"  Fill="{StaticResource ContentBackgroundBrush}" />
                        <RepeatButton x:Name="BackgroundButton"  IsTabStop="False" Cursor="Hand" Grid.Column="1" Height="10" Grid.ColumnSpan="4" Opacity="0" Margin="5,0,5,0" />
                        <Canvas x:Name="Can1"  Grid.Column="1" Height="18" VerticalAlignment="Top">
                            <Rectangle x:Name="Rect1" Margin="8,2,0,0"  Fill="{StaticResource GlyphBrush}"  RadiusX="1" RadiusY="1" Height="10"  StrokeThickness="{Binding ElementName=TrackRectangle,Path=StrokeThickness,Mode=OneWay}"  Width="{TemplateBinding RangeValue}">
                            </Rectangle>
                            <RepeatButton x:Name="RectButton"  IsTabStop="False" Cursor="Hand" Height="{Binding ElementName=TrackRectangle,Path=Height,Mode=OneWay}" Opacity="0" Width="{TemplateBinding RangeValue}" />
                            <Thumb x:Name="HorizontalThumb"  Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}"    Template="{TemplateBinding HorizontalThumbTemplate}"   Cursor="Hand"   Height="40" Width="25" Grid.Column="2" />
                            <Thumb x:Name="HorizontalThumbSecond" Height="40" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Cursor="Hand" Template="{TemplateBinding HorizontalThumbTemplate}"  Width="25"  Grid.Column="3" />
                        </Canvas>
                        <RepeatButton Grid.Column="5" Width="48"  IsTabStop="False" Cursor="Hand" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding HorizontalRightRepeatButtonTemplate}"   Interval="100"   x:Name="IncreaseButton" Margin="0,0,0,0">
                        </RepeatButton>
                    </Grid>
                    <StackPanel Grid.Row="2" Margin="48,0,-48,0">
                        <tools_controls:CustomPanelTicks Background="{StaticResource ContentBackgroundBrush}"   x:Name="CustomPaneldown" Visibility="Collapsed" Margin="23,0,22,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="7">
                        </tools_controls:CustomPanelTicks>
                        <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanellabeldown" Margin="18,0,0,0" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left">
                        </tools_controls:CustomPanelLabel>
                    </StackPanel>
                </Grid>
                <!--Vertical Template-->
                <Grid Grid.Row="1" x:Name="VerticalTemplate" HorizontalAlignment="Center"  Height="{TemplateBinding ControlGridHeight}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Name="PanelVerticalLeft" Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,48,0,-48">
                        <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanelVerticalLabel"  Width="80" Margin="0,13,5,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                        </tools_controls:CustomPanelLabel>
                        <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanelVertical" Visibility="Collapsed" Background="{StaticResource ContentBackgroundBrush}" Margin="0,23,0,22"    Width="14" VerticalAlignment="Top">
                        </tools_controls:CustomPanelTicks>
                    </StackPanel>
                    <Grid Grid.Column="1" Name="SliderGrid">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="48" />
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Row="0" Height="48" IsTabStop="False" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding VerticalTopRepeatButtonTemplate}"  Cursor="Hand" Width="48" Interval="100" x:Name="VerticalDecreaseButton">
                            </RepeatButton>
                            <Rectangle x:Name="VerticalTrackRectangle" Grid.Row="1"  Stroke="{StaticResource ContentBorderBrush}"  StrokeThickness="{TemplateBinding BorderThickness}"   Width="10" Margin="0,5,0,5"   Grid.RowSpan="4" Fill="{StaticResource ContentBackgroundBrush}" />
                            <RepeatButton x:Name="VerticalBackgroundButton" IsTabStop="False" Cursor="Hand" Grid.Row="1" Width="10" Margin="0,5,0,5" Grid.RowSpan="4" Opacity="0" />
                            <Canvas x:Name="VerticalCan1"  Grid.Row="1" Width="18">
                                <Rectangle x:Name="VerticalRect1" Fill="{StaticResource GlyphBrush}"   RadiusX="1" RadiusY="1" Width="{Binding ElementName=VerticalTrackRectangle,Path=Width,Mode=OneWay}" StrokeThickness="{Binding ElementName=VerticalTrackRectangle,Path=StrokeThickness,Mode=OneWay}" Height="{TemplateBinding RangeValue}">
                                </Rectangle>
                                <RepeatButton x:Name="VerticalRectButton" IsTabStop="False" Opacity="0" Cursor="Hand" Width="{Binding ElementName=VerticalTrackRectangle,Path=Width,Mode=OneWay}" Height="{TemplateBinding RangeValue}" />
                                <Thumb x:Name="VerticalThumb" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Template="{TemplateBinding VerticalThumbTemplate}"  Cursor="Hand" Width="40"  Height="25" Grid.Row="2" />
                                <Thumb x:Name="VerticalThumbSecond" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Template="{TemplateBinding VerticalThumbTemplate}"  Width="40" Cursor="Hand" Height="25"  Grid.Row="3" />
                            </Canvas>
                            <RepeatButton Grid.Row="5" Height="48" IsTabStop="False" Cursor="Hand" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding VerticalDownRepeatButtonTemplate}"  Width="48" Interval="100" x:Name="VerticalIncreaseButton" Margin="0,0,0,0">
                            </RepeatButton>
                        </Grid>
                    </Grid>
                    <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="0,48,0,-48">

                        <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanelVerticaldown" Visibility="Collapsed" Background="{StaticResource ContentBackgroundBrush}" Margin="0,23,0,22"    Width="14" HorizontalAlignment="Left" VerticalAlignment="Top">
                        </tools_controls:CustomPanelTicks>
                        <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanelVerticalLabelDown" Margin="0,13,0,0" HorizontalAlignment="Left"  VerticalAlignment="Top">
                        </tools_controls:CustomPanelLabel>
                    </StackPanel>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="TickPlacement" Value="None">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPaneldown"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVertical"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticaldown"></Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVertical"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticaldown"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPaneldown"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"></Condition>
                    <Condition Property="TickPlacement" Value="Both"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanel"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPaneldown"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanellabel"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanellabeldown"></Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical"></Condition>
                    <Condition Property="TickPlacement" Value="Both"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVertical"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticaldown"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticalLabel"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticalLabelDown"></Setter>
            </MultiTrigger>
            <Trigger Property="TickPlacement" Value="Top">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanel"></Setter>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Down">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPaneldown"></Setter>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Left">
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVertical"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Right">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticaldown"></Setter>
            </Trigger>
            <Trigger Property="LabelVisibility" Value="False">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style  x:Key="MetroRangeSliderControlStyle" TargetType="{x:Type tools_controls:RangeSliderControl}">
        <Setter Property="HorizontalLeftRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate1}" ></Setter>
        <Setter Property="HorizontalRightRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate2}" ></Setter>
        <Setter Property="VerticalTopRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate3}" ></Setter>
        <Setter Property="VerticalDownRepeatButtonTemplate" Value="{StaticResource RepeatButtonTemplate4}" ></Setter>
        <Setter Property="HorizontalThumbTemplate" Value="{StaticResource ThumbTemplateKey}"></Setter>
        <Setter Property="VerticalThumbTemplate" Value="{StaticResource ThumbTemplateVertical}"></Setter>
        <Setter Property="RangeFill" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:RangeSliderControl}">
                    <Border x:Name="ControlBorder" Height="{TemplateBinding Height}">
                        <Grid x:Name="MainGrid"  Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--Horizontal Template-->
                            <Grid Grid.Row="0" x:Name="HorizontalTemplate"  VerticalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Vertical">

                                    <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanellabel" Margin="18,0,0,5" Height="17"  HorizontalAlignment="Left"  VerticalAlignment="Top">
                                    </tools_controls:CustomPanelLabel>
                                    <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanel" Visibility="Collapsed" Margin="23,0,22,0" HorizontalAlignment="Left" VerticalAlignment="Top"  Height="7">
                                    </tools_controls:CustomPanelTicks>
                                </StackPanel>

                                <Grid  Grid.Row="1">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition x:Name="col1" Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Grid.Column="0" Width="18" IsTabStop="False" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding HorizontalLeftRepeatButtonTemplate}"  Cursor="Hand" Interval="100"   x:Name="DecreaseButton">
                                    </RepeatButton>

                                    <Rectangle x:Name="TrackRectangle"  Stroke="{StaticResource ContentBorderBrush}"  Grid.Column="1"  RadiusX="1" RadiusY="1" Height="5" Margin="5,0,5,0"    Grid.ColumnSpan="4" StrokeThickness="0.5" Fill="{StaticResource ContentBackgroundBrush}" />

                                    <RepeatButton x:Name="BackgroundButton" IsTabStop="False" Cursor="Hand" Grid.Column="1" Height="{Binding ElementName=HorizontalThumb,Path=ActualHeight,Mode=OneWay}" Grid.ColumnSpan="4" Opacity="0" Margin="5,0,5,0" />
                                    <Canvas x:Name="Can1"  Grid.Column="1" Height="18">
                                        <Rectangle x:Name="Rect1"  Fill="{TemplateBinding RangeFill}"  RadiusX="1" RadiusY="1" Height="{Binding ElementName=TrackRectangle,Path=Height,Mode=OneWay}"  StrokeThickness="{Binding ElementName=TrackRectangle,Path=StrokeThickness,Mode=OneWay}"  Width="{TemplateBinding RangeValue}">
                                        </Rectangle>
                                        <RepeatButton x:Name="RectButton" Cursor="Hand" IsTabStop="False" Height="{Binding ElementName=TrackRectangle,Path=Height,Mode=OneWay}" Opacity="0" Width="{TemplateBinding RangeValue}" />
                                        <Thumb x:Name="HorizontalThumb"  Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}"   Template="{TemplateBinding HorizontalThumbTemplate}"   Cursor="Hand"   Height="18" Width="8" Grid.Column="2" />
                                        <Thumb x:Name="HorizontalThumbSecond" Height="18" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Cursor="Hand" Template="{TemplateBinding HorizontalThumbTemplate}"  Width="8"  Grid.Column="3" />
                                    </Canvas>

                                    <RepeatButton Grid.Column="5" Width="18" Cursor="Hand" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding HorizontalRightRepeatButtonTemplate}"   Interval="100"   x:Name="IncreaseButton">
                                    </RepeatButton>
                                </Grid>
                                <StackPanel Grid.Row="2">
                                    <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}" Background="{StaticResource ContentBackgroundBrush}"   x:Name="CustomPaneldown" Visibility="Collapsed" Margin="23,0,22,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="7">
                                    </tools_controls:CustomPanelTicks>
                                    <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}"  x:Name="CustomPanellabeldown" Margin="18,0,0,0" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left">
                                    </tools_controls:CustomPanelLabel>
                                </StackPanel>
                            </Grid>
                            <!--Vertical Template-->
                            <Grid Grid.Row="1" x:Name="VerticalTemplate" HorizontalAlignment="Center"  Height="{TemplateBinding ControlGridHeight}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Name="PanelVerticalLeft" Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                                    <tools_controls:CustomPanelLabel x:Name="CustomPanelVerticalLabel"  Width="80" Margin="0,18,5,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                    </tools_controls:CustomPanelLabel>
                                    <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanelVertical" Visibility="Collapsed" Background="{StaticResource BackgroundBrush}" Margin="0,23,0,22"    Width="14" VerticalAlignment="Top">
                                    </tools_controls:CustomPanelTicks>
                                </StackPanel>
                                <Grid Grid.Column="1" Name="SliderGrid">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <RepeatButton Grid.Row="0" Height="18"  IsTabStop="False" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding VerticalTopRepeatButtonTemplate}"  Cursor="Hand" Width="23" Interval="100" x:Name="VerticalDecreaseButton">
                                        </RepeatButton>
                                        <Rectangle x:Name="VerticalTrackRectangle" Grid.Row="1"  Stroke="{StaticResource ContentBorderBrush}"  StrokeThickness="{TemplateBinding BorderThickness}"   Width="5" Margin="0,5,0,5"   Grid.RowSpan="4" Fill="{StaticResource ContentBackgroundBrush}" />
                                        <RepeatButton x:Name="VerticalBackgroundButton" IsTabStop="False" Cursor="Hand" Grid.Row="1" Width="{Binding ElementName=VerticalThumb,Path=ActualWidth,Mode=OneWay}" Margin="0,5,0,5" Grid.RowSpan="4" Opacity="0" />
                                        <Canvas x:Name="VerticalCan1"  Grid.Row="1" Width="18">
                                            <Rectangle x:Name="VerticalRect1" Fill="{TemplateBinding RangeFill}"   RadiusX="1" RadiusY="1" Width="{Binding ElementName=VerticalTrackRectangle,Path=Width,Mode=OneWay}" StrokeThickness="{Binding ElementName=VerticalTrackRectangle,Path=StrokeThickness,Mode=OneWay}"  Height="{TemplateBinding RangeValue}">
                                            </Rectangle>
                                            <RepeatButton x:Name="VerticalRectButton" Opacity="0" IsTabStop="False" Cursor="Hand" Width="{Binding ElementName=VerticalTrackRectangle,Path=Width,Mode=OneWay}" Height="{TemplateBinding RangeValue}" />
                                            <Thumb x:Name="VerticalThumb" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Template="{TemplateBinding VerticalThumbTemplate}"  Cursor="Hand" Width="18"  Height="8" Grid.Row="2" />

                                            <Thumb x:Name="VerticalThumbSecond" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" Template="{TemplateBinding VerticalThumbTemplate}"  Width="18" Cursor="Hand" Height="8"  Grid.Row="3" />
                                        </Canvas>
                                        <RepeatButton Grid.Row="5" Height="18" Cursor="Hand" IsTabStop="False" Visibility="{TemplateBinding HandleButtonVisibility}" Template="{TemplateBinding VerticalDownRepeatButtonTemplate}"  Width="23" Interval="100" x:Name="VerticalIncreaseButton">
                                        </RepeatButton>
                                    </Grid>
                                </Grid>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">

                                    <tools_controls:CustomPanelTicks TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanelVerticaldown" Visibility="Collapsed" Background="{StaticResource ContentBackgroundBrush}" Margin="0,23,0,22"    Width="14" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    </tools_controls:CustomPanelTicks>
                                    <tools_controls:CustomPanelLabel TextElement.Foreground="{StaticResource ContentForegroundBrush}" x:Name="CustomPanelVerticalLabelDown" Margin="0,18,0,0" HorizontalAlignment="Left"  VerticalAlignment="Top">
                                    </tools_controls:CustomPanelLabel>
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="TickPlacement" Value="None">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPaneldown"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVertical"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticaldown"></Setter>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVertical"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticaldown"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPaneldown"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Horizontal"></Condition>
                                <Condition Property="TickPlacement" Value="Both"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanel"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPaneldown"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanellabel"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanellabeldown"></Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Orientation" Value="Vertical"></Condition>
                                <Condition Property="TickPlacement" Value="Both"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVertical"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticaldown"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticalLabel"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticalLabelDown"></Setter>
                        </MultiTrigger>
                        <Trigger Property="TickPlacement" Value="Top">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanel"></Setter>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Down">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPaneldown"></Setter>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Left">
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVertical"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Right">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="CustomPanelVerticaldown"></Setter>
                        </Trigger>
                        <Trigger Property="LabelVisibility" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanellabeldown"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabel"></Setter>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CustomPanelVerticalLabelDown"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="LabelVisibility" Value="False" />
                <Setter Property="HandleButtonVisibility" Value="Collapsed" />
                <Setter Property="TickPlacement" Value="None" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="RangeFill" Value="{StaticResource ActiveBackgroundBrush}" />
                <Setter Property="HorizontalThumbTemplate" Value="{StaticResource TouchThumbTemplateKey}"></Setter>
                <Setter Property="VerticalThumbTemplate" Value="{StaticResource TouchThumbTemplateVertical}"></Setter>
                <Setter Property="Template" Value="{StaticResource TouchRangeSliderControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style  BasedOn="{StaticResource MetroRangeSliderControlStyle}" TargetType="{x:Type tools_controls:RangeSliderControl}" />
</ResourceDictionary>
