<ResourceDictionary  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:propertygrid="clr-namespace:Syncfusion.Windows.PropertyGrid;assembly=Syncfusion.PropertyGrid.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:shared_windows="clr-namespace:Syncfusion.Windows;assembly=Syncfusion.Shared.Wpf">
<ResourceDictionary.MergedDictionaries>







</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />




    <Geometry x:Key="ComboBoxAdv_DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <tools_controls_shared:TemplateToVisibilityConverter x:Key="dropDownTemplateConvertor"/>
    <FontFamily x:Key="ComboBoxAdvFontFamily">Segoe UI</FontFamily>
    <Sync_Shared_Resources:ResourceWrapper x:Key="ComboBoxResourceWrapperKey" />
    <BooleanToVisibilityConverter x:Key="VisiblityConverter" />

    <Style x:Key="BlueComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background"
                Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1"  BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding  Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>

                            <Border Name="Chrome"  Background="{DynamicResource BackgroundBrush}" BorderThickness="1,0,0,0"
                                        BorderBrush="{StaticResource BorderBrush}"  Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">

                                <Path Name="Arrow"
                                  Fill="{StaticResource  GlyphBrush}"
                                  Data="{StaticResource ComboBoxAdv_DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0 Z" TargetName="Arrow" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Width" Value="35" TargetName="Chrome" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxAdvFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="{StaticResource ActiveBorderBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroComboBoxAdvStyle"
           TargetType="{x:Type tools_controls_shared:ComboBoxAdv}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxAdvFocusVisual}" />
        <Setter Property="BorderBrush"
                        Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="Background"
                        Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource   ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ComboBoxAdvFontFamily}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="4,4" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls_shared:ComboBoxAdv}">
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">

                            <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Padding="1"  Background="{StaticResource  ContentBackgroundBrush}">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                    <Grid x:Name="Item_Presenter" Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter='Item_Presenter'}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                            Grid.Row="1"                                                        
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <tools_controls_shared:ComboBoxItemAdv x:Name="PART_SelectAll" 
                                                               Grid.Row="0"
                                                               Margin="0.2,0,0,0.5"                                                               
                                                               Background="{Binding Background, ElementName=DropDownBorder}"
                                                               Visibility="{TemplateBinding AllowSelectAll, Converter={StaticResource VisiblityConverter}}"
                                                               Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=SelectAll}"/>
                                            </Grid>
                                        </ScrollViewer>
                                        <StackPanel x:Name="stackPanel" Grid.Row="1"
                                            Orientation="Horizontal"
                                            Margin="5"
                                            Visibility="{TemplateBinding EnableOKCancel, Converter={StaticResource VisiblityConverter}}"
                                            HorizontalAlignment="Right">
                                            <Button x:Name="PART_OKButton"
                                            Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=OKText}"
                                            Margin="0,0,10,0"
                                            Width="70"
                                            Height="20"/>
                                            <Button x:Name="PART_CancelButton"
                                            Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=CancelText}"
                                            Width="70"
                                            Height="20"/>
                                        </StackPanel>
                                    </Grid>
                                    <ContentControl x:Name="Content_Control" Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter='Content_Control'}" ContentTemplate="{TemplateBinding DropDownContentTemplate}" ></ContentControl>
                                </Grid>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="PART_ToggleButton" Grid.ColumnSpan ="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" />
                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding SelectionBoxTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ItemsControl x:Name="PART_SelectedItems" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <TextBlock Text="{TemplateBinding DefaultText}" x:Name="PART_DefaultText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <TextBox  x:Name="PART_Editable" Visibility="Collapsed"  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"  IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </TextBox>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_Editable" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DefaultText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="Padding" Value="16,10,23,10" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="AllowMultiSelect" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource MetroComboBoxAdvStyle}" TargetType="{x:Type tools_controls_shared:ComboBoxAdv}" />

    <Style x:Key="MetroComboBoxItemAdvStyle"
           TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxItemFocusVisual}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource   ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource   ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ComboBoxAdvFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}">
                    <Border x:Name="Bd" CornerRadius="0"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid Margin="1" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox Margin="2" Visibility="{Binding Path=AllowMultiSelect, Converter={StaticResource VisiblityConverter}, RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" IsHitTestVisible="False"  x:Name="PART_CheckBox" IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                            <ContentPresenter Name="content" Margin="2,1,2,2" Grid.Column="1"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Padding" Value="12,9,10,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0" />
                            <Setter Property="Margin" TargetName="Bd" Value="0" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AllowMultiSelect,RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" Value="True" />
                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Padding" Value="12,6,10,6" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0" />
                            <Setter Property="Margin" TargetName="Bd" Value="0" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsPressed,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  ActiveBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsHighlighted,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=AllowMultiSelect,RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroComboBoxItemAdvStyle}" TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}" />

      
   
    <FontFamily x:Key="PropertyGridFontFamily">Segoe UI</FontFamily>
	
    <propertygrid:PropertyItemToNameConverter x:Key="NameConverter"/>
    <propertygrid:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <propertygrid:LevelToThicknessConverterForTogglebutton x:Key="LevelConverter"/>
    <propertygrid:InvertBooleanVisibilityConverter  x:Key="InvertBooleanVisibilityConverter"/>
    <propertygrid:BooleanToSortDirectionConverter x:Key="BooleanToSortDirectionConverter"/>
    <propertygrid:InvertBooleanConverter x:Key="InvertBooleanConverter"/>



    <!-- Arrow-->
    <PathGeometry x:Key="PropertyGridTreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True"
                            StartPoint="0 0"
                            IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6"/>
                            <LineSegment Point="6 0"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="ToggleGroupButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource  ForegroundBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="LayoutRoot">
                        <syncfusion:VisualStateManager.VisualStateGroups>
                            <syncfusion:VisualStateGroup x:Name="CommonStates">
                                <syncfusion:VisualState x:Name="Disabled"/>
                                <syncfusion:VisualState x:Name="Normal"/>
                                <syncfusion:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </syncfusion:VisualState>
                                <syncfusion:VisualState x:Name="Pressed"/>
                            </syncfusion:VisualStateGroup>
                            <syncfusion:VisualStateGroup x:Name="CheckStates">
                                <syncfusion:VisualState x:Name="Indeterminate"/>
                                <syncfusion:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{Binding Path=Color, Source={StaticResource ActiveGlyphBrush}}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path"/>
                                    </Storyboard>
                                </syncfusion:VisualState>
                                <syncfusion:VisualState x:Name="Unchecked"/>
                            </syncfusion:VisualStateGroup>
                        </syncfusion:VisualStateManager.VisualStateGroups>
                        <Rectangle Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="MouseOverRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{DynamicResource  BorderBrush}" Visibility="Collapsed" Fill="{DynamicResource HoverBackgroundBrush}">
                        </Rectangle>
                        <Rectangle   x:Name="SelectionRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{DynamicResource ActiveBorderBrush}" Fill="{DynamicResource ActiveBackgroundBrush}" Visibility="Collapsed"/>
<Path  x:Name="path" Data="M20.615001,26.349001 L25.712999,26.349001 25.712999,27.342001 20.615001,27.342001 z M13.816002,26.349001 L18.915002,26.349001 18.915002,27.342001 13.816002,27.342001 z M20.615001,23.407002 L25.712999,23.407002 25.712999,24.400002 20.615001,24.400002 z M13.816002,23.407002 L18.915002,23.407002 18.915002,24.400002 13.816002,24.400002 z M13.816002,20.463999 L18.915002,20.463999 18.915002,21.456999 13.816002,21.456999 z M5.4510002,18.315001 L6.3190002,18.315001 6.3190002,20.991001 8.9959998,20.991001 8.9959998,21.860001 6.3190002,21.860001 6.3190002,24.536 5.4510002,24.536 5.4510002,21.860001 2.7740004,21.860001 2.7740004,20.991001 5.4510002,20.991001 z M1.2389999,16.779003 L1.2389999,26.072002 10.531999,26.072002 10.531999,16.779003 z M1.2222827E-06,15.540001 L11.771001,15.540001 11.771001,27.311001 1.2222827E-06,27.311001 z M20.615001,14.579001 L25.712999,14.579001 25.712999,15.572001 20.615001,15.572001 z M13.816002,14.579001 L18.915002,14.579001 18.915002,15.572001 13.816002,15.572001 z M20.615001,11.636002 L25.712999,11.636002 25.712999,12.629002 20.615001,12.629002 z M13.816002,11.636002 L18.915002,11.636002 18.915002,12.629002 13.816002,12.629002 z M20.615001,8.6929989 L25.712999,8.6929989 25.712999,9.6860027 20.615001,9.6860027 z M13.816002,8.6929989 L18.915002,8.6929989 18.915002,9.6860027 13.816002,9.6860027 z M20.615001,5.7510004 L25.712999,5.7510004 25.712999,6.7440004 20.615001,6.7440004 z M13.816002,5.7510004 L18.915002,5.7510004 18.915002,6.7440004 13.816002,6.7440004 z M13.816002,2.8080015 L18.915002,2.8080015 18.915002,3.8010015 13.816002,3.8010015 z M5.4510002,2.7750015 L6.3190002,2.7750015 6.3190002,5.4510012 8.9959998,5.4510012 8.9959998,6.3200016 6.3190002,6.3200016 6.3190002,8.9960008 5.4510002,8.9960008 5.4510002,6.3200016 2.7740004,6.3200016 2.7740004,5.4510012 5.4510002,5.4510012 z M1.2389999,1.2389994 L1.2389999,10.532 10.532,10.532 10.532,1.2389994 z M0,0 L11.771,0 11.771,11.771 0,11.771 z" Fill="{StaticResource GlyphBrush}" Height="15" Canvas.Left="43.121" Stretch="Fill" Canvas.Top="37.042" Width="15"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSortButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource  BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource  ForegroundBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource  BorderBrush}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="LayoutRoot">
                        <syncfusion:VisualStateManager.VisualStateGroups>
                            <syncfusion:VisualStateGroup x:Name="CommonStates">
                                <syncfusion:VisualState x:Name="Disabled"/>
                                <syncfusion:VisualState x:Name="Normal"/>
                                <syncfusion:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </syncfusion:VisualState>
                                <syncfusion:VisualState x:Name="Pressed"/>
                            </syncfusion:VisualStateGroup>
                            <syncfusion:VisualStateGroup x:Name="CheckStates">
                                <syncfusion:VisualState x:Name="Indeterminate"/>
                                <syncfusion:VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectionRect">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0" To="{Binding Path=Color, Source={StaticResource ActiveGlyphBrush}}" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1"/>
                                        <!--<ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2"/>
                                        <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3"/>-->
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="path1" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path2" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path3" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </syncfusion:VisualState>
                                <syncfusion:VisualState x:Name="Unchecked"/>
                            </syncfusion:VisualStateGroup>
                        </syncfusion:VisualStateManager.VisualStateGroups>
                        <Rectangle Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
                        <Rectangle x:Name="MouseOverRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{DynamicResource  HoverBorderBrush}" Visibility="Collapsed" Fill="{DynamicResource  HoverBackgroundBrush}"/>
                        <Rectangle x:Name="SelectionRect" Stretch="Fill" StrokeThickness="0.800067" StrokeLineJoin="Round" Stroke="{DynamicResource  ActiveBorderBrush}" Fill="{DynamicResource  ActiveBackgroundBrush}" Visibility="Collapsed"/>
                        <Path x:Name="path1" Data="M1.3160061,16.219 L9.3820011,16.219 9.3820011,17.011999 3.3900052,25.618999 9.3050014,25.618999 9.3050014,27.150999 0.8510067,27.150999 0.8510067,26.32 6.8660027,17.758999 1.3160061,17.758999 z M5.0549981,1.6239972 C5.0090004,1.9139979 4.9579984,2.1429981 4.9019986,2.3099981 L3.4009997,6.6709984 6.7469989,6.6709984 5.2310006,2.3099981 C5.1840035,2.1679996 5.1359993,1.9389994 5.0849968,1.6239972 z M17.685007,0.00099942505 L20.365008,0.00099942505 20.365008,18.335001 25.026007,18.335001 19.025007,27.331001 13.024006,18.335001 17.685007,18.335001 z M4.094,0 L6.1369983,0 10.200999,10.932001 8.2110025,10.932001 7.2270023,8.1499985 2.9280003,8.1499985 1.9820016,10.932001 0,10.932001 z" Fill="{StaticResource GlyphBrush}" Height="15" Canvas.Left="100.75" Stretch="Fill" Canvas.Top="33.352" Width="15"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.Focusable" Value="False"/>
        <Setter Property="FrameworkElement.Width" Value="16"/>
        <Setter Property="FrameworkElement.Height" Value="16"/>
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{StaticResource BackgroundBrush}" Width="20"  Height="20">
                        <Path Name="ExpandPath"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Fill="{StaticResource GlyphBrush}"  StrokeThickness="1"
                                                  Stroke="{StaticResource GlyphBrush}" Data="{StaticResource PropertyGridTreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource GlyphBrush}"/>
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroPropertyViewItemStyle" TargetType="propertygrid:PropertyViewItem">
	
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="propertygrid:PropertyViewItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="PART_PropertyView">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ResizeColumn1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <ColumnDefinition Width="3" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ResizeColumn2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                            BorderThickness="{TemplateBinding BorderThickness}"  MinHeight="27">
                                <ContentPresenter Grid.Column="1" x:Name="PART_Content" ContentTemplate="{TemplateBinding EditorTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" />

                            </Border>
                            <GridSplitter Width="3" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCategoryEditorEnabled, Converter={StaticResource InvertBooleanVisibilityConverter}}" BorderThickness="1,0,0,0" HorizontalAlignment="Stretch" Grid.Column="1" />
                            <Border x:Name="Bd1" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCategoryEditorEnabled, Converter={StaticResource InvertBooleanVisibilityConverter}}" Background="{TemplateBinding Background}" Grid.Column="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    MinHeight="27"
                    BorderThickness="1" SnapsToDevicePixels="True">
                                <Border x:Name="innerBorder1" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="True">
                                    <ContentPresenter Grid.Column="1" x:Name="PART_Content1" ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EditorValueTemplate}" Content="{TemplateBinding HeaderedItemsControl.Header}" />
                                </Border>
                            </Border>
                        </Grid>
                       
                        <ItemsPresenter x:Name="SubItemPresenter" Margin="0,0,0,0"  Grid.Row="1" Visibility="{Binding ElementName=PART_Toggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <ToggleButton Style="{StaticResource ExpanderButtonStyle}" HorizontalAlignment="Left" x:Name="PART_Toggle" Visibility="{Binding HasItems, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="{Binding PropertyLevel, Mode=OneWay, Converter={StaticResource LevelConverter}}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource  ActiveBackgroundBrush}" />
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource  ActiveForegroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource  ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Height" TargetName="Bd" Value="50"/>
                            <Setter Property="TextElement.FontSize" TargetName="PART_Content" Value="18"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroPropertyViewItemStyle}" TargetType="{x:Type propertygrid:PropertyViewItem}"/>

    <Style x:Key="MetroPropertyCatagoryViewItemStyle" TargetType="propertygrid:PropertyCatagoryViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="propertygrid:PropertyCatagoryViewItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent">
                        <Grid Background="{TemplateBinding LineColor}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*"/>
                                <RowDefinition Height="5*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="innerBorder">
                                <ToggleButton x:Name="PART_Expander" Margin="2,5,2,2"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"  
                                      Opacity="1" IsThreeState="False"  Width="15" Height="15"
                                      Style="{StaticResource ExpanderButtonStyle}">
                                </ToggleButton>
                            </Border>
                            <ContentControl Content="{TemplateBinding Header}" FontWeight="Bold" x:Name="PART_Header" Background="{TemplateBinding LineColor}" Grid.Column="1" FontFamily="Segoe WP" Foreground="{TemplateBinding CategoryForeground}"  Margin="5,5,0,0"/>

                            <Border Background="{TemplateBinding Background}" Grid.Column="1" Grid.Row="1" Margin="0,4,0,0">
                                <ItemsPresenter Grid.Column="1" Grid.Row="1" Visibility="Collapsed" x:Name="PART_Presenter"/>
                            </Border>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="PART_Presenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Height" TargetName="innerBorder" Value="30"/>
                            <Setter TargetName="PART_Header" Property="Height" Value="30"/>
                            <Setter TargetName="PART_Header" Property="TextElement.FontSize" Value="18"/>
                            <Setter TargetName="PART_Header" Property="Margin" Value="1"/>
                            <Setter TargetName="PART_Expander" Property="Height" Value="24"/>
                            <Setter TargetName="PART_Expander" Property="Width" Value="24"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroPropertyCatagoryViewItemStyle}" TargetType="{x:Type propertygrid:PropertyCatagoryViewItem}"/>

    <Style x:Key="MetroPropertyViewStyle" TargetType="propertygrid:PropertyView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="propertygrid:PropertyView">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer"
                                              VerticalScrollBarVisibility="Auto" 
                                              HorizontalScrollBarVisibility="Disabled"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              Background="{TemplateBinding Background}" 
                                              BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter x:Name="PART_Presenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroPropertyViewStyle}" TargetType="{x:Type propertygrid:PropertyView}"/>

    <ControlTemplate x:Key="VS2010CloseButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="brdBack" BorderThickness="1" SnapsToDevicePixels="True" 
                BorderBrush="{StaticResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Stroke="{DynamicResource  GlyphBrush}"
				StrokeThickness="1.5"
                Data="M1,1 L7,7 M1,7 L7,1"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="brdBack" Value="{DynamicResource  HoverBackgroundBrush}"/>
                <Setter Property="Stroke" TargetName="pathButton" Value="{DynamicResource HoverGlyphBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MetroPropertyGridStyle" TargetType="propertygrid:PropertyGrid">
        <Setter Property="LineColor" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="ViewBackgroundColor" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="CategoryForeground" Value="{DynamicResource  ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DescriptionPanelHeight" Value ="55"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource PropertyGridFontFamily}"/>
        <Setter Property="Foreground" Value="{DynamicResource  ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="propertygrid:PropertyGrid">
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="{TemplateBinding DescriptionPanelHeight}"/>
                    </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Background="{DynamicResource  BackgroundBrush}" x:Name="InnerGrid">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ToggleButton Visibility="{TemplateBinding ButtonPanelVisibility}"  ToolTip="Categorized"  x:Name="PART_GroupButton" HorizontalAlignment="Left" VerticalAlignment="Top" Width="21" Height="21" Margin="5"
                                    IsChecked="{Binding EnableGrouping,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}" Style="{StaticResource ToggleGroupButtonStyle}">
                      </ToggleButton>

                      <ToggleButton Visibility="{TemplateBinding ButtonPanelVisibility}"  ToolTip="Alphabetical"  Grid.Column="1" x:Name="PART_SortButton" HorizontalAlignment="Left" VerticalAlignment="Top" Width="21" Height="21" Margin="0,5,5,5"
                                    IsChecked="{Binding EnableGrouping,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay,Converter={StaticResource InvertBooleanConverter}}"
                                    Style="{StaticResource ToggleSortButtonStyle}">
                      </ToggleButton>

                      <Border Grid.Column="2" Background="White" BorderBrush="{DynamicResource  BorderBrush}" BorderThickness="1" Margin="4,5,4,5" Visibility="{TemplateBinding SearchBoxVisibility}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="22"/>
                          </Grid.ColumnDefinitions>
                          <syncfusion:MaskedTextBox x:Name="PART_SearchText" Margin=".5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}"
                                        WatermarkText="Search"  WatermarkTextIsVisible="True" Grid.Column="0" Cursor="IBeam" />
                          <Button x:Name="PART_Clear" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Width="20" Height="20" Grid.Column="1" Template="{StaticResource VS2010CloseButtonTemplate}">
                          </Button>
                        </Grid>
                      </Border>

                    </Grid>
                    <Grid Grid.Row="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Border Background="{DynamicResource  BackgroundBrush}" x:Name="Sideborder" Width="14" Visibility="Collapsed"/>
                      <propertygrid:PropertyView Grid.Column="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Properties}" EnableGrouping="{TemplateBinding EnableGrouping}"
                                      ViewBackgroundColor="{Binding Path=ViewBackgroundColor,RelativeSource={RelativeSource TemplatedParent}}"
                                      LineColor="{Binding Path=LineColor,RelativeSource={RelativeSource TemplatedParent}}"
                                      CategoryForeground="{Binding CategoryForeground,RelativeSource={RelativeSource TemplatedParent}}"
                                      EditableBackground="{Binding EditableBackground,RelativeSource={RelativeSource TemplatedParent}}"
                                      EditableFontWeight ="{Binding EditableFontWeight,RelativeSource={RelativeSource TemplatedParent}}"
                                      ReadOnlyBackground="{Binding ReadOnlyBackground,RelativeSource={RelativeSource TemplatedParent}}"
                                      ReadOnlyFontWeight="{Binding ReadOnlyFontWeight,RelativeSource={RelativeSource TemplatedParent}}"
                                       x:Name="PART_PropertyView"/>
                    </Grid>
                    <GridSplitter Grid.Row="2" VerticalAlignment="Center" Visibility="{TemplateBinding DescriptionPanelVisibility}" BorderBrush="{DynamicResource  BorderBrush}" BorderThickness="0 1 0 0" Background="{DynamicResource BackgroundBrush}"  HorizontalAlignment="Stretch" Height="3"/>
                    <Border Grid.Row="3" Visibility="{TemplateBinding DescriptionPanelVisibility}" BorderBrush="{DynamicResource  BorderBrush}" BorderThickness="0 1 0 0" Background="{DynamicResource  BackgroundBrush}" >
                      <StackPanel >
                        <TextBlock Margin="5" FontWeight="Bold"  FontFamily="Segoe WP" Text="{Binding Path=SelectedItem, ElementName=PART_PropertyView, Converter={StaticResource NameConverter}, ConverterParameter=Name}"/>
                        <TextBlock Margin="5" TextWrapping="Wrap"  FontFamily="Segoe WP" Text="{Binding Path=SelectedItem, ElementName=PART_PropertyView, Converter={StaticResource NameConverter}, ConverterParameter=Description}"/>
                      </StackPanel>
                    </Border>
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="CollapseSidePanel" Value="False">
                    <Setter Property="Border.Visibility" TargetName="Sideborder" Value="Visible"/>
                  </Trigger>
                  <Trigger Property="EnableGrouping" Value="True">
                    <Setter Property="Border.Visibility" TargetName="Sideborder" Value="Collapsed"/>
                  </Trigger>
                        <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Height" TargetName="InnerGrid" Value="53"/>
                            <Setter Property="Height" TargetName="PART_GroupButton" Value="35"/>
                            <Setter Property="Width" TargetName="PART_GroupButton" Value="35"/>
                            <Setter Property="Height" TargetName="PART_SortButton" Value="35"/>
                            <Setter Property="Width" TargetName="PART_SortButton" Value="35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroPropertyGridStyle}" TargetType="{x:Type propertygrid:PropertyGrid}"/>

    <Style TargetType="{x:Type propertygrid:ItemsSourceControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type propertygrid:ItemsSourceControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock  x:Name="Part_Text" Text="(Collection)" Grid.Column="0"/>
                            <Button x:Name="Part_Btn" Grid.Column="1" Content="..."/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
