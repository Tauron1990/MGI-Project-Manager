<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
    xmlns:Microsoft_Windows_Aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

    <!-- RadioButton -->

 <!-- ResizeGrip -->
    
    <!-- Default -->

    <Thickness x:Key="BorderThickness.Default">1,1,1,1</Thickness>

    <!-- Button -->

    <Thickness x:Key="ComboBoxItemBorderThickness.Blue">1</Thickness>
    <Thickness x:Key="ProgressBarBorderThickness.Blue">1</Thickness>
    

    <!-- CheckBox -->

    <!-- RadioButton -->

    <!-- ListBox -->
    <!-- Menu -->
    
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect.Default"
                         StartPoint="0,1"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight.Default"
                         RadiusX="1"
                         RadiusY="1"
                         RelativeTransform="1,0,0,1,-0.5,0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Color="#60FFFFC4"
                          Offset="0"/>
            <GradientStop Color="#00FFFFC4"
                          Offset="1"/>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0C000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.3"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight.Default"
                         StartPoint="0,0"
                         EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#20000000"
                          Offset="0.7"/>
            <GradientStop Color="#0C000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill.Default" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#FF000000"
                          Offset="0.4"/>
            <GradientStop Color="#FF000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
	
    <!--Scroll Bar Styles New-->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->

    <Style x:Key="DefaultButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background"                                
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="innerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Padding" Value="11,8,11,8"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Effect" TargetName="Chrome">
                                <Setter.Value>
                                    <DropShadowEffect Direction="315" ShadowDepth="2" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="CornerRadius" TargetName="Chrome" Value="6"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="6"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="{x:Type Button}"/>
           
           <!--ToggleButton-->
    <!--<Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    
    <Style x:Key="DefaultToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="1">
                        <Border x:Name="innerBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Padding" Value="11,8,11,8"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Effect" TargetName="Chrome">
                                <Setter.Value>
                                    <DropShadowEffect Direction="315" ShadowDepth="2" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="CornerRadius" TargetName="Chrome" Value="6"/>
                            <Setter Property="CornerRadius" TargetName="innerBorder" Value="6"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="innerBorder" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="{x:Type ToggleButton}"/>

    <!-- CheckBox -->

    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               StrokeThickness="1"
                               Stroke="{StaticResource GlyphBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               StrokeThickness="1"
                               Stroke="{StaticResource GlyphBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TouchCheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="28,2,-2,2"
                               StrokeThickness="1"
                               Stroke="{StaticResource GlyphBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="TouchCheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <BulletDecorator Background="{StaticResource ContentBackgroundBrush}" 
                                     SnapsToDevicePixels="true">
            <BulletDecorator.Bullet>
                <Border x:Name="border1" Width="30" Height="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    <Border x:Name="border2" BorderBrush="{StaticResource BorderBrush}" BorderThickness="2">
                        <Border x:Name="border3" BorderThickness="1" Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}">
                            <Path x:Name="path" Data="M1051.2271,374.845 L1057.6155,380.27524 L1069.755,363.02576" Height="23" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Width="25" StrokeThickness="4"/>
                        </Border>
                    </Border>
                </Border>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.FontSize="18"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent"
                                 Value="true">
                <Setter Property="FocusVisualStyle"
                                    Value="{StaticResource TouchCheckRadioFocusVisual}"/>
                <Setter Property="Padding"
                                    Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource GlyphBrush}"/>
            </Trigger>
            <Trigger  Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter TargetName="border2" Property="BorderBrush" Value="{StaticResource ActiveBackgroundBrush}" />
                <Setter TargetName="border3"  Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="border3" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="border3" Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="DefaultCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"                                
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Background="Transparent" x:Name="bulletDecorator" SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="border1" Width="13" Height="13" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Border x:Name="border2" BorderThickness="1" SnapsToDevicePixels="True">
                                    <Border x:Name="border3" BorderThickness="1" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                        <Canvas SnapsToDevicePixels="True">
                                            <Path x:Name="path" Fill="{StaticResource GlyphBrush}"  Stretch="Fill" Height="8" Width="8" SnapsToDevicePixels="True" Opacity="0" Data="F1 M 424.575,325.964L 426.491,324.964L 428.158,327.297L 431.741,320.214L 433.574,321.464L 429.158,330.131L 427.074,330.131L 424.575,325.964 Z "/>
                                        </Canvas>
                                    </Border>
                                </Border>
                            </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter TargetName="border3"  Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="path"  Property="Fill" Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="border3" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="path"  Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                            
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter TargetName="border3"  Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="path"  Property="Fill" Value="{StaticResource GlyphBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border1" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border3" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="path"  Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                            
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Padding" Value="5,2,0,0"/>
                <Setter Property="Template" Value="{StaticResource TouchCheckBoxTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}"/>

    <DataTemplate DataType="{x:Type CollectionViewGroup}">
        <TextBlock Text="{Binding Path=Name}"/>
    </DataTemplate>


    <!-- ComboBox -->


    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                 <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1"  BorderThickness="{TemplateBinding BorderThickness}"                               
                                        Background="{StaticResource ContentBackgroundBrush}"
                                        BorderBrush="{StaticResource ContentBorderBrush}"                                       
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>

                            <Border Name="Chrome"  Background="{TemplateBinding Background}" BorderThickness="1,0,0,0"  
                                        BorderBrush="{TemplateBinding BorderBrush}"  Grid.Column="1" Width="16">
                                    <Path Name="Arrow"                                  
                                  Data="{StaticResource DownArrowGeometry}" Fill="{StaticResource GlyphBrush}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0 Z" TargetName="Arrow"/>
                            <Setter Property="Width" Value="35" TargetName="Chrome"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="True">                           
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"  Value="true" SourceName="Chrome"/>
                                <Condition Property="IsChecked"    Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>                         
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>

                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="Chrome1" Value="True">                          
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="Chrome" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"  Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            
            </Setter.Value>
        </Setter>
    </Style>
   
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>-->
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="#00FFFFFF" BorderBrush="{StaticResource ContentBorderBrush}" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                 <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1"  BorderThickness="{TemplateBinding BorderThickness}"                               
                                        Background="{StaticResource ContentBackgroundBrush}"
                                        BorderBrush="{StaticResource ContentBorderBrush}"                                       
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>

                            <Border Name="Chrome"  Background="{TemplateBinding Background}" BorderThickness="1,0,0,0" 
                                        BorderBrush="{TemplateBinding BorderBrush}"  Grid.Column="1" Width="16">
                                    <Path Name="Arrow"                                  
                                  Data="{StaticResource DownArrowGeometry}" Fill="{StaticResource GlyphBrush}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0 Z" TargetName="Arrow"/>
                            <Setter Property="Width" Value="35" TargetName="Chrome"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"  Value="true" SourceName="Chrome"/>
                                <Condition Property="IsChecked"    Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>

                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="Chrome1" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" SourceName="Chrome" Value="True">
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"  Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="Placement" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Microsoft_Windows_Aero:SystemDropShadowChrome x:Name="Shdw" Color="#FFA5A5A5" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
                    <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Background="{StaticResource ContentBackgroundBrush}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid >
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Aero:SystemDropShadowChrome>
            </Popup>
            <Microsoft_Windows_Aero:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
            <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF6D6D6D"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#FFA5A5A5"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <!--<Setter Property="ScrollViewer.PanningMode" Value="Both"/>-->
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                  <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                      </Grid.ColumnDefinitions>
                      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                        <Microsoft_Windows_Aero:SystemDropShadowChrome x:Name="Shdw" Color="#FFA5A5A5" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                          <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Background="{StaticResource ContentBackgroundBrush}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                              <Grid >
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                  <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                              </Grid>
                            </ScrollViewer>
                          </Border>
                        </Microsoft_Windows_Aero:SystemDropShadowChrome>
                      </Popup>
                      <ToggleButton Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                      <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                  </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#FFA5A5A5"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF6D6D6D"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                      
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}"/>


    <Style x:Key="DefaultComboBoxItemStyle"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Padding"
                Value="3,0,3,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>



    <ControlTemplate x:Key="TouchRadioButtonTemplate" TargetType="{x:Type RadioButton}">
        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid>
                    <Ellipse x:Name="ellipse1" Width="30" Height="30" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}">
                    </Ellipse>
                    <Ellipse x:Name="ellipse2" Stroke="{StaticResource ContentBorderBrush}" Fill="{StaticResource ContentBackgroundBrush}" Width="25" Height="25">
                    </Ellipse>
                    <Ellipse x:Name="ellipse" Width="15" Height="15">
                    </Ellipse>
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Padding}" TextBlock.FontSize="18"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"/>
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent"
                                 Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource TouchCheckRadioFocusVisual}"/>
                <Setter Property="Padding" Value="4,0,0,0"/>
            </Trigger>
            <Trigger  Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource GlyphBrush}"/>
                <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource GlyphBrush}"/>
                <Setter Property="Visibility" TargetName="ellipse2" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="DefaultRadioButtonStyle"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"                                
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator x:Name="bulletDecorator"  Background="{StaticResource ContentBackgroundBrush}">
                        <BulletDecorator.Bullet>
                            <Canvas Name="canvas" Width="13" Height="13">
                                <Ellipse x:Name="ellipse1" Width="13" Height="13" Fill="{TemplateBinding Background}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                </Ellipse>
                                <Ellipse x:Name="ellipse2" Canvas.Left="2" Canvas.Top="2" Width="9" Height="9" SnapsToDevicePixels="True">
                                </Ellipse>
                                <Ellipse x:Name="ellipse3" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding Background}" StrokeThickness="1" Canvas.Left="3" Canvas.Top="3" Width="7" Height="7" SnapsToDevicePixels="True">
                                </Ellipse>
                                <Ellipse x:Name="ellipse" Canvas.Left="4" Canvas.Top="4" Width="5" Height="5" SnapsToDevicePixels="True">
                                </Ellipse>
                            </Canvas>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse1" Property="Stroke" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="ellipse3" Property="Stroke" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ellipse1" Property="Stroke" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="ellipse3" Property="Stroke" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Background" TargetName="bulletDecorator" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                            <Setter Property="Fill" TargetName="ellipse" Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="bulletDecorator" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="Template" Value="{StaticResource TouchRadioButtonTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}"/>


    <!-- ListBox -->	

    <Style x:Key="DefaultListBoxStyle"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Padding="1">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultListBoxStyle}" TargetType="{x:Type ListBox}"/>



    <!-- ListBoxItem -->
    <Style x:Key="DefaultListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background"
                 Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                 Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Padding"
                Value="2,0,0,0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource SelectionInActiveBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultListBoxItemStyle}" TargetType="{x:Type ListBoxItem}"/>


    <!-- Menu -->


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

    <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>




    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
        <Border Background="{StaticResource ContentBackgroundBrush}"
                BorderBrush="{StaticResource ContentBorderBrush}"
                BorderThickness="1">
            <Grid>
                <Rectangle Fill="{StaticResource ContentBackgroundBrush}"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="2"
                           RadiusX="2"
                           RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Fill="{StaticResource ContentBorderBrush}"/>
                <Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="31,2,0,2"
                           Fill="{StaticResource ContentBorderBrush}"/>

                <ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="DefaultMenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
        <Setter Property="ClickMode"
                Value="Hover"/>
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <DockPanel Background="{DynamicResource BackgroundBrush}"
                               SnapsToDevicePixels="true">
                        <Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <ContentPresenter x:Name="ContentContainer"
                                          Margin="2,2,2,2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultMenuScrollViewer"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                                Grid.Column="0" Background="{StaticResource ContentBackgroundBrush}">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton x:Name="upButton"
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource GlyphBrush}" x:Name="upPath"
                                  Data="{StaticResource UpArrow}"/>
                        </RepeatButton>
                        <RepeatButton x:Name="downButton"
                                      Style="{StaticResource DefaultMenuScrollButton}"
                                      Grid.Row="2"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{StaticResource GlyphBrush}" x:Name="downPath"
                                  Data="{StaticResource DownArrow}"/>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" SourceName="upButton"
                                 Value="true">
                        <Setter TargetName="upPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="upButton"
                                 Value="true">
                            <Setter TargetName="upPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="downButton"
                                 Value="true">
                            <Setter TargetName="downPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="downButton"
                                 Value="true">
                            <Setter TargetName="downPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true" Margin="0,6,0,4">
                        <Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="{StaticResource BorderBrush}"/>
                        <Rectangle Height="1"
                                   Margin="30,1,1,0"
                                   Fill="{StaticResource BorderBrush}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="DefaultMenuStyle" TargetType="{x:Type Menu}">

        <Setter Property="Background"
                Value="{DynamicResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultMenuStyle}" TargetType="{x:Type Menu}"/>

    <Style x:Key="DefaultMenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{DynamicResource ContentBackgroundBrush}"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{StaticResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="#FFA5A5A5">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#FFA5A5A5"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>

                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource ActiveForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding Background}"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{StaticResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0" x:Name="Glyph1"
                      Fill="{StaticResource GlyphBrush}"
                      Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="#FFA5A5A5">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#FFA5A5A5"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                                    <Setter TargetName="Glyph1"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="1"/>
                        </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}"/>

<Style x:Key="DefaultContextMenuItemStyle"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                     Value="true">
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{StaticResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="#FFA5A5A5">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#FFA5A5A5"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSubmenuOpen"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource ActiveForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{StaticResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center" x:Name="Glyph1"
                      Margin="4,0,0,0"
                      Fill="{StaticResource GlyphBrush}"
                      Data="{StaticResource RightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="#FFA5A5A5">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                      Style="{StaticResource DefaultMenuScrollViewer}">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#FFA5A5A5"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                                    <Setter TargetName="Glyph1"
                        Property="Fill"
                        Value="{StaticResource HoverGlyphBrush}"/>
                                    <Setter 
                        Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
                                </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Opacity"
                        Value="1"/>
                        </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </Trigger>
        </Style.Triggers>
    </Style> 

    <Style x:Key="DefaultContextMenuStyle"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="MenuItem.Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
        <Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Rectangle Fill="{TemplateBinding Background}"
                                           HorizontalAlignment="Left"
                                           Width="28"
                                           Margin="2"
                                           RadiusX="2"
                                           RadiusY="2"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="30,2,0,2"
                                           Fill="{TemplateBinding BorderBrush}"/>
                                <Rectangle HorizontalAlignment="Left"
                                           Width="1"
                                           Margin="31,2,0,2"
                                           Fill="{TemplateBinding BorderBrush}"/>


                                <ScrollViewer CanContentScroll="true"
                                              Grid.ColumnSpan="2" Margin="1,0"
                                              Style="{StaticResource DefaultMenuScrollViewer}">
                                    <ItemsPresenter Margin="{TemplateBinding Padding}"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#FFA5A5A5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultContextMenuStyle}" TargetType="{x:Type ContextMenu}"/>



    <!-- ToolTip -->

    <Style x:Key="DefaultToolTipStyle"
           TargetType="{x:Type ToolTip}">
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
               Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
        <Setter Property="Padding"
                Value="5,1,5,4"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                  Color="Transparent"
                                                  SnapsToDevicePixels="true"
                                                  CornerRadius="2">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#FFA5A5A5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource DefaultToolTipStyle}" TargetType="{x:Type ToolTip}"/>

    <!-- TreeView -->

    <Style x:Key="DefaultTreeViewStyle"
           TargetType="{x:Type TreeView}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Background="{TemplateBinding Background}"
                                      Focusable="false"
                                      CanContentScroll="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      Padding="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<Style BasedOn="{StaticResource DefaultTreeViewStyle}" TargetType="{x:Type TreeView}"/>


    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure IsFilled="True"
                            StartPoint="0 0"
                            IsClosed="True">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6"/>
                            <LineSegment Point="6 0"/>
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>
    <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable"
                Value="False"/>
        <Setter Property="Width"
                Value="16"/>
        <Setter Property="Height"
                Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16"
                            Height="16"
                            Background="Transparent"
                            Padding="5,5,5,5">
                        <Path x:Name="ExpandPath"
                              Fill="Transparent"
                              Stroke="{StaticResource GlyphBrush}"
                              Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135"
                                                 CenterX="3"
                                                 CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ExpandPath"
                                    Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"
                                                     CenterX="3"
                                                     CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath"
                                    Property="Fill"
                                    Value="Transparent"/>
                            <Setter TargetName="ExpandPath"
                                    Property="Stroke"
                                    Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Padding"
                Value="1,0,0,0"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19"
                                              Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                      IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <Border Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="false">
                            <Setter TargetName="ItemsHost"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="Expander"
                                    Property="Visibility"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                       <Trigger Property="IsMouseOver" SourceName="Bd"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsExpanded"
                                           Value="false"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource SelectionInActiveBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>


    <!-- TextBox Base-->
    <Style x:Key="DefaultTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{x:Null}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource  ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Padding"
                Value="1"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                     <MultiTrigger>
                           <MultiTrigger.Conditions>
                              <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                              <Condition Property="IsMouseOver" Value="True"/>
                           </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource HoverBorderBrush}"/>
                        </MultiTrigger>
                           <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                             <Setter Property="Padding" Value="1,9"/>
                             <Setter Property="FontSize" Value="18"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}"/>



    <!-- PasswordBox -->
    <Style x:Key="DefaultPasswordBoxStyle"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background"
                Value="{StaticResource  ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="FontFamily"
                Value="Times New Roman"/>
        <Setter Property="PasswordChar"
                Value="●"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding"
                Value="1"/>        
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="AllowDrop"
                Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                      <Border x:Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{TemplateBinding Background}"                                        
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>      
                                             <MultiTrigger>
                           <MultiTrigger.Conditions>
                              <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                              <Condition Property="IsMouseOver" Value="True"/>
                           </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource HoverBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                             <Setter Property="Padding" Value="1,9"/>
                             <Setter Property="FontSize" Value="18"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultPasswordBoxStyle}" TargetType="{x:Type PasswordBox}"/>





    <!-- Expander -->

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   StrokeThickness="1"
                                   Stroke="{StaticResource GlyphBrush}"
                                   StrokeDashArray="1 2"
                                   SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     Stroke="{StaticResource BorderBrush}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource BackgroundBrush}"/>
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="{StaticResource GlyphBrush}"
                                  StrokeThickness="2"
                                  SnapsToDevicePixels="false"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverGlyphBrush}"
                                    TargetName="arrow"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveGlyphBrush}"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Width" TargetName="circle" Value="45"/>
                            <Setter Property="Height" TargetName="circle" Value="45"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,3 L 11,12 L 20,3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,11 L 11,1 L 20,11"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="{StaticResource BorderBrush}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource BackgroundBrush}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverGlyphBrush}"
                                    TargetName="arrow"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveGlyphBrush}"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Width" TargetName="circle" Value="45"/>
                            <Setter Property="Height" TargetName="circle" Value="45"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,3 L 11,12 L 20,3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,11 L 11,1 L 20,11"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle"
           TargetType="{x:Type ToggleButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="{StaticResource BorderBrush}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource BackgroundBrush}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverGlyphBrush}"
                                    TargetName="arrow"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveGlyphBrush}"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Width" TargetName="circle" Value="45"/>
                            <Setter Property="Height" TargetName="circle" Value="45"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,3 L 11,12 L 20,3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,11 L 11,1 L 20,11"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90"/>
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         Stroke="{StaticResource BorderBrush}"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource BackgroundBrush}"/>
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2"
                                      SnapsToDevicePixels="false"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              SnapsToDevicePixels="True"
                                              RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Data"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"
                                    TargetName="arrow"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource HoverGlyphBrush}"
                                    TargetName="arrow"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"
                                    TargetName="circle"/>
                            <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="circle"/>
                            <Setter Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"
                                    TargetName="circle"/>
                            <Setter Property="Stroke"
                                    Value="{StaticResource ActiveGlyphBrush}"
                                    TargetName="arrow"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Width" TargetName="circle" Value="45"/>
                            <Setter Property="Height" TargetName="circle" Value="45"/>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,3 L 11,12 L 20,3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" TargetName="arrow" Value="M 2,11 L 11,1 L 20,11"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultExpanderStyle"
           TargetType="{x:Type Expander}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          DockPanel.Dock="Top"
                                          Margin="1"
                                          MinWidth="0"
                                          MinHeight="0"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Padding="{TemplateBinding Padding}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Visibility="Collapsed"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="ExpandSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Up">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Bottom"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderUpHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection"
                                 Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="ExpandSite"/>
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="HeaderSite"/>
                            <Setter Property="Style"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"
                                    TargetName="HeaderSite"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#FF6D6D6D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}"/>




    <!-- GroupBox -->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="DefaultGroupBoxStyle"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Padding="3,1,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                            <ContentPresenter ContentSource="Header" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="White" IsHitTestVisible="False">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>

                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="White"
                                        CornerRadius="2"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
<Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="FontSize" Value="18"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource DefaultGroupBoxStyle}" TargetType="{x:Type GroupBox}"/>

    <Style x:Key="GroupItem"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <StackPanel>
                        <ContentPresenter/>
                        <ItemsPresenter Margin="5,0,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Hyperlink -->
    <Style x:Key="DefaultHyperlinkStyle"
           TargetType="{x:Type Hyperlink}">

        <Setter Property="Foreground"
                Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="TextDecorations"
                Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Foreground"
                        Value="{StaticResource HoverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="#FF6D6D6D"/>
            </Trigger>
        </Style.Triggers>
    </Style>
<Style BasedOn="{StaticResource DefaultHyperlinkStyle}" TargetType="{x:Type Hyperlink}"/>
    
    <!-- StatusBar -->
    <Style x:Key="DefaultStatusBarStyle"
           TargetType="{x:Type StatusBar}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultStatusBarStyle}" TargetType="{x:Type StatusBar}"/>

    <!-- StatusBar Separator -->

    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultStatusBarItemStyle"
           TargetType="{x:Type StatusBarItem}">
        <Setter Property="Padding"
                Value="3"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#FF6D6D6D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
<Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Padding" Value="4,10,4,10"/>
            </Trigger>
        </Style.Triggers>  
    </Style>
    <Style BasedOn="{StaticResource DefaultStatusBarItemStyle}" TargetType="{x:Type StatusBarItem}"/>

    <!-- ProgressBar -->
    

    <LinearGradientBrush x:Key="DefaultProgressBarIndicatorAnimatedFill" 
                         MappingMode="Absolute"
                         StartPoint="-100,0"
                         EndPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#00000000"
                          Offset="0"/>
            <GradientStop Color="#00000000"
                          Offset="0.4"/>
            <GradientStop Color="#00000000"
                          Offset="0.6"/>
            <GradientStop Color="#00000000"
                          Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DefaultProgressBarStyle"
           TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Name="Background"
                          SnapsToDevicePixels="true">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   RadiusX="2"
                                   RadiusY="2"/>
                        <Border Background="{StaticResource ContentBorderBrush}"
                                Margin="1"
                                CornerRadius="2"/>
                        <Border BorderBrush="{StaticResource ContentBorderBrush}"
                                Background="{StaticResource ContentBackgroundBrush}"
                                BorderThickness="1,0,1,1"
                                Margin="1"/>
                        <Rectangle Name="PART_Track"
                                   Margin="1"/>

                        <Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
                            <Grid Name="Foreground">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="15"/>
                                    <ColumnDefinition Width="0.1*"/>
                                    <ColumnDefinition MaxWidth="15"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Indicator"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}"/>
                                <Rectangle x:Name="Animation"
                                           Grid.RowSpan="2"
                                           Grid.ColumnSpan="3"
                                           Fill="{TemplateBinding Foreground}">
                                    <Rectangle.OpacityMask>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <Microsoft_Windows_Aero:ProgressBarHighlightConverter/>
                                            </MultiBinding.Converter>
                                            <Binding Source="{StaticResource DefaultProgressBarIndicatorAnimatedFill}"/>
                                            <Binding Path="ActualWidth"
                                                     ElementName="Background"/>
                                            <Binding Path="ActualHeight"
                                                     ElementName="Background"/>
                                        </MultiBinding>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                                <Rectangle x:Name="LeftDark"
                                           Grid.RowSpan="2"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft.Default}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Margin="1,1,0,1"/>
                                <Rectangle x:Name="RightDark"
                                           Grid.RowSpan="2"
                                           Grid.Column="2"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight.Default}"
                                           Margin="0,1,1,1"/>
                                <Rectangle x:Name="LeftLight"
                                           Grid.Column="0"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft.Default}"/>
                                <Rectangle x:Name="CenterLight"
                                           Grid.Column="1"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffect.Default}"/>
                                <Rectangle x:Name="RightLight"
                                           Grid.Column="2"
                                           Grid.Row="2"
                                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight.Default}"/>
                                <Border x:Name="Highlight1"
                                        Grid.RowSpan="2"
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ActiveBackgroundBrush}"/>
                                <Border x:Name="Highlight2"
                                        Grid.RowSpan="2" 
                                        Grid.ColumnSpan="3"
                                        Background="{StaticResource ActiveBackgroundBrush}"/>
                            </Grid>
                        </Decorator>

                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter TargetName="Background"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Indicator"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Foreground"
                                    Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsIndeterminate"
                                 Value="true">
                            <Setter TargetName="LeftDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="RightDark"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="LeftLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="CenterLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="RightLight"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="Indicator"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                                 Value="false">
                            <Setter TargetName="Animation"
                                    Property="Fill"
                                    Value="#80B5FFA9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultProgressBarStyle}" TargetType="{x:Type ProgressBar}"/>



    <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
    </Geometry>

    <Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
    </Geometry>

    <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
    </Geometry>

    <Style x:Key="SliderRepeatButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="22"/>
        <Setter Property="Width"
                Value="11"/>
        <Setter Property="Foreground"
                Value="{StaticResource GlyphBrush}"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5.5"
                                                Y="11"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderUpThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="5"
                                                            Y="9"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderDownThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="18"/>
        <Setter Property="Width"
                Value="10"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TranslateTransform X="5"
                                                Y="9"/>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="VerticalSliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="11"/>
        <Setter Property="Width"
                Value="22"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="11"
                                                            Y="5.5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderLeftThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderRightThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Height"
                Value="10"/>
        <Setter Property="Width"
                Value="18"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas SnapsToDevicePixels="true">
                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <TransformCollection>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform X="9"
                                                            Y="5"/>
                                    </TransformCollection>
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Canvas.RenderTransform>
                        <Path x:Name="Background"
                              Fill="{DynamicResource BackgroundBrush}"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                        <Path x:Name="OuterBorder"
                              Stroke="{StaticResource BorderBrush}"
                              StrokeThickness="1"
                              Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter TargetName="Background"
                                    Property="Fill"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="OuterBorder"
                                    Property="Stroke"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultSliderStyle"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>	
        <Setter Property="Background"                                
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Grid.Row="0"
                                     Visibility="Collapsed"
                                     Placement="Top"
                                     Fill="{StaticResource TickColor}"
                                     Height="4"/>
                            <TickBar x:Name="BottomTick"
                                     Grid.Row="2"
                                     Visibility="Collapsed"
                                     Placement="Bottom"
                                     Fill="{StaticResource TickColor}"
                                     Height="4"/>
                            <Border x:Name="TrackBackground"
                                    Grid.Row="1"
                                    Margin="5,0"
                                    VerticalAlignment="center"
                                    BorderBrush="{StaticResource ContentBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Background="{StaticResource ContentBackgroundBrush}"
                                    Height="4.0">
                                <Canvas Margin="-6,-1">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Fill="{StaticResource ActiveBackgroundBrush}"
                                               Height="4.0"
                                               Visibility="Hidden"
                                               StrokeThickness="1.0"
                                               Stroke="{StaticResource ActiveBorderBrush}"/>
                                </Canvas>
                            </Border>
                            <Track Grid.Row="1"
                                   Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Style="{StaticResource HorizontalSliderThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"
                                 Value="TopLeft">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,2,5,0"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="BottomRight">
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
                            <Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="5,0,5,2"/>
                        </Trigger>
                        <Trigger Property="TickPlacement"
                                 Value="Both">
                            <Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="BottomTick"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled"
                                 Value="true">
                            <Setter TargetName="PART_SelectionRange"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Thumb"
                                    Property="Foreground"
                                    Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"
                                                          MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Column="0"
                                             Visibility="Collapsed"
                                             Placement="Left"
                                             Fill="{StaticResource TickColor}"
                                             Width="4"/>
                                    <TickBar x:Name="BottomTick"
                                             Grid.Column="2"
                                             Visibility="Collapsed"
                                             Placement="Right"
                                             Fill="{StaticResource TickColor}"
                                             Width="4"/>
                                    <Border Name="TrackBackground"
                                            Grid.Column="1"
                                            Margin="0,5"
                                            HorizontalAlignment="center"
                                            BorderBrush="{StaticResource ContentBorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            Background="{StaticResource ContentBackgroundBrush}"
                                            Width="4.0">

                                        <Canvas Margin="-1,-6">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{StaticResource ActiveBackgroundBrush}"
                                                       Width="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1"
                                                       Stroke="{StaticResource ActiveBorderBrush}"/>
                                        </Canvas>
                                    </Border>

                                    <Track Grid.Column="1"
                                           Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.DecreaseLarge}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.IncreaseLarge}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                                   Style="{StaticResource VerticalSliderThumbStyle}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="2,5,0,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="Thumb"
                                            Property="Style"
                                            Value="{StaticResource VerticalSliderRightThumbStyle}"/>
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="0,5,2,5"/>
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="Both">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true">
                                    <Setter TargetName="Thumb"
                                            Property="Foreground"
                                            Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource DefaultSliderStyle}" TargetType="{x:Type Slider}"/>


    <!-- Separator -->
    <Style x:Key="DefaultSeparatorStyle"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="Margin"
                Value="0,2,0,2"/>
        <Setter Property="Focusable"
                Value="false"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            Height="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultSeparatorStyle}" TargetType="{x:Type Separator}"/>


    <!-- ScrollBar --> 

    <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>         
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Microsoft_Windows_Aero:ScrollChrome Name="Chrome"
                                        ScrollGlyph="{TemplateBinding Microsoft_Windows_Aero:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Microsoft_Windows_Aero:ScrollChrome x:Name="Chrome"
                                        ScrollGlyph="{TemplateBinding Microsoft_Windows_Aero:ScrollChrome.ScrollGlyph}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsDragging}"
                                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>     
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  
    <Style x:Key="ScrollBarDownButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">
                            <Path Data="M0,0L3.5,4 7,0z" HorizontalAlignment="Center" Height="5" Width="8" Stretch="Fill" Fill="{StaticResource GlyphBrush}" Name="Arrow" VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>

                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                            
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLeftButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border  Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">
                            <Path Data=" M 7 1 L 3 5 L 7 9 z" Stretch="Fill" Height="8" Width="5" HorizontalAlignment="Center" Fill="{StaticResource GlyphBrush}" Name="Arrow" VerticalAlignment="Center"/>                          
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>

                        </MultiTrigger>

                         <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarRightButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">

                    <Border Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"	BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">
                            <Path Data="M 3 1 L 7 5 L 3 9 z" Height="8" Width="5" Stretch="Fill" HorizontalAlignment="Center" Fill="{StaticResource GlyphBrush}" Name="Arrow" VerticalAlignment="Center" >
                            </Path>
                        </Border>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>

                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                            
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarUpButtonBlue" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">

                    <Border Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="PART_Repeat" Background="{TemplateBinding Background}">
                        <Border Background="Transparent" BorderThickness="1" CornerRadius="1" Name="InnerBorderBrush">
                            <Path Data="M0,4 L7,4 3.5,0z" HorizontalAlignment="Center" Height="4" Width="8" Stretch="Fill" Fill="{StaticResource GlyphBrush}" Name="Arrow" VerticalAlignment="Center" />
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveGlyphBrush}"/>

                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Repeat" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="PART_Repeat" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarVerticalThumbBlue" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Control.Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Name="PART_RepeatThumb" Background="{DynamicResource BackgroundBrush}">
                        </Border>

                        <Path Margin="0,-6,0,0" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="1,-4,0,0" Width="6" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,-2,0,0"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="1,0,0,0" Width="6" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,0,-2"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="1,0,0,-4" Width="6" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <Path Margin="0,0,0,-6"  Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Width" TargetName="PART_RepeatThumb" Value="12"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging"  Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarHorizontalThumbBlue" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid >
                        <Border BorderBrush="{StaticResource BorderBrush}" CornerRadius="0" BorderThickness="1" Name="PART_RepeatThumb" Background="{DynamicResource BackgroundBrush}">
                        </Border>
                        <Path Margin="-6,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <!--<Path Margin="1,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="White" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>-->
                        <Path Margin="-2,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <!--<Path Margin="1,-4,0,0" Width="6" Height="1" Stretch="Fill" Fill="Transparent" Stroke="Orange" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>-->
                        <Path Margin="0,0,-2,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>
                        <!--<Path Margin="1,-4,0,0" Width="6" Height="1" Stretch="Fill" Fill="Transparent" Stroke="White" StrokeThickness="1" Data="M4.8333325,7.2499995 L12.012101,7.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>-->
                        <Path Margin="0,0,-6,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M7.8333325,4.2499995 L7.012101,12.2499995" VerticalAlignment="Center" HorizontalAlignment="Center">

                        </Path>

                    </Grid>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                        
                        <Trigger Property="IsDragging"  Value="True">
                            <Setter Property="Background" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="PART_RepeatThumb" Value="{StaticResource HoverBorderBrush}" />
                        </Trigger>
                        
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Height" TargetName="PART_RepeatThumb" Value="12"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarPageButtonBlue"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarPageButtonBlue"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="IsTabStop"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
  <!--Scroll Bar Styles Ends-->
  
  <!--Scroll Bar New-->
    
  <Style x:Key="DefaultScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"  Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                      <Grid Name="Bg"  Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>

                            <RepeatButton Name="UpButton" Style="{StaticResource ScrollBarUpButtonBlue}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      />
                            <Track Grid.Row="1" Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarVerticalThumbBlue}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>

                            <RepeatButton Name="DownButton" Style="{StaticResource ScrollBarDownButtonBlue}"
                                    Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                     />

                        </Grid>        
                    <!--</Border>-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bg"  Property="Opacity" Value="0.7"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid Name="Bg" Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>
                                <RepeatButton Name="LeftButton" Style="{StaticResource ScrollBarLeftButtonBlue}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              />
                                <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarHorizontalThumbBlue}"
                                               />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton Name="RightButton" Style="{StaticResource ScrollBarRightButtonBlue}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Bg" Property="Opacity" Value="0.7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
  
  <!--Scroll Bar Ends-->
  
    <Style BasedOn="{StaticResource DefaultScrollBarStyle}" TargetType="{x:Type ScrollBar}"/>


    <Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Fill="{StaticResource GlyphBrush}" Grid.Column="1" Grid.Row="1"/>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
                    </Grid>                  
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>

    <!-- TabControl -->

    <Style x:Key="DefaultTabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Padding"
                Value="4,4,4,4"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true"
                          ClipToBounds="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0"
                                           Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1"
                                           Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Panel.ZIndex ="1" 
                                  KeyboardNavigation.TabIndex="1"
                                  Grid.Column="0"
                                  Grid.Row="0" Background="{DynamicResource BackgroundBrush}"
                                  Margin="2,2,2,0"
                                  IsItemsHost="true"/>
                        <Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.TabNavigation="Local"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                Grid.Column="0"
                                Grid.Row="1">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter Property="Grid.Row"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="Auto"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,0,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="2,2,0,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Row"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="1"
                                    TargetName="HeaderPanel"/>
                            <Setter Property="Grid.Column"
                                    Value="0"
                                    TargetName="ContentPanel"/>
                            <Setter Property="Width"
                                    Value="*"
                                    TargetName="ColumnDefinition0"/>
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="ColumnDefinition1"/>
                            <Setter Property="Height"
                                    Value="*"
                                    TargetName="RowDefinition0"/>
                            <Setter Property="Height"
                                    Value="0"
                                    TargetName="RowDefinition1"/>
                            <Setter Property="Margin"
                                    Value="0,2,2,2"
                                    TargetName="HeaderPanel"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" 
                                 Value="false">
                            <Setter Property="Foreground" 
                                    Value="#FF6D6D6D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultTabControlStyle}" TargetType="{x:Type TabControl}"/>


    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1"
                               StrokeThickness="1"
                               Stroke="{StaticResource GlyphBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultTabItemStyle"
           TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding"
                Value="6,1,6,1"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1,1,1,0">
                            <ContentPresenter Name="Content" 
                                              ContentSource="Header"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"
                                              VerticalAlignment="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Panel.ZIndex"
                                    Value="1"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter 
                                    Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="false"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter 
                                    Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>

                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Bottom">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Left">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement"
                                 Value="Right">
                            <Setter TargetName="Bd"
                                    Property="BorderThickness"
                                    Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-2,-1"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-1,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-2,-2,-1,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="TabStripPlacement"
                                           Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    Value="-1,-2,-2,-2"/>
                            <Setter TargetName="Content"
                                    Property="Margin"
                                    Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultTabItemStyle}" TargetType="{x:Type TabItem}"/>




    <!-- GridView -->

    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               Stroke="{StaticResource GlyphBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{StaticResource GlyphBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridSplitter}"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="PreviewStyle"
                Value="{StaticResource GridSplitterPreviewStyle}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}" >
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Orientation="Vertical"
                                   Grid.Column="1"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Cursor="Arrow"/>
                        <DockPanel Grid.Column="1"
                                   Grid.Row="1"
                                   Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}"
                                   LastChildFill="false">
                            <Rectangle DockPanel.Dock="Left"
                                       Width="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top"
                                       Height="1"
                                       Fill="White"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right"
                Value="-9"/>
        <Setter Property="Width"
                Value="18"/>        
        <Setter Property="Height"
                Value="{Binding Path=ActualHeight,RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="Background"
                Value="{StaticResource HeaderBackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{StaticResource HeaderBorderBrush}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DefaultGridViewColumnHeaderStyle"
           TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Background"
               Value="{StaticResource HeaderBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource HeaderBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="0,1,0,1"/>
        <Setter Property="Padding"
                Value="2,0,2,0"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="true">
                        <Border Name="HeaderBorder"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border Grid.RowSpan="2"
                                        >
                                    <ContentPresenter Name="HeaderContent"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                        </Border>
                        <Border Name="HeaderHoverBorder"
                                BorderThickness="1,0,1,1"
                                Margin="1,1,0,0"/>
                        <Border Name="HeaderPressBorder"
                                BorderThickness="1,1,1,0"
                                Margin="1,0,0,1"/>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper"
                                   Style="{StaticResource GridViewColumnHeaderGripper}"/>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="HeaderBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>

                            <Setter 
                                    Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                            <!--<Setter TargetName="HeaderHoverBorder"
                                    Property="BorderBrush"
                                    Value="#FF88CBEB"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>-->
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Background"
                                    Value="Transparent"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="HeaderBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>

                            <Setter 
                                    Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                            <!--<Setter TargetName="HeaderPressBorder"
                                    Property="BorderBrush"
                                    Value="#FF7A9EB1"/>-->
                            <!--<Setter TargetName="UpperHighlight"
                                    Property="Visibility"
                                    Value="Visible"/>
                            <Setter TargetName="UpperHighlight"
                                    Property="Fill"
                                    Value="#FFBCE4F9"/>-->
                            <Setter TargetName="PART_HeaderGripper"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            <Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="1,1,0,0"/>
                        </Trigger>
                        <Trigger Property="Height"
                                 Value="Auto">
                            <Setter Property="MinHeight"
                                    Value="20"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9,1,9"/>
                            <Setter Property="FontSize" Value="18"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#FF6D6D6D"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.4082"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Opacity="0.4697"
                                           Fill="{DynamicResource BackgroundBrush}"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Height"
                                         Value="Auto">
                                    <Setter Property="MinHeight"
                                            Value="20"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
<Style BasedOn="{StaticResource DefaultGridViewColumnHeaderStyle}" TargetType="{x:Type GridViewColumnHeader}"/>


    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeThickness="1"
                               RadiusX="2"
                               RadiusY="2"
                               Stroke="{StaticResource GlyphBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewStyleKey}"
           TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Microsoft_Windows_Aero:ListBoxChrome Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{StaticResource ContentBackgroundBrush}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Microsoft_Windows_Aero:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0,0,0,1"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <Border Name="InnerBorder"
                                CornerRadius="1"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <GridViewRowPresenter Grid.RowSpan="2"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource SelectionInActiveBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultListViewItemStyle"
           TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0,0,0,1"/>
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            SnapsToDevicePixels="true">
                        <Border Name="InnerBorder"
                                CornerRadius="1"
                                BorderThickness="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="11"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <GridViewRowPresenter Grid.RowSpan="2"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter TargetName="InnerBorder"  Property="Padding" Value="1,8,1,8"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter TargetName="Bd" Property="Margin" Value="0,0,0,-1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource SelectionInActiveBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                <Setter Property="FocusVisualStyle"
                Value="{StaticResource ListViewItemFocusVisual}"/>
                <Setter Property="Background"
                Value="Transparent"/>
                <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Margin"
                Value="0,0,0,1"/>
                <Setter Property="Padding"
                Value="5,2,5,2"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ActiveBackgroundBrush}"/>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource SelectionInActiveBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                </MultiTrigger>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                                    <Setter TargetName="Bd"  Property="Padding" Value="1,9,1,9"/>
                                    <Setter TargetName="content"  Property="Margin" Value="1"/>
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF6D6D6D"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>

    <Style x:Key="DefaultListViewStyle"
           TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Microsoft_Windows_Aero:ListBoxChrome Name="Bd"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         Background="{StaticResource ContentBackgroundBrush}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"
                                         SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="scrollviewer" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Microsoft_Windows_Aero:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="View" Value="{x:Null}">
                            <!--<Setter Property="ItemContainerStyle" Value="{StaticResource DefaultListViewItemStyle}"/>-->
                            <Setter Property="Style" TargetName="scrollviewer" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultListViewStyle}" TargetType="{x:Type ListView}"/>


  
  
    
   

    <Style x:Key="DefaultResizeGripStyle"
           TargetType="{x:Type ResizeGrip}">
        <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path HorizontalAlignment="Right" 
                              VerticalAlignment="Bottom" 
                              Margin="0,0,2,2"
                              Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z">

                            <Path.Fill>
                                <DrawingBrush Viewbox="0,0,3,3"
                                              Viewport="0,0,3,3"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{StaticResource GlyphBrush}"
                                                                 Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z  "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultResizeGripStyle}" TargetType="{x:Type ResizeGrip}"/>


    <!-- ToolBar -->
    <Geometry x:Key="ToolBarCheckmark">M 0,2.5 L 2.5,5 L 7,0.5</Geometry>

    <Style x:Key="DefaultToolBarTrayStyle" TargetType="{x:Type ToolBarTray}" >
        <Setter Property="Background" 
                Value="{DynamicResource BackgroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type ToolBarTray}" BasedOn="{StaticResource DefaultToolBarTrayStyle}"/>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="MinWidth"
                Value="1"/>
        <Setter Property="MinHeight"
                Value="1"/>
        <Setter Property="Margin"
                Value="2,2,2,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource BorderBrush}"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter 
                                    Property="TextElement.Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter 
                                    Property="Foreground"
                                    Value="{StaticResource ActiveForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type CheckBox}"/>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
           TargetType="{x:Type RadioButton}"/>

    <Style x:Key="ToolBarComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="Width"
                Value="Auto"/>
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="Focusable"
                Value="false"/>
        <Setter Property="ClickMode"
                Value="Press"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="ComboBoxButton"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Chrome"
                                Grid.Column="1"
                                Width="13"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Path x:Name="ArrowDownPath"
                                  Data="M 2.5 0 L 8.5 0 L 5.5 3 Z"
                                  Fill="{StaticResource GlyphBrush}"
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{x:Null}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true"/>
                                <Condition Property="IsChecked"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource HoverGlyphBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="ArrowDownPath"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter 
                                    Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0"/>
        <Setter Property="Padding"
                Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid Grid.IsSharedSizeScope="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Background"
                                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"/>
                            <Border Name="SelectedContentBorder"
                                    Margin="2,2,1,2">
                                <ContentPresenter x:Name="ContentSite"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Border Name="Border"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ContentBorderBrush}"/>
                            <ToggleButton BorderBrush="{StaticResource BorderBrush}"
                                          BorderThickness="1"
                                          x:Name="DropDownButton"
                                          Grid.ColumnSpan="2"
                                          Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBox Padding="{TemplateBinding Padding}"
                                     Margin="1,1,0,1"
                                     MinHeight="18"
                                     x:Name="PART_EditableTextBox"
                                     Style="{StaticResource ComboBoxEditableTextBox}"
                                     Visibility="Collapsed"
                                     IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                                     VerticalAlignment="Center"/>
                        </Grid>
                        <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Placement="Bottom"
                               IsOpen="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                               Focusable="false"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                          Color="#FFA5A5A5" 
                                                          MinWidth="{TemplateBinding ActualWidth}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ContentBorderBrush}">
                                    <ScrollViewer>
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Aero:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{x:Null}"/>
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="DropDownButton"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="DropDownButton"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                            <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                            <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                            <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#FFA5A5A5"/>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin"
                                           Value="true"/>
                                <Condition Property="IsDropDownOpen"
                                           Value="false"/>
                                <Condition Property="IsEditable"
                                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{StaticResource ForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="2"/>
                            <Setter Property="IsTabStop"
                                    Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderBrush"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="1,0"/>
        <Setter Property="Padding"
                Value="2"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="VerticalAlignment"
                Value="Center"/>
        <Setter Property="MinHeight"
                Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      MinHeight="18"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.MenuStyleKey}"
           TargetType="{x:Type Menu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Continue"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>

        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <ControlTemplate.Resources>
                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="Background" 
                        Value="{StaticResource BorderBrush}"/>
                            <Setter Property="Height" Value="1" />
                            <Setter Property="Margin" Value="0,1,0,0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="{x:Type MenuItem}"
                   TargetType="{x:Type MenuItem}">
                            <Setter Property="OverridesDefaultStyle" 
                        Value="true" />
                            <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
                            <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
                            <Setter Property="Background"
                        Value="{StaticResource ContentBackgroundBrush}"/>
                            <Setter Property="Foreground"
                        Value="{StaticResource ContentForegroundBrush}"/>
                            <Setter Property="BorderThickness"
                        Value="1"/>
                            <Setter Property="Margin"
                        Value="0,1,0,0"/>
                            <Setter Property="Padding"
                        Value="8,3,8,3"/>
                            <Setter Property="DockPanel.Dock"
                        Value="Top"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Grid Background="Transparent"
                                  SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24"
                                                      Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
                                            <ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Height="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource ContentBorderBrush}"
                                        Background="{StaticResource ContentBackgroundBrush}"
                                        BorderThickness="1">
                                                <Path VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{StaticResource GlyphBrush}"
                                          StrokeThickness="1.2"
                                          Data="{StaticResource ToolBarCheckmark}"/>
                                            </Border>

                                            <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,3,2,3"
                                           HorizontalAlignment="Right"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Icon"
                                         Value="{x:Null}">
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked"
                                         Value="true">
                                                <Setter TargetName="GlyphPanel"
                                            Property="Visibility"
                                            Value="Visible"/>
                                                <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted"
                                         Value="true">
                                                <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource HoverBorderBrush}"/>
                                                <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource HoverBackgroundBrush}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="BorderBrush"
                                            Value="{StaticResource ActiveBorderBrush}"/>
                                                <Setter TargetName="GlyphPanel"
                                            Property="Background"
                                            Value="{StaticResource HoverBackgroundBrush}"/>
                                                <Setter 
                                            Property="Foreground"
                                            Value="{StaticResource HoverForegroundBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled"
                                         Value="false">
                                                <Setter Property="Opacity"
                                            Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Role"
                             Value="TopLevelHeader">
                                    <Setter Property="Padding"
                                Value="6,2,7,2"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                                    <DockPanel Name="Header">
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{StaticResource GlyphBrush}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                                   AllowsTransparency="true">
                                                            <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                                              Color="Transparent">
                                                                <Border Background="{StaticResource ContentBackgroundBrush}"
                                                            BorderBrush="{StaticResource ContentBorderBrush}"
                                                            BorderThickness="1">
                                                                    <Grid Grid.IsSharedSizeScope="true">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Rectangle Fill="{StaticResource ContentBackgroundBrush}"
                                                                       Margin="0,1"/>
                                                                        <Rectangle Fill="{StaticResource ContentBackgroundBrush}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                                        <ScrollViewer CanContentScroll="true"
                                                                          Style="{StaticResource DefaultMenuScrollViewer}"
                                                                          Grid.ColumnSpan="2">
                                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        </ScrollViewer>
                                                                    </Grid>
                                                                </Border>
                                                            </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                                        </Popup>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource HoverBorderBrush}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource HoverBackgroundBrush}"/>

                                                        <Setter 
                                            Property="Foreground"
                                            Value="{StaticResource HoverForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsSubmenuOpen"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ContentBorderBrush}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource ContentBackgroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#71000000"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity"
                                                    Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="TopLevelItem">
                                    <Setter Property="Margin"
                                Value="0,1,0,1"/>
                                    <Setter Property="Padding"
                                Value="7,1,8,2"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                                    <DockPanel>
                                                        <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{StaticResource GlyphBrush}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                        <ContentPresenter ContentSource="Header"
                                                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </DockPanel>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource HoverBorderBrush}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource HoverBackgroundBrush}"/>
                                                        <Setter 
                                            Property="Foreground"
                                            Value="{StaticResource HoverForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity"
                                                    Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="Role"
                             Value="SubmenuHeader">
                                    <Setter Property="DockPanel.Dock"
                                Value="Top"/>
                                    <Setter Property="Padding"
                                Value="8,3,8,3"/>
                                    <Setter Property="Grid.IsSharedSizeScope"
                                Value="true"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                                <Grid Background="Transparent"
                                          SnapsToDevicePixels="true">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="24"
                                                              Width="Auto"
                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"
                                                              SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                                        <ColumnDefinition Width="14"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
                                                    <ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Height="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource ContentBorderBrush}"
                                                Background="{StaticResource ContentBackgroundBrush}"
                                                BorderThickness="1">
                                                        <Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{StaticResource GlyphBrush}"
                                                  StrokeThickness="1.2"
                                                  Data="{StaticResource ToolBarCheckmark}"/>
                                                    </Border>
                                                    <ContentPresenter Grid.Column="1"
                                                          ContentSource="Header"
                                                                      TextBlock.Foreground="{TemplateBinding Foreground}"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    <Path Grid.Column="3"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{StaticResource GlyphBrush}"
                                              Data="{StaticResource RightArrow}"/>
                                                    <Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                               AllowsTransparency="true">
                                                        <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                                          Color="#FFA5A5A5">
                                                            <Border Background="{StaticResource ContentBackgroundBrush}"
                                                        BorderBrush="{StaticResource ContentBorderBrush}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Rectangle Fill="{StaticResource ContentBackgroundBrush}"
                                                                   Margin="0,1"/>
                                                                    <ScrollViewer CanContentScroll="true"
                                                                      Style="{StaticResource DefaultMenuScrollViewer}"
                                                                      Grid.ColumnSpan="2">
                                                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </ScrollViewer>
                                                                </Grid>
                                                            </Border>
                                                        </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                                    </Popup>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSuspendingPopupAnimation"
                                                 Value="true">
                                                        <Setter TargetName="PART_Popup"
                                                    Property="PopupAnimation"
                                                    Value="None"/>
                                                    </Trigger>
                                                    <Trigger Property="Icon"
                                                 Value="{x:Null}">
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked"
                                                 Value="true">
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Visibility"
                                                    Value="Visible"/>
                                                        <Setter TargetName="Icon"
                                                    Property="Visibility"
                                                    Value="Collapsed"/>
                                                    </Trigger>
                                                    <Trigger Property="IsHighlighted"
                                                 Value="true">
                                                        <Setter TargetName="Border"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource HoverBorderBrush}"/>
                                                        <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{StaticResource HoverBackgroundBrush}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="BorderBrush"
                                                    Value="{StaticResource ActiveBorderBrush}"/>
                                                        <Setter TargetName="GlyphPanel"
                                                    Property="Background"
                                                    Value="{StaticResource HoverBackgroundBrush}"/>
                                                        <Setter 
                                            Property="Foreground"
                                            Value="{StaticResource HoverForegroundBrush}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="PART_Popup"
                                                  Property="Popup.HasDropShadow"
                                                  Value="true">
                                                        <Setter TargetName="Shdw"
                                                     Property="Margin"
                                                     Value="0,0,5,5"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="SnapsToDevicePixels"
                                                     Value="true"/>
                                                        <Setter TargetName="Shdw"
                                                     Property="Color"
                                                     Value="#FFA5A5A5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                 Value="false">
                                                        <Setter Property="Opacity"
                                                    Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ToolBarGripper"
                     Color="#C6C3C6"/>

    <Style x:Key="ToolBarThumbStyle"
           TargetType="{x:Type Thumb}">
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush Viewbox="0,0,4,4"
                                              Viewport="0,0,4,4"
                                              TileMode="Tile"
                                              ViewportUnits="Absolute"
                                              ViewboxUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White"
                                                                 Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}"
                                                                 Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Cursor"
                                    Value="SizeAll"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>
      
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,3,3,0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="6"
                                Height="7"
                                Margin="7,2,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1 1.5 L 6 1.5"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0 0.5 L 5 0.5"/>
                            <Path Fill="White"
                                  Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="MinHeight"
                Value="0"/>
        <Setter Property="MinWidth"
                Value="0"/>       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Bd"
                            CornerRadius="0,0,3,3"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Canvas Width="7"
                                Height="6"
                                Margin="2,7,2,2"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Bottom"
                                SnapsToDevicePixels="true">
                            <Path Stroke="White"
                                  Data="M 1.5 1 L 1.5 6"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                                  Data="M 0.5 0 L 0.5 5"/>
                            <Path Fill="White"
                                  Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
                            <Path Fill="{TemplateBinding Foreground}"
                                  Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource ToolBarGripper}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style x:Key="DefaultToolBarStyle"
           TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid Name="Grid"
                          Margin="3,1,1,1"
                          SnapsToDevicePixels="true">
                            <Grid HorizontalAlignment="Right"
                              x:Name="OverflowGrid">
                                <ToggleButton x:Name="OverflowButton"
                                          FocusVisualStyle="{x:Null}"
                                          IsEnabled="{TemplateBinding HasOverflowItems}"
                                          Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
                                          IsChecked="{Binding Path=IsOverflowOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding Path=IsOverflowOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="false"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                                              Color="Transparent">
                                        <Border Background="{StaticResource ContentBackgroundBrush}"
                                            BorderBrush="{StaticResource ContentBorderBrush}"
                                            BorderThickness="1">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              Margin="2"
                                                              WrapWidth="200"
                                                              Focusable="true" 
                                                              FocusVisualStyle="{x:Null}"
                                                              KeyboardNavigation.TabNavigation="Cycle"
                                                              KeyboardNavigation.DirectionalNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder"
                                Margin="0,0,11,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3,3,3,3"
                                Padding="{TemplateBinding Padding}">
                                <DockPanel KeyboardNavigation.TabIndex="1"
                                       KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb"
                                       Style="{StaticResource ToolBarThumbStyle}"
                                       Margin="-3,-1,0,0"
                                       Width="10"
                                       Padding="6,5,1,6"/>
                                    <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Margin="4,0,4,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              IsItemsHost="true"
                                              Margin="0,1,2,2"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen"
                                 Value="true">
                                <Setter TargetName="ToolBarThumb"
                                    Property="IsEnabled"
                                    Value="false"/>
                            </Trigger>
                            <Trigger Property="Header"
                                 Value="{x:Null}">
                                <Setter TargetName="ToolBarHeader"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked"
                                 Value="true">
                                <Setter TargetName="ToolBarThumb"
                                    Property="Visibility"
                                    Value="Collapsed"/>
                            </Trigger>
                            <Trigger SourceName="OverflowPopup"
                                 Property="Popup.HasDropShadow"
                                 Value="true">
                                <Setter TargetName="Shdw"
                                    Property="Margin"
                                    Value="0,0,5,5"/>
                                <Setter TargetName="Shdw"
                                    Property="SnapsToDevicePixels"
                                    Value="true"/>
                                <Setter TargetName="Shdw"
                                    Property="Color"
                                    Value="#FFA5A5A5"/>
                            </Trigger>
                            <Trigger Property="Orientation"
                                 Value="Vertical">
                                <Setter TargetName="Grid"
                                    Property="Margin"
                                    Value="1,3,1,1"/>
                                <Setter TargetName="OverflowButton"
                                    Property="Style"
                                    Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Height"
                                    Value="10"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Width"
                                    Value="Auto"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Margin"
                                    Value="-1,-3,0,0"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="Padding"
                                    Value="5,6,6,1"/>
                                <Setter TargetName="ToolBarHeader"
                                    Property="Margin"
                                    Value="0,0,0,4"/>
                                <Setter TargetName="PART_ToolBarPanel"
                                    Property="Margin"
                                    Value="1,0,2,2"/>
                                <Setter TargetName="ToolBarThumb"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                <Setter TargetName="ToolBarHeader"
                                    Property="DockPanel.Dock"
                                    Value="Top"/>
                                <Setter TargetName="OverflowGrid"
                                    Property="HorizontalAlignment"
                                    Value="Stretch"/>
                                <Setter TargetName="OverflowGrid"
                                    Property="VerticalAlignment"
                                    Value="Bottom"/>
                                <Setter TargetName="OverflowPopup"
                                    Property="Placement"
                                    Value="Right"/>
                                <Setter TargetName="MainPanelBorder"
                                    Property="Margin"
                                    Value="0,0,0,11"/>
                                <Setter Property="Background"
                                    Value="{StaticResource ContentBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Foreground"
                                    Value="#FF6D6D6D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <Style BasedOn="{StaticResource DefaultToolBarStyle}" TargetType="{x:Type ToolBar}"/>


    <Style x:Key="ContentControlStyle"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
    <Style BasedOn="{StaticResource ContentControlStyle}" TargetType="{x:Type ContentControl}"/>

        <Style x:Key="DefaultFlowDocumentStyle"
           TargetType="{x:Type FlowDocument}">
            <Setter Property="TextAlignment"
                Value="Justify"/>
            <Setter Property="FontFamily"
                Value="Georgia"/>
            <Setter Property="FontSize"
                Value="16.0"/>
            <Setter Property="Background" Value="{StaticResource  ContentBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentStyle}" TargetType="{x:Type FlowDocument}"/>

        <Style x:Key="DefaultTextBlockStyle"
           TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping"
                Value="NoWrap"/>
            <Setter Property="TextTrimming"
                Value="None"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontWeight" Value="Light"/>               
            </Trigger>
        </Style.Triggers>
    </Style>
    
       <Style BasedOn="{StaticResource DefaultTextBlockStyle}" TargetType="{x:Type TextBlock}"/>

        <Style x:Key="{x:Type Bold}"
           TargetType="{x:Type Bold}">
            <Setter Property="FontWeight"
                Value="Bold"/>
        </Style>
    

        <Style x:Key="DefaultFlowDocumentPageViewerStyle" TargetType="{x:Type FlowDocumentPageViewer}">
            <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentPageViewerStyle}" TargetType="{x:Type FlowDocumentPageViewer}"/>


    <Style x:Key="DefaultFlowDocumentReaderStyle" TargetType="{x:Type FlowDocumentReader}">
            <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        </Style>
    <Style BasedOn="{StaticResource DefaultFlowDocumentReaderStyle}" TargetType="{x:Type FlowDocumentReader}"/>

        <Style x:Key="{x:Type Italic}"
           TargetType="{x:Type Italic}">
            <Setter Property="FontStyle"
                Value="Italic"/>
        </Style>
        <Style x:Key="{x:Type Underline}"
           TargetType="{x:Type Underline}">
            <Setter Property="TextDecorations"
                Value="Underline"/>
        </Style>
        <Style x:Key="{x:Type Paragraph}"
           TargetType="{x:Type Paragraph}">
            <Setter Property="Margin"
                Value="Auto"/>
            <Setter Property="Foreground" Value="{StaticResource  ContentForegroundBrush}"/>
        </Style>

        <Style x:Key="{x:Type List}"
           TargetType="{x:Type List}">
            <Setter Property="Margin"
                Value="Auto"/>
            <Setter Property="Padding"
                Value="Auto"/>
        </Style>
        <Style x:Key="{x:Type Floater}"
           TargetType="{x:Type Floater}">
            <Setter Property="HorizontalAlignment"
                Value="Right"/>
        </Style>

        <DataTemplate DataType="{x:Type FlowDocument}">
            <FlowDocumentReader Document="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type FixedDocument}">
            <DocumentViewer Document="{Binding}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type FixedDocumentSequence}">
            <DocumentViewer Document="{Binding}"/>
        </DataTemplate>

        <Style x:Key="{x:Type HeaderedContentControl}"
           TargetType="{x:Type HeaderedContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                        <StackPanel>
                            <ContentPresenter ContentSource="Header"/>
                            <ContentPresenter/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="{x:Type ItemsControl}"
           TargetType="{x:Type ItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="DefaultLabelStyle"
           TargetType="{x:Type Label}">
            <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Padding"
                Value="5"/>
            <Setter Property="HorizontalContentAlignment"
                Value="Left"/>
            <Setter Property="VerticalContentAlignment"
                Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter Property="Foreground"
                                    Value="#FF6D6D6D"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
<Style BasedOn="{StaticResource DefaultLabelStyle}" TargetType="{x:Type Label}"/>


        <!-- Page -->

        <Style x:Key="{x:Type Page}"
           TargetType="{x:Type Page}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Page.Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DefaultRichTextBoxStyle"
          
           TargetType="{x:Type RichTextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type FlowDocument}"
                   TargetType="{x:Type FlowDocument}">
                    <Setter Property="OverridesDefaultStyle"
                        Value="true"/>
                </Style>
            </Style.Resources>
            <Setter Property="MinWidth"
                Value="10"/>
        </Style>
    
    <Style BasedOn="{StaticResource DefaultRichTextBoxStyle}" TargetType="{x:Type RichTextBox}"/>

        <Style x:Key="{x:Type UserControl}"
           TargetType="{x:Type UserControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type UserControl}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Window -->
    <!--<ControlTemplate TargetType="{x:Type Window}" x:Key="DefaultWindowTemplate">
        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
            <AdornerDecorator>
                <ContentPresenter/>
            </AdornerDecorator>
        </Border>
    </ControlTemplate>-->








</ResourceDictionary>
