@page "/"
@using Tauron.Application.Deployment.Server.CoreApp.Bridge
@using Tauron.Application.Deployment.Server.Pages.Setup
@inject IServerBridge ServerBridge
@inject NavigationManager NavigationManager;

<BSContainer IsFluid="true"> 
    <BSRow style="height: 200px">
        <BSCol/>
        <BSCol>
            <h1 class="align-content-center">Deployment Server Status</h1>
        </BSCol>
        <BSCol/>
    </BSRow>
    <div class="row align-content-center @(IsLoading ? "" : "collapse")">
        <BSCol/>
        <BSCol>
            <div class="lds-dual-ring align-content-center"></div>
            <p class="align-content-center">Infos werden Abgerufen</p>
        </BSCol>
        <BSCol/>
    </div>
    <BSRow Class="justify-content-md-center">
        <p Class="col-auto align-middle">
            Setup:
        </p>
        <BSCol Class="col-auto">
            <BSButton @bind-Color="@SetupColor" OnClick="@SetupClick">
                <span>@SetupText</span>
            </BSButton>
        </BSCol>
    </BSRow>
</BSContainer>

@code
{
    private bool IsLoading { get; set; } = true;

    private Color SetupColor { get; set; } = Color.Warning;

    private bool SetupFinish => ServerBridge.ClientSetup.IsFinish;

    private string SetupText { get; set; } = "Laden...";

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        await ServerBridge.ClientSetup.Init();
        SetupColor = SetupFinish ? Color.Light : Color.Success;
        SetupText = SetupFinish ? "Fertig" : "Starten";
        
        IsLoading = false;
    }

    private async Task SetupClick()
    {
        if(IsLoading || SetupFinish) return;

        var id = await ServerBridge.ClientSetup.GetNewId();
        NavigationManager.NavigateTo("/setup/step1".MakeSetupUri(id));
    }
}
