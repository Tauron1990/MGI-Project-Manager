<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>
    <ClientAppFolder>$(MSBuildProjectDirectory)/ClientApp</ClientAppFolder>
    <TypeScriptToolsVersion>3.3</TypeScriptToolsVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="ClientApp\js\file.tsx" />
    <None Remove="ClientApp\ts\Admin\adminMain.ts" />
    <None Remove="ClientApp\ts\File\FileIndex.ts" />
    <None Remove="ClientApp\ts\File\FileLinking.ts" />
    <None Remove="ClientApp\ts\Identity\identityMain.ts" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="FluentValidation" Version="8.2.2" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="8.2.2" />
    <PackageReference Include="Microsoft.AspNet.SignalR" Version="2.4.0" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="1.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="4.0.1" />
    <PackageReference Include="Syncfusion.EJ2.AspNet.Core" Version="17.1.0.38" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="ClientApp\ts\ApiClient\" />
    <Folder Include="wwwroot\dist\" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\Extern\Tauron.Application.Common\Tauron.Application.Common.csproj" />
    <ProjectReference Include="..\Tauron.Application.MgiProjectManager.BL\Tauron.Application.MgiProjectManager.BL.csproj" />
    <ProjectReference Include="..\Tauron.Application.MgiProjectManager.Resources\Tauron.Application.MgiProjectManager.Resources.csproj" />
    <ProjectReference Include="..\Tauron.Application.MgiProjectManager.Server.Data\Tauron.Application.MgiProjectManager.Server.Data.csproj" />
  </ItemGroup>
  
  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\ts\Admin\adminMain.ts" />
    <TypeScriptCompile Include="ClientApp\ts\ApiClient\Client.g.ts" />
    <TypeScriptCompile Include="ClientApp\ts\File\FileIndex.ts" />
    <TypeScriptCompile Include="ClientApp\ts\File\FileLinking.ts" />
    <TypeScriptCompile Include="ClientApp\ts\Identity\identityMain.ts" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Update="Pages\Index.cshtml">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <!--<Target Name="EnsureNodeModules" BeforeTargets="Build"> Condition=" '$(Configuration)' == 'Debug' And !Exists('$(ClientAppFolder)\node_modules') ">
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(ClientAppFolder)" Command="npm install" />
  </Target>-->

  <Target Name="BuildClientAssets" BeforeTargets="ComputeFilesToPublish" Condition=" '$(Configuration)' == 'Release'">
    <!--BeforeTargets="Build">-->
    <Exec WorkingDirectory="$(ClientAppFolder)" Command="npm install" />
    <Exec WorkingDirectory="$(ClientAppFolder)" Command="npm run prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(ClientAppFolder)\wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>

  </Target>

  <Target Name="BuildClientAssets" BeforeTargets="ComputeFilesToPublish" Condition=" '$(Configuration)' == 'Debug'">
    <!--BeforeTargets="Build">-->
    <Exec WorkingDirectory="$(ClientAppFolder)" Command="npm install" />
    <Exec WorkingDirectory="$(ClientAppFolder)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(ClientAppFolder)\wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>

  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES2015</TypeScriptTarget>
    <TypeScriptJSXEmit>Preserve</TypeScriptJSXEmit>
    <TypeScriptModuleKind>CommonJS</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

  <!--<Target Name="NSwag" BeforeTargets="PrepareForBuild" Condition="'$(GenerateCode)'=='True' ">
    <Exec Command="$(NSwagExe_Core22) run nswag.json /variables:Configuration=$(Configuration)" />
  </Target>-->
</Project>
