@using Microsoft.AspNetCore.Identity
@using Tauron.Application.MgiProjectManager.Server.Core
@using Tauron.Application.MgiProjectManager.Server.Data.Core
@inject SignInManager<IdentityUser> SignInManager
@*@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}*@
@inject SimpleLoc SimpleLoc

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">@SimpleLoc["_ManageNav_Account_Profile"]</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">@SimpleLoc["Account_ManageNav_Password"]</a>
    </li>
    @*@if (hasExternalLogins)
        {
        <li baseId="external-logins" class="nav-item"><a baseId="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }*@
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" baseId="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>*@
    @if (User?.IsInRole(RoleNames.Admin) == false)
    {
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">@SimpleLoc["Account_ManageNav_PersonalData"]</a>
        </li>
    }
</ul>