@layout MainLayout
@inherits LayoutComponentBase
@using Tauron.Application.Deployment.Server.CoreApp.Bridge
@using Tauron.Application.Deployment.Server.CoreApp.Client
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.Popups
@implements IDisposable
@inject IServerBridge ServerBridge
@inject NavigationManager NavigationManager
@inject IErrorDelegator ErrorDelegator

<BSContainer>
    <BSRow Class="h-25" style="height: 200px">
        <BSCol/>
        <BSCol>
            <h1 class="align-content-center">Setup Assistent</h1>
        </BSCol>
        <BSCol/>
    </BSRow>
    @Body
    <EjsDialog @ref="ErrorDialog" Width="250px" IsModal="true" Visible="false">
        <DialogTemplates>
            <Header>Errors</Header>
            <Content>
                <span>@ErrorText</span>
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton ButtonModel="@ErrorOkButton" OnClick="@Return"/>
        </DialogButtons>
    </EjsDialog>
</BSContainer>

@code {

    private readonly ButtonModel ErrorOkButton = new ButtonModel {Content = "Ok", IsPrimary = true};
    private EjsDialog ErrorDialog;
    private string ErrorText = "Null";

    protected override async Task OnInitializedAsync()
    {
        if (!await ServerBridge.ClientSetup.InvalidateId(NavigationManager.ReadSetupId()))
            NavigationManager.NavigateTo("/");

        ErrorDelegator.ErrorRecived += ErrorHandler;
    }

    private async Task Return(object o)
    {
        await ErrorDialog!.Hide();
        await Task.Delay(500);
        NavigationManager.NavigateTo("/");
    }

    private async void ErrorHandler(string message)
    {
        ErrorText = message;
        await ErrorDialog!.Show();
        StateHasChanged();
    }

    public void Dispose()
    {
        ErrorDelegator.ErrorRecived -= ErrorHandler;
    }

}