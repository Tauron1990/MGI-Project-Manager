<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
>

	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


    <FontFamily x:Key="EditorsFontFamily">Segoe UI</FontFamily>

    <Style x:Key="EditorsButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource EditorsButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource  BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource  ForegroundBrush}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{StaticResource BorderBrush}" Background="{StaticResource BackgroundBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Content>
                                <Path x:Name="path" Data="M8.8391705,0 L12.63117,0 12.63117,8.8421954 21.292883,9.0213641 21.214462,12.812552 12.63117,12.635006 12.63117,21.219 8.8391705,21.219 8.8391705,12.556568 0,12.37373 0.078421593,8.5825404 8.8391705,8.7637576 z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.504167072942309,0.500000001457386" Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="44.779" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource ActiveGlyphBrush}" />
							<Setter Property="Foreground" Value="{StaticResource  ActiveForegroundBrush}" />
                        </Trigger>
						<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Chrome" Value="{StaticResource HoverBorderBrush}" />
                            <Setter Property="Fill" TargetName="path" Value="{StaticResource HoverGlyphBrush}" />
							<Setter Property="Foreground" Value="{StaticResource  HoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="contextmenu">
        <MenuItem Header="Cut" Command="Cut" />
        <MenuItem Header="Copy" Command="Copy" />
        <MenuItem Header="Paste" Command="Paste" />
    </ContextMenu>

    <shared:ProgressConverter x:Key="progressConverter" />
    <shared:ClipConverter x:Key="clipConverter" />
    <shared:RadiusConverter x:Key="radiusConverter" />
    <shared:BooleanToVisibilityConverterEx x:Key="booleanToVisibilityConverter" />

    <Style x:Key="MetroIntegerTextBoxStyle" TargetType="{x:Type shared:IntegerTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="PositiveForeground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource contextmenu}" />
        <Setter Property="FontFamily" Value="{DynamicResource EditorsFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type shared:IntegerTextBox}">
                    <Grid>

                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                              RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource clipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding RangeAdornerBackground}" Visibility="Collapsed" BorderThickness="0" x:Name="RangeAdornerBorder" IsHitTestVisible="False">
                                    <Border.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource progressConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MaxValue" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                    </Border.RenderTransform>
                                </Border>

                                <ScrollViewer VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentHost"  Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,0,0"
                                IsTabStop="False" IsHitTestVisible="False" Background="{TemplateBinding WatermarkBackground}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>

                        <Border x:Name="MouseOverBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource HoverBorderBrush}" />
                        <Border x:Name="FocusBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}"  Visibility="Collapsed" Opacity="1" BorderBrush="{TemplateBinding FocusedBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableRangeAdorner" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility" Value="Visible" TargetName="RangeAdornerBorder" />
                            <Setter Property="RangeAdornerBackground" Value="{StaticResource ActiveBackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="EnableRangeAdorner" Value="False">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroIntegerTextBoxStyle}" TargetType="{x:Type shared:IntegerTextBox}" />

    <Style x:Key="MetroDoubleTextBoxStyle" TargetType="{x:Type shared:DoubleTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="PositiveForeground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource EditorsFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="SelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource contextmenu}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:DoubleTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                              RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource clipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding RangeAdornerBackground}" Visibility="Collapsed" BorderThickness="0" x:Name="RangeAdornerBorder" IsHitTestVisible="False">
                                    <Border.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource progressConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MaxValue" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                    </Border.RenderTransform>
                                </Border>

                                <ScrollViewer VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,0,0"
                                IsTabStop="False" IsHitTestVisible="False" Background="{TemplateBinding WatermarkBackground}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource HoverBorderBrush}" />
                        <Border x:Name="FocusBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{TemplateBinding FocusedBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableRangeAdorner" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility" Value="Visible" TargetName="RangeAdornerBorder" />
                            <Setter Property="RangeAdornerBackground" Value="{StaticResource ActiveBackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="EnableRangeAdorner" Value="False">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroDoubleTextBoxStyle}" TargetType="{x:Type shared:DoubleTextBox}" />

    <Style x:Key="MetroCurrencyTextBoxStyle" TargetType="{x:Type shared:CurrencyTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="PositiveForeground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource EditorsFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="SelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource contextmenu}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:CurrencyTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                              RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource clipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding RangeAdornerBackground}" Visibility="Collapsed" BorderThickness="0" x:Name="RangeAdornerBorder" IsHitTestVisible="False">
                                    <Border.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource progressConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MaxValue" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                    </Border.RenderTransform>
                                </Border>

                                <ScrollViewer VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,0,0"
                                IsTabStop="False" IsHitTestVisible="False" Background="{TemplateBinding WatermarkBackground}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource HoverBorderBrush}" />
                        <Border x:Name="FocusBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{TemplateBinding FocusedBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableRangeAdorner" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility" Value="Visible" TargetName="RangeAdornerBorder" />
                            <Setter Property="RangeAdornerBackground" Value="{StaticResource ActiveBackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="EnableRangeAdorner" Value="False">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroCurrencyTextBoxStyle}" TargetType="{x:Type shared:CurrencyTextBox}" />

    <Style x:Key="MetroPercentTextBoxStyle" TargetType="{x:Type shared:PercentTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="PositiveForeground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource EditorsFontFamily}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="SelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource contextmenu}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:PercentTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry
                                              RadiusX="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}"
                                              RadiusY="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Border}}, Path=CornerRadius,Converter={StaticResource radiusConverter}}">
                                    <RectangleGeometry.Rect>
                                        <MultiBinding Converter="{StaticResource clipConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor,AncestorType={x:Type Border}}" Path="ActualHeight" />
                                        </MultiBinding>
                                    </RectangleGeometry.Rect>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Background="{TemplateBinding RangeAdornerBackground}" Visibility="Collapsed" BorderThickness="0" x:Name="RangeAdornerBorder" IsHitTestVisible="False">
                                    <Border.RenderTransform>
                                        <ScaleTransform>
                                            <ScaleTransform.ScaleX>
                                                <MultiBinding Converter="{StaticResource progressConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PercentValue" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MaxValue" />
                                                </MultiBinding>
                                            </ScaleTransform.ScaleX>
                                        </ScaleTransform>
                                    </Border.RenderTransform>
                                </Border>

                                <ScrollViewer VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl  x:Name="PART_Watermark" Foreground="{TemplateBinding WatermarkTextForeground}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,0,0"
                                IsTabStop="False" IsHitTestVisible="False" Background="{TemplateBinding WatermarkBackground}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                Padding="{TemplateBinding Padding}"
                                Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" Grid.Row="0" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource HoverBorderBrush}" />
                        <Border x:Name="FocusBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{TemplateBinding FocusedBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding" Value="1,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableRangeAdorner" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="False" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility" Value="Visible" TargetName="RangeAdornerBorder" />
                            <Setter Property="RangeAdornerBackground" Value="{StaticResource ActiveBackgroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="EnableRangeAdorner" Value="False">
                            <Setter TargetName="Border" Property="Clip" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroPercentTextBoxStyle}" TargetType="{x:Type shared:PercentTextBox}" />

    <Style x:Key="MetroMaskedTextBoxStyle" TargetType="{x:Type shared:MaskedTextBox}">
        <Setter Property="FocusedBorderBrush" Value="{StaticResource  ActiveBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource EditorsFontFamily}" />
        <Setter Property="Foreground" Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="WatermarkTextForeground" Value="{StaticResource ContentSelectionBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectionForeground" Value="{StaticResource ActiveForegroundBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource contextmenu}" />
        <Setter Property="Padding" Value="3,0,0,0" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:MaskedTextBox}">
                    <Grid>
                        <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ScrollViewer  VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{TemplateBinding ContentElementVisibility}" />

                                <ContentControl x:Name="PART_Watermark"   VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding WatermarkTextForeground}"
                                IsTabStop="False" IsHitTestVisible="False" Background="{TemplateBinding WatermarkBackground}"
                                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}"
                                Margin="{TemplateBinding Padding}" Cursor="IBeam"
                                Visibility="{TemplateBinding WatermarkVisibility}" Content="{TemplateBinding WatermarkText}"
                                Opacity="{TemplateBinding WatermarkOpacity}" ContentTemplate="{TemplateBinding WatermarkTemplate}" />
                            </Grid>
                        </Border>
                        <Border x:Name="MouseOverBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{StaticResource   HoverBorderBrush}" />
                        <Border x:Name="FocusBorder" SnapsToDevicePixels="True" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" Opacity="1" BorderBrush="{TemplateBinding FocusedBorderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="True">
                            <Setter Property="Padding"  Value="1,9" TargetName="Border" />
                            <Setter Property="FontSize"  Value="18" />
                            <Setter Property="EnableTouch" Value="True" />
                            <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroMaskedTextBoxStyle}" TargetType="{x:Type shared:MaskedTextBox}" />
</ResourceDictionary>
