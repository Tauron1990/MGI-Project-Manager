<ResourceDictionary  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:charts="clr-namespace:Syncfusion.UI.Xaml.Charts;assembly=Syncfusion.SfChart.WPF">

    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="/Syncfusion.SfChart.WPF;component/Sparkline/Themes/Sparkline.xaml"/>
        <ResourceDictionary Source="/Syncfusion.SfChart.WPF;component/Controls/Themes/Resizer.xaml"/>
</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />

	
	<!--ChartAxis-->
	
	<!--SfChartCommon-->
	
	<charts:DragElementRotateConverter x:Key="dragElementRotateConverter"/>
    <charts:LabelContentPathConverter x:Key="labelContentPathConverter" />
    <charts:LabelBackgroundConverter x:Key="labelBackgroundConverter"/>
    <charts:LabelForegroundConverter x:Key="labelForegroundConverter"/>
    
    <CornerRadius x:Key="TooltipCornerRadius">3</CornerRadius>
    <Thickness x:Key="TooltipPadding" >4</Thickness>
    <sys:Double x:Key="TooltipFontSize">15</sys:Double>
    <Thickness x:Key="TooltipBorderThickness" >1</Thickness>
    <sys:Double x:Key="TrackBallLineStrokeThickness" >1.5</sys:Double>

    <Color x:Key="TrackBallAxisLabelBackground">#ffffff</Color>
    <Color x:Key="TrackBallAxisLabelForeground">#333333</Color>
    <Color x:Key="TrackBallAxisLabelBorderBrush">#c8c8c8</Color>
    <Thickness x:Key="TrackBallAxisLabelBorderThickness" >1</Thickness>
    <Thickness x:Key="TrackBallAxisLabelPadding" >4,0,4,3</Thickness>
  <sys:Double x:Key="TrackBallAxisLabelFontSize">16</sys:Double>
  
  
    <sys:Double x:Key="TrackBallLabelBorderThickness" >0.3</sys:Double>
    <Thickness x:Key="TrackBallLabelPadding" >4,0,4,3</Thickness>
    <sys:Double x:Key="TrackBallLabelFontSize">15</sys:Double>
 
    <DataTemplate x:Key="SegmentDragInfo">
        <StackPanel Orientation="Vertical" Margin="0,0,0,20">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Stretch" Opacity="0.6" Fill="{Binding Brush}"></Rectangle>
                <ContentControl  Grid.Column="0" ContentTemplate="{Binding PrefixLabelTemplate}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                <TextBlock Grid.Column="1" Margin="3" Foreground="White" FontSize="20"  Text="{Binding NewValue, StringFormat='.###'}"></TextBlock>
                <ContentControl Grid.Column="2" ContentTemplate="{Binding PostfixLabelTemplate}" VerticalContentAlignment="Bottom"/>
            </Grid>
            <Path Opacity="0.6" Data="M167.5,212.46L199.5,177.507 231.5,212.46 167.5,212.46z"  Stretch="Uniform" Fill="{Binding Brush}" Width="15" Height="15" Margin="0,-3,0,0" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform Angle="180"></RotateTransform>
                </Path.RenderTransform>
            </Path>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="pathStyle" TargetType="Path">
        <Setter Property="Stroke" Value="Black"></Setter>
        <Setter Property="StrokeThickness" Value="1"></Setter>
    </Style>

    <DataTemplate x:Key="AdornmentLabelTemplate">
        <Border Background="{Binding Converter={StaticResource labelBackgroundConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{Binding BorderBrush}" BorderThickness="{Binding BorderThickness}">
            <TextBlock Text="{Binding Converter={StaticResource labelContentPathConverter}}" IsHitTestVisible="False" FontStyle="{Binding FontStyle}" Margin="{Binding Margin}" FontSize="{Binding FontSize}" FontFamily="{Binding FontFamily}" Foreground="{Binding Converter={StaticResource labelForegroundConverter}, ConverterParameter=true}"  />
       </Border>
    </DataTemplate>

    <DataTemplate x:Key="AdornmentDefaultLabelTemplate">
        <Border Background="{Binding Converter={StaticResource labelBackgroundConverter}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{Binding BorderBrush}" BorderThickness="{Binding BorderThickness}">
            <TextBlock Foreground="{Binding Converter={StaticResource labelForegroundConverter},ConverterParameter=false}" IsHitTestVisible="False" FontFamily="{Binding FontFamily}" FontStyle="{Binding FontStyle}" Margin="{Binding Margin}" FontSize="{Binding FontSize}" Text="{Binding Converter={StaticResource labelContentPathConverter}}" />
         </Border>
    </DataTemplate>

    <DataTemplate x:Key="SegmentDragInfoOppLeft">
        <StackPanel Orientation="Horizontal" Margin="0,0,20,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Stretch" Opacity="0.6" Fill="{Binding Brush}"></Rectangle>
                <ContentControl  Grid.Column="0" ContentTemplate="{Binding PrefixLabelTemplate}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                <TextBlock Grid.Column="1" Margin="3" Foreground="White" FontSize="20"  Text="{Binding NewValue, StringFormat='.###'}"></TextBlock>
                <ContentControl Grid.Column="2" ContentTemplate="{Binding PostfixLabelTemplate}" VerticalContentAlignment="Bottom"/>
            </Grid>
            <Path Opacity="0.6" Data="M167.5,212.46L199.5,177.507 231.5,212.46 167.5,212.46z" Stretch="Uniform" Fill="{Binding Brush}" Width="15" Height="15" Margin="-4,0,0,0" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform Angle="90"></RotateTransform>
                </Path.RenderTransform>
            </Path>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SegmentDragInfoOppRight">
        <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
            <Path Opacity="0.6" Data="M167.5,212.46L199.5,177.507 231.5,212.46 167.5,212.46z" Stretch="Uniform" Fill="{Binding Brush}" Width="15" Height="15" Margin="0,0,-4,0" RenderTransformOrigin="0.5,0.5">
                <Path.RenderTransform>
                    <RotateTransform Angle="270"></RotateTransform>
                </Path.RenderTransform>
            </Path>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Stretch" Opacity="0.6" Fill="{Binding Brush}"></Rectangle>
                <ContentControl  Grid.Column="0" ContentTemplate="{Binding PrefixLabelTemplate}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                <TextBlock Grid.Column="1" Margin="3" Foreground="White" FontSize="20"  Text="{Binding NewValue, StringFormat='.###'}"></TextBlock>
                <ContentControl Grid.Column="2" ContentTemplate="{Binding PostfixLabelTemplate}" VerticalContentAlignment="Bottom"/>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SegmentDragInfoOppBottom">
        <StackPanel Orientation="Vertical" Margin="0,20,0,0">
            <Path Opacity="0.6" Data="M167.5,212.46L199.5,177.507 231.5,212.46 167.5,212.46z" Stretch="Uniform" Fill="{Binding Brush}" Width="15" Height="15" Margin="0,0,0,-4" RenderTransformOrigin="0.5,0.5">
            </Path>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Rectangle Grid.ColumnSpan="3" VerticalAlignment="Stretch" Opacity="0.6" Fill="{Binding Brush}"></Rectangle>
                <ContentControl  Grid.Column="0" ContentTemplate="{Binding PrefixLabelTemplate}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
                <TextBlock Grid.Column="1" Margin="3" Foreground="White" FontSize="20"  Text="{Binding NewValue, StringFormat='.###'}"></TextBlock>
                <ContentControl Grid.Column="2" ContentTemplate="{Binding PostfixLabelTemplate}" VerticalContentAlignment="Bottom"/>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <ControlTemplate x:Key="DragSpliterTop">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Ellipse IsHitTestVisible="False" Grid.Column="0" Fill="White"/>
            <Ellipse IsHitTestVisible="False" Grid.Column="2" Fill="White"/>
            <Ellipse IsHitTestVisible="False" Grid.Column="4" Fill="White"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DragSpliterLeft">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Ellipse IsHitTestVisible="False" Grid.Row="0" Fill="White"/>
            <Ellipse IsHitTestVisible="False" Grid.Row="2" Fill="White"/>
            <Ellipse IsHitTestVisible="False" Grid.Row="4" Fill="White"/>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="SeriesDragInfoVertical">
        <Grid>
            <StackPanel Height="{Binding OffsetY}" Orientation="Horizontal">
                <Grid RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <RotateTransform Angle="{Binding IsNegative, Converter={StaticResource dragElementRotateConverter}}"/>
                    </Grid.RenderTransform>
                    <Path VerticalAlignment="Top" Width="15" Height="20" Fill="{Binding Brush}" Data="F1M753.644,-13.0589L753.736,-12.9639 753.557,-12.7816 732.137,8.63641 732.137,29.7119 756.445,5.40851 764.094,-2.24384 764.275,-2.42352 771.834,5.1286 796.137,29.4372 796.137,8.36163 774.722,-13.0589 764.181,-23.5967 753.644,-13.0589z" Stretch="Uniform" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <RotateTransform Angle="180" />
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Rectangle VerticalAlignment="Stretch" Width="3" Fill="{Binding Brush}"/>
                </Grid>
                <TextBlock Foreground="{Binding Brush}" VerticalAlignment="Center" FontSize="17" HorizontalAlignment="Center"  Text="{Binding
                 Delta , StringFormat='.###'}"></TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="SeriesDragInfoHorizontal">
        <Grid>
            <StackPanel Width="{Binding OffsetY}" >
                <Grid RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <RotateTransform Angle="{Binding IsNegative, Converter={StaticResource dragElementRotateConverter}}"/>
                    </Grid.RenderTransform>
                    <Rectangle HorizontalAlignment="Stretch" Height="3" Fill="{Binding Brush}"/>
                    <Path HorizontalAlignment="Left"  Width="15" Height="20" Fill="{Binding Brush}" Data="F1M753.644,-13.0589L753.736,-12.9639 753.557,-12.7816 732.137,8.63641 732.137,29.7119 756.445,5.40851 764.094,-2.24384 764.275,-2.42352 771.834,5.1286 796.137,29.4372 796.137,8.36163 774.722,-13.0589 764.181,-23.5967 753.644,-13.0589z" Stretch="Uniform" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <TransformGroup.Children>
                                    <RotateTransform Angle="270" />
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                </TransformGroup.Children>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
                <TextBlock Foreground="{Binding Brush}" VerticalAlignment="Center" FontSize="17" HorizontalAlignment="Center"  Text="{Binding
                 Delta , StringFormat='.###'}"></TextBlock>
            </StackPanel>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="AxisLabelsCustomTemplate">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentControl  Grid.Column="0" x:Name="PrefixLabel" ContentTemplate="{Binding PrefixLabelTemplate}" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom"/>
            <TextBlock x:Name="textBlock" Grid.Column="1" Text="{Binding LabelContent}"/>
            <ContentControl Grid.Column="2" x:Name="PostfixLabel" ContentTemplate="{Binding PostfixLabelTemplate}" VerticalContentAlignment="Bottom"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="linestyle1" TargetType="Line">
        <Setter Property="Stroke" Value="Black"></Setter>
    </Style>

    <DataTemplate x:Key="trackerSymbolTemplate">
        <Ellipse Fill="{Binding Fill}" Stroke="{Binding Stroke}" StrokeThickness="{Binding StrokeThickness}" Height="{Binding Height}" Width="{Binding Width}">
        </Ellipse>
    </DataTemplate>
    
    <!--Track Ball and Cross Hair line style-->
    <Style x:Key="trackBallLineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="StrokeThickness" Value="{StaticResource TrackBallLineStrokeThickness}"></Setter>
    </Style>

    <LinearGradientBrush x:Key="backgroundbrush"  EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBFFFF" Offset="0.388"/>
        <GradientStop Color="#FFCAF5F8" Offset="0.398"/>
        <GradientStop Color="#FFD1F8FA" Offset="0.791"/>
        <GradientStop Color="#FFEAFFFF" Offset="0.801"/>
        <GradientStop Color="#FFEAFFFF" Offset="0.99"/>
        <GradientStop Color="#FFA3B9CC" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="roundthumbstyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#D8FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#8CFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                        <ColorAnimation Duration="0" To="#3FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Ellipse x:Name="BackgroundGradient" Fill="{StaticResource backgroundbrush}" Stroke="#FF6E8DAC" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  <DataTemplate x:Key="trackBallLabel">
    <Grid>
      <Polygon StrokeThickness="{StaticResource TrackBallLabelBorderThickness}" Stroke="{StaticResource ContentBorderBrush}" Fill="{StaticResource ContentBackgroundBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Points="{Binding PolygonPoints}"  />
      <TextBlock  FontSize="{StaticResource TrackBallLabelFontSize}" Text="{Binding ValueY}" Foreground="{StaticResource ContentForegroundBrush}" Padding="{StaticResource TrackBallLabelPadding}" />
    </Grid>
  </DataTemplate>

  <SolidColorBrush x:Key="trackBallBackground" Color="{StaticResource TrackBallAxisLabelBackground}"></SolidColorBrush>
  <SolidColorBrush x:Key="trackBallForeground" Color="{StaticResource TrackBallAxisLabelForeground}"></SolidColorBrush>
  <SolidColorBrush x:Key="trackBallBorderBrush" Color="{StaticResource TrackBallAxisLabelBorderBrush}"></SolidColorBrush>
  <DataTemplate x:Key="axisTrackBallLabel">
    <Grid >
      <Polygon StrokeThickness="1" Stroke="{StaticResource ContentBorderBrush}"  Fill="{StaticResource  ContentBackgroundBrush}" Points="{Binding PolygonPoints}" />
      <TextBlock  FontSize="{StaticResource TrackBallAxisLabelFontSize}" Text="{Binding ValueX}" Padding="{StaticResource TrackBallAxisLabelPadding}" Foreground="{StaticResource ContentForegroundBrush}"></TextBlock>
      <TextBlock  FontSize="{StaticResource TrackBallAxisLabelFontSize}" Text="{Binding ValueY}" Padding="{StaticResource TrackBallAxisLabelPadding}" Foreground="{StaticResource ContentForegroundBrush}"></TextBlock>
    </Grid>
  </DataTemplate>
 
  <DataTemplate x:Key="axisCrosshairLabel">
    <Border BorderThickness="{StaticResource TrackBallAxisLabelBorderThickness}" BorderBrush="{StaticResource ContentBorderBrush}" Padding="{StaticResource TrackBallAxisLabelPadding}" Background="{StaticResource ContentBackgroundBrush}">
      <Grid>
        <TextBlock  FontSize="{StaticResource TrackBallAxisLabelFontSize}" Text="{Binding ValueX}" Foreground="{StaticResource ContentForegroundBrush}"></TextBlock>
        <TextBlock FontSize="{StaticResource TrackBallAxisLabelFontSize}" Text="{Binding ValueY}" Foreground="{StaticResource ContentForegroundBrush}"></TextBlock>
      </Grid>
    </Border>
  </DataTemplate>

    <!--Default tooltip template-->
    <DataTemplate x:Key="DefaultTooltipTemplate">
        <Border Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{StaticResource TooltipBorderThickness}" CornerRadius="{StaticResource TooltipCornerRadius}" Padding="{StaticResource TooltipPadding}" >
            <ContentControl Content="{Binding YData}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="AnnotationTooltipTemplate">
        <Border Background="White"  BorderThickness="1" Padding="4" >
            <ContentControl Content="{Binding}" Foreground="Black" FontSize="10" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="AxisLabel">
        <Border   CornerRadius="2">
            <Grid Background="#1E90FF" MinWidth="28"  MinHeight="20">
                <TextBlock Text="{Binding}" Padding="2" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <!--Financial Chart Tooltip Template-->
    <DataTemplate x:Key="FinancialTooltipTemplate">
        <Border Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{StaticResource TooltipBorderThickness}" CornerRadius="{StaticResource TooltipCornerRadius}" Padding="{StaticResource TooltipPadding}">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="High  " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding High}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="Open  " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding Open}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="Close  " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding Close}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="Low   " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding Low}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!--Bubble Chart Tooltip Template-->
    <DataTemplate x:Key="BubbleTooltipTemplate">
        <Border Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{StaticResource TooltipBorderThickness}" CornerRadius="{StaticResource TooltipCornerRadius}" Padding="{StaticResource TooltipPadding}">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="YValue " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding YData}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="Size " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding Size}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>
    <!--Range type series Tooltip Template-->
    <DataTemplate x:Key="RangeTooltipTemplate">
        <Border  Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{StaticResource TooltipBorderThickness}" CornerRadius="{StaticResource TooltipCornerRadius}" Padding="{StaticResource TooltipPadding}">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="High " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding High}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock  Text="Low " Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}"></TextBlock>
                    <TextBlock Text="{Binding Low}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
                </StackPanel>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!--Line Series default tooltip template-->
    <DataTemplate x:Key="LineTooltipTemplate">
        <Border Background="{StaticResource ContentBackgroundBrush}" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="{StaticResource TooltipBorderThickness}" CornerRadius="{StaticResource TooltipCornerRadius}" Padding="{StaticResource TooltipPadding}">
            <TextBlock Text="{Binding YData}" Foreground="{StaticResource ContentForegroundBrush}" FontSize="{StaticResource TooltipFontSize}" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="AreaTooltipTemplate">
        <Border Background="#FFFFFFFF" BorderBrush="#FF808080" BorderThickness="1" CornerRadius="3" Padding="4">
            <TextBlock Text="{Binding YData}" Foreground="#FF666666" FontSize="15" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="leftTooltipTemplate">
        <Grid>
            <Path x:Name="light_left" Data="F1M398.0605,350.6934L377.7585,350.6934L372.3835,350.6934L372.3215,350.6934C370.2155,350.6934,368.5085,352.5044,368.5085,354.7344C368.5085,356.9664,370.2155,358.7774,372.3215,358.7774L372.3835,358.7774L377.7585,358.7774L398.0605,358.7774z" Fill="#FF5F5F5F" Stretch="Fill"/>
            <TextBlock Text="{Binding}" Margin="5,5,5,5" Foreground="White"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="rightTooltipTemplate">
        <Grid>
            <!--<Path Data="M 0 0 L 70 0 L 70 21 L 6 21 L 6 6 Z"  Stretch="Fill" Fill="Gray"></Path>-->
            <Path x:Name="dark_right" Data="F1M400.5342,362.2568L420.8372,362.2568L426.2122,362.2568L426.2742,362.2568C428.3802,362.2568,430.0872,364.0658,430.0872,366.2978C430.0872,368.5298,428.3802,370.3388,426.2742,370.3388L426.2122,370.3388L420.8372,370.3388L400.5342,370.3388z" Fill="#FF5F5F5F" Stretch="Fill" />
            <TextBlock Text="{Binding}" Margin="5,5,5,5" Foreground="White"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="textBlockAnnotation">
        <TextBlock/>
    </DataTemplate>

    <DataTemplate x:Key="textBoxAnnotation">
        <TextBox AcceptsReturn="True" AcceptsTab="True"/>
    </DataTemplate>
	
    <!--ChartAxis-->
    
	<sys:Double x:Key="AxisLabelFontSize">16</sys:Double>
    <FontFamily x:Key="AxisLabelFontFamily">Segoe UI</FontFamily>
    <sys:Double x:Key="AxisLineThickness">0.5</sys:Double>
    
    <sys:Double x:Key="AxisGridLineThickness">0.5</sys:Double>
    
    <sys:Double x:Key="AxisTickLineThickness">0.5</sys:Double>

   

    <!--Grid line style-->
    <Style x:Key="gridLineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="StrokeThickness" Value="{StaticResource AxisGridLineThickness}"></Setter>
    </Style>

    <Style x:Key="lineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="StrokeThickness" Value="{StaticResource AxisLineThickness}"></Setter>
    </Style>
    <Style x:Key="ticklineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{StaticResource TickColor}"></Setter>
        <Setter Property="StrokeThickness" Value="{StaticResource AxisTickLineThickness}"></Setter>
    </Style>

    <Style x:Key="sfResizableBarDesktopStyle" TargetType="charts:ResizableScrollBar">
        <Setter Property="MinWidth" Value="17"/>
        <Setter Property="MinHeight" Value="17"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="charts:ResizableScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <!-- RepeatButton Templates -->
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Border  Margin="1" BorderThickness="0,1,0,1" BorderBrush="{StaticResource ContentBorderBrush}">
                                    <Grid x:Name="Root" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </Border>
                            </ControlTemplate>

                            <!-- Horizontal Inc/Dec Templates -->
                            <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <Rectangle x:Name="Background" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FFB7B7B7" StrokeThickness="1">
                                    </Rectangle>
                                    <Rectangle x:Name="Highlight" Opacity="0" RadiusX="8" RadiusY="8" IsHitTestVisible="false" Stroke="#FF686868" StrokeThickness="1"/>
                                    <Path Stretch="Uniform" Height="8" Width="4" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FFFFFFFF"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <Rectangle x:Name="Background" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FFB7B7B7" StrokeThickness="1">
                                    </Rectangle>
                                    <Path Stretch="Uniform" Height="8" Width="4" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="8" RadiusY="9" Fill="#FF686868"/>
                                </Grid>
                            </ControlTemplate>

                            <!-- Vertical Inc/Dec Templates -->
                            <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <Rectangle x:Name="Background" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FFB7B7B7" StrokeThickness="1"></Rectangle>
                                    <Rectangle x:Name="Highlight" Opacity="0" RadiusX="8" RadiusY="8" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
                                    <Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FF686868"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <Rectangle x:Name="Background" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FFB7B7B7" StrokeThickness="1">
                                    </Rectangle>
                                    <Rectangle x:Name="Highlight" Opacity="0" RadiusX="1" RadiusY="1" IsHitTestVisible="false" Stroke="#FF6DBDD1" StrokeThickness="1" Margin="1" />
                                    <Path Stretch="Uniform" Height="4" Width="8" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z ">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="ButtonColor" Color="#FF333333" />
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="DisabledElement" Opacity="0" RadiusX="8" RadiusY="8" Fill="#FF686868"/>
                                </Grid>
                            </ControlTemplate>

                            <!-- Thumb Templates -->
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="ThumbVisual"  Margin="1,1,1,2">
                                    <Rectangle x:Name="Background" Fill="{StaticResource BackgroundBrush}">
                                    </Rectangle>
                                    <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid Height="15" Width="12">
                                            <Path Data="M0,9.5190001 L7.9320002,9.5190001 7.9320002,10.313 0,10.313 z M0,4.7600002 L7.9320002,4.7600002 7.9320002,5.5539999 0,5.5539999 z M0,0 L7.9320002,0 7.9320002,0.7940001 0,0.7940001 z" Fill="#FF3F3F3F" Margin="0,0.795,0,0" Stretch="Fill"/>
                                            <Path Data="M0,9.5200004 L7.9320002,9.5200004 7.9320002,10.314 0,10.314 z M0,4.7610006 L7.9320002,4.7610006 7.9320002,5.5550005 0,5.5550005 z M0,0 L7.9320002,0 7.9320002,0.79500008 0,0.79500008 z" Fill="#FFAAAAAA" Margin="0,0,0,0.794" Stretch="Fill"/>
                                        </Grid>
                                    </ContentControl>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="ThumbVisual" Margin="1,1.5,1,2">
                                    <Rectangle x:Name="Background" Fill="{StaticResource BackgroundBrush}">
                                    </Rectangle>
                                    <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid Height="12" Width="15">
                                            <Path Data="M9.5190001,0 L10.313,0 10.313,7.9320002 9.5190001,7.9320002 z M4.7600002,0 L5.5539999,0 5.5539999,7.9320002 4.7600002,7.9320002 z M0,0 L0.7940001,0 0.7940001,7.9320002 0,7.9320002 z" Fill="#FFAAAAAA" Margin="0,0,0.795,0" Stretch="Fill"/>
                                            <Path Data="M9.5200005,0 L10.314,0 10.314,7.9320002 9.5200005,7.9320002 z M4.7610002,0 L5.5549998,0 5.5549998,7.9320002 4.7610002,7.9320002 z M0,0 L0.7940001,0 0.7940001,7.9320002 0,7.9320002 z" Fill="#FF3F3F3F" Margin="0.794,0,0,0" Stretch="Fill"/>
                                        </Grid>
                                    </ContentControl>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalNearThumbTemplate" TargetType="Thumb">
                                <Border CornerRadius="8,0,0,8" Margin="0,1.5,-1.5,2" Width="18" Background="{StaticResource BackgroundBrush}">
                                    <Grid Margin="4,0,0,0">
                                        <ContentControl>
                                            <Ellipse Width="6.5" Height="6.5" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="1"
                                                     Fill="{StaticResource ContentBackgroundBrush}">
                                            </Ellipse>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalFarThumbTemplate" TargetType="Thumb">
                                <Border CornerRadius="0,8,8,0" Margin="-1.5,1.5,0,2" Width="18" Background="{StaticResource BackgroundBrush}">
                                    <Grid Margin="0,0,4,0">
                                        <ContentControl>
                                            <Ellipse Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="1"
                                                Width="6.5" Height="6.5" Fill="{StaticResource ContentBackgroundBrush}">
                                            </Ellipse>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNearThumbTemplate" TargetType="Thumb">
                                <Border CornerRadius="0,0,8,8" Margin="0,-1,0,0" Height="18" Background="{StaticResource BackgroundBrush}">
                                    <Grid >
                                        <ContentControl>
                                            <Ellipse Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="1"
                                                Width="6.5" Height="6.5" Fill="{StaticResource ContentBackgroundBrush}">
                                            </Ellipse>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalFarThumbTemplate" TargetType="Thumb">
                                <Border CornerRadius="8,8,0,0" Margin="0,0,0,-1" Height="18" Background="{StaticResource BackgroundBrush}">
                                    <Grid>
                                        <ContentControl>
                                            <Ellipse Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="1"
                                                Width="6.5" Height="6.5" Fill="{StaticResource ContentBackgroundBrush}">
                                            </Ellipse>
                                        </ContentControl>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalRoot" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Track Layer -->
                            <Rectangle Grid.ColumnSpan="7" RadiusX="8" RadiusY="8" StrokeThickness="1" Stroke="#00000000" Fill="#FFB7B7B7"></Rectangle>
                            <Rectangle Grid.ColumnSpan="7" RadiusX="8" RadiusY="8" StrokeThickness="1" Stroke="#00000000" Fill="{TemplateBinding Background}"/>
                            <Rectangle Grid.ColumnSpan="7" RadiusX="8" RadiusY="8" StrokeThickness="1"  Fill="{StaticResource ContentBackgroundBrush}"></Rectangle>
                            <Rectangle x:Name="ScrollRect" Grid.ColumnSpan="7" RadiusX="8" RadiusY="8" Margin="1" Stroke="{StaticResource ContentBorderBrush}">
                            </Rectangle>

                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="HorizontalSmallDecrease" Visibility="{TemplateBinding Property=ScrollButtonVisibility}" Grid.Column="0" MinWidth="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalDecrementTemplate}" Margin="1" />
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Thumb x:Name="HorizontalThumbHand1" Cursor="ScrollWE" Background="{TemplateBinding Background}"  MinWidth="10"  Grid.Column="2" Template="{StaticResource HorizontalNearThumbTemplate}" />
                            <Thumb x:Name="HorizontalThumb" Cursor="Hand" Background="{TemplateBinding Background}"  MinWidth="0" Width="18" Grid.Column="3" Template="{StaticResource HorizontalThumbTemplate}" />
                            <Thumb x:Name="HorizontalThumbHand2" Cursor="ScrollWE" Background="{TemplateBinding Background}"  MinWidth="10" Grid.Column="4" Template="{StaticResource HorizontalFarThumbTemplate}" />
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="5" Interval="50" Template="{StaticResource RepeatButtonTemplate}" IsTabStop="False" />
                            <RepeatButton x:Name="HorizontalSmallIncrease" Visibility="{TemplateBinding Property=ScrollButtonVisibility}" Grid.Column="6" MinWidth="16" IsTabStop="False" Interval="50" Template="{StaticResource HorizontalIncrementTemplate}" Margin="1" />
                        </Grid>

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalRoot" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Track Layer -->
                            <Rectangle Grid.RowSpan="7" RadiusX="8" RadiusY="8" StrokeThickness="1" Stroke="#00000000" Fill="#FFB7B7B7"></Rectangle>
                            <Rectangle Grid.RowSpan="7" RadiusX="8" RadiusY="8" StrokeThickness="1" Fill="{StaticResource ContentBackgroundBrush}"></Rectangle>
                            <Rectangle Grid.RowSpan="7" RadiusX="8" RadiusY="8" Margin="1" Stroke="{StaticResource ContentBorderBrush}"></Rectangle>

                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="VerticalSmallDecrease" Visibility="{TemplateBinding Property=ScrollButtonVisibility}" Grid.Row="6" MinHeight="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalDecrementTemplate}" Margin="1" RenderTransformOrigin="0.5,0.5" >
                                <RepeatButton.RenderTransform>
                                    <RotateTransform Angle="180"></RotateTransform>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                            <RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="5" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Thumb x:Name="VerticalThumbHand1" MinHeight="18" Grid.Row="4" Cursor="ScrollNS" Template="{StaticResource VerticalNearThumbTemplate}" />
                            <Thumb x:Name="VerticalThumb" Cursor="Hand" MinHeight="0" Height="18" Grid.Row="3" Template="{StaticResource VerticalThumbTemplate}" />
                            <Thumb x:Name="VerticalThumbHand2" MinHeight="18" Grid.Row="2" Cursor="ScrollNS" Template="{StaticResource VerticalFarThumbTemplate}" />
                            <RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="1"  Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="0" Visibility="{TemplateBinding Property=ScrollButtonVisibility}" MinHeight="16" IsTabStop="False" Interval="50" Template="{StaticResource VerticalIncrementTemplate}" Margin="1"  RenderTransformOrigin="0.5,0.5">
                                <RepeatButton.RenderTransform>
                                    <RotateTransform Angle="180"></RotateTransform>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sfResizableBarStyle" TargetType="charts:SfChartResizableBar">
        <Setter Property="MinWidth" Value="3"/>
        <Setter Property="MinHeight" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="charts:SfChartResizableBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <!-- RepeatButton Templates -->
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>

                            <!-- Thumb Templates -->
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="10" Background="Transparent">
                                    <Rectangle Width="3" x:Name="Background" Fill="{StaticResource ContentBorderBrush}">
                                    </Rectangle>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Height="10" Background="Transparent">
                                    <Rectangle Height="3" x:Name="Background" Fill="{StaticResource ContentBorderBrush}">
                                    </Rectangle>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalNearThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="35">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition ></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Width="31" Height="31" Grid.Row="0" Margin="0,0,0,-2"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1">
                                    </Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="180"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalFarThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="35">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Width="31" Height="31" Grid.Row="0" Margin="0,0,0,-2"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1"></Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="180"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNearThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="62" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Grid.Row="0"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1" Margin="0,-28,0,0"></Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="270"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalFarThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="62">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Grid.Row="0"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1" Margin="0,-28,0,0"></Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="270"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                           <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TouchMode">
                                <VisualState x:Name="OnView">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnFocus">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnLostFocus">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnExit">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Horizontal Template -->
                        <Grid x:Name="HorizontalRoot" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Track Layer -->
                            <Line Grid.ColumnSpan="7"  Height="5" ></Line>
                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="HorizontalSmallDecrease" Visibility="{TemplateBinding ScrollButtonVisibility}" Grid.Column="0" MinWidth="16" IsTabStop="False" Interval="50" Margin="1" />
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Canvas Grid.Column="2" Canvas.ZIndex="1">
                                <ContentControl  x:Name="HorizontalNearHandContent" Visibility="Collapsed">
                                    <ContentPresenter></ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="HorizontalThumbHand1" Background="{TemplateBinding Background}"  MinWidth="10" Template="{StaticResource HorizontalNearThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5" >
                                    <Thumb.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform  X="18" Y="47"></TranslateTransform>
                                        </TransformGroup>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}"  MinWidth="0" Width="18" Grid.Column="3" Template="{StaticResource HorizontalThumbTemplate}" RenderTransformOrigin="0.5,0.5">
                                <Thumb.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform></TranslateTransform>
                                        <ScaleTransform></ScaleTransform>
                                    </TransformGroup>
                                </Thumb.RenderTransform>
                            </Thumb>
                            <Canvas Grid.Column="4" Canvas.ZIndex="1">
                                <ContentControl x:Name="HorizontalFarHandContent" Visibility="Collapsed">
                                    <ContentPresenter></ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="HorizontalThumbHand2"  Background="{TemplateBinding Background}"  MinWidth="10" Template="{StaticResource HorizontalFarThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Thumb.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform  X="17" Y="47"></TranslateTransform>
                                        </TransformGroup>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="5" Interval="50" Template="{StaticResource RepeatButtonTemplate}" IsTabStop="False" />
                            <RepeatButton x:Name="HorizontalSmallIncrease" Visibility="{TemplateBinding ScrollButtonVisibility}" Grid.Column="6" MinWidth="16" IsTabStop="False" Interval="50" Margin="1" />
                        </Grid>

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalRoot" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Track Layer -->
                            <Line Grid.ColumnSpan="7"  Width="5" ></Line>

                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="VerticalSmallDecrease" Visibility="Collapsed" Grid.Row="6" MinHeight="16" IsTabStop="False" Interval="50" Margin="1" />
                            <RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="5" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Canvas Grid.Row="4" Canvas.ZIndex="1">
                                <ContentControl x:Name="VerticalNearHandContent" Visibility="Collapsed">
                                    <ContentPresenter>
                                    </ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="VerticalThumbHand1" MinHeight="18" Template="{StaticResource VerticalNearThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Thumb.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform  X="-32" Y="30"></TranslateTransform>
                                        </TransformGroup>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <Thumb x:Name="VerticalThumb" MinHeight="0" Height="18" Grid.Row="3" Template="{StaticResource VerticalThumbTemplate}" RenderTransformOrigin="0.5,0.5">
                                <Thumb.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform></TranslateTransform>
                                        <ScaleTransform></ScaleTransform>
                                    </TransformGroup>
                                </Thumb.RenderTransform>
                            </Thumb>
                            <Canvas Grid.Row="2" Canvas.ZIndex="1">
                                <ContentControl x:Name="VerticalFarHandContent" Visibility="Collapsed">
                                    <ContentPresenter>
                                    </ContentPresenter>
                                </ContentControl>
                                <Thumb  x:Name="VerticalThumbHand2" MinHeight="18" Template="{StaticResource VerticalFarThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform  X="-32" Y="31"></TranslateTransform>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="1"  Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Opacity="0" />
                            <RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="0" Visibility="Collapsed" MinHeight="16" IsTabStop="False" Interval="50"  Margin="1" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
  </Style>
    
    <Style x:Key="sfResizableBarStyleOpposed" TargetType="charts:SfChartResizableBar">
        <Setter Property="MinWidth" Value="3"/>
        <Setter Property="MinHeight" Value="3"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="charts:SfChartResizableBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <!-- RepeatButton Templates -->
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>

                            <!-- Thumb Templates -->
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Height="10" Background="Transparent">
                                    <Rectangle Height="3" x:Name="Background" Fill="{StaticResource ContentBorderBrush}">
                                    </Rectangle>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalNearThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="35">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition ></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Width="31" Height="31" Grid.Row="0" Margin="0,0,0,-2"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1">
                                    </Path>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalFarThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="35">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Width="31" Height="31" Grid.Row="0" Margin="0,0,0,-2"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1"></Path>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Margin="-0.2,0,0,0" Width="10" Background="Transparent">
                                    <Rectangle Width="6" x:Name="Background" Fill="{StaticResource ContentBorderBrush}">
                                    </Rectangle>
                                </Grid>
                            </ControlTemplate>

                           <ControlTemplate x:Key="VerticalNearThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="62" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Grid.Row="0"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1" Margin="0,-28,0,0"></Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="90"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalFarThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root" Width="62" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Path Data="M23.5,12.5 C23.5,18.5751 18.5751,23.5 12.5,23.5 C6.42487,23.5 1.5,18.5751 1.5,12.5 C1.5,6.42487 6.42487,1.5 12.5,1.5 C18.5751,1.5 23.5,6.42487 23.5,12.5 z" Fill="{StaticResource ContentBorderBrush}" Stretch="Uniform" Stroke="{StaticResource ContentBorderBrush}" StrokeThickness="3" Grid.Row="0"/>
                                    <Path Data="M299.906,317.548 L314.401,340.841 L329.346,316.701 C329.346,316.701 316.448,324.029 299.906,317.548 z" Fill="{StaticResource ContentBorderBrush}" Height="6.714"  Stretch="Fill" StrokeThickness="6" UseLayoutRounding="False" Width="10.437" Grid.Row="1" Margin="0,-28,0,0"></Path>
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="90"></RotateTransform>
                                    </Grid.RenderTransform>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TouchMode">
                                <VisualState x:Name="OnView">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="4">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnFocus">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="4">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="3">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnLostFocus">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalThumbHand2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OnExit">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleX)" Storyboard.TargetName="VerticalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(ScaleTransform.ScaleY)" Storyboard.TargetName="HorizontalThumb">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="HorizontalRoot" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Track Layer -->
                            <Line Grid.ColumnSpan="7"  Height="5" ></Line>
                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="HorizontalSmallDecrease" Visibility="Collapsed" Grid.Column="0" MinWidth="16" IsTabStop="False" Interval="50" Margin="1" />
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" Width="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Canvas Grid.Column="2" Canvas.ZIndex="1">
                                <ContentControl x:Name="HorizontalNearHandContent" Visibility="Collapsed">
                                    <ContentPresenter></ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="HorizontalThumbHand1" Background="{TemplateBinding Background}"  MinWidth="10" Template="{StaticResource HorizontalNearThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5" >
                                    <Thumb.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform  X="-17" Y="-32"></TranslateTransform>
                                        </TransformGroup>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}"  MinWidth="0" Width="18" Grid.Column="3" Template="{StaticResource HorizontalThumbTemplate}" RenderTransformOrigin="0.5,0.5">
                                <Thumb.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform></TranslateTransform>
                                        <ScaleTransform></ScaleTransform>
                                    </TransformGroup>
                                </Thumb.RenderTransform>
                            </Thumb>
                            <Canvas Grid.Column="4" Canvas.ZIndex="1">
                                <ContentControl x:Name="HorizontalFarHandContent" Visibility="Collapsed">
                                    <ContentPresenter></ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="HorizontalThumbHand2"  Background="{TemplateBinding Background}"  MinWidth="10" Template="{StaticResource HorizontalFarThumbTemplate}" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Thumb.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform  X="-18" Y="-32"></TranslateTransform>
                                        </TransformGroup>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="5" Interval="50" Template="{StaticResource RepeatButtonTemplate}" IsTabStop="False"/>
                            <RepeatButton x:Name="HorizontalSmallIncrease" Visibility="Collapsed" Grid.Column="6" MinWidth="16" IsTabStop="False" Interval="50" Margin="1"/>
                        </Grid>

                        <!-- Vertical Template -->
                        <Grid x:Name="VerticalRoot" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Track Layer -->
                            <Line Grid.ColumnSpan="7"  Width="5" ></Line>

                            <!-- Repeat Buttons + Thumb -->
                            <RepeatButton x:Name="VerticalSmallDecrease" Visibility="Collapsed" Grid.Row="6" MinHeight="16" IsTabStop="False" Interval="50" Margin="1" />
                            <RepeatButton x:Name="VerticalLargeDecrease" Grid.Row="5" Height="0" Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" />
                            <Canvas Grid.Row="4" Canvas.ZIndex="1">
                                <ContentControl x:Name="VerticalNearHandContent" Visibility="Collapsed">
                                    <ContentPresenter>
                                    </ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="VerticalThumbHand1" MinHeight="10"  Template="{StaticResource VerticalNearThumbTemplate}" Opacity="0">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform X="-15" Y="-31"></TranslateTransform>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <Thumb x:Name="VerticalThumb" MinHeight="0" Height="18" Width="4" Grid.Row="3" Template="{StaticResource VerticalThumbTemplate}" RenderTransformOrigin="0.5,0.5">
                                <Thumb.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform></TranslateTransform>
                                        <ScaleTransform></ScaleTransform>
                                    </TransformGroup>
                                </Thumb.RenderTransform>
                            </Thumb>
                            <Canvas Grid.Row="2" Canvas.ZIndex="1">
                                <ContentControl x:Name="VerticalFarHandContent" Visibility="Collapsed">
                                    <ContentPresenter>
                                    </ContentPresenter>
                                </ContentControl>
                                <Thumb x:Name="VerticalThumbHand2" MinHeight="10" Template="{StaticResource VerticalFarThumbTemplate}" Opacity="0">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform X="-15" Y="-30"></TranslateTransform>
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Canvas>
                            <RepeatButton x:Name="VerticalLargeIncrease" Grid.Row="1"  Template="{StaticResource RepeatButtonTemplate}" Interval="50" IsTabStop="False" Opacity="0" />
                            <RepeatButton x:Name="VerticalSmallIncrease" Grid.Row="0" Visibility="Collapsed" MinHeight="16" IsTabStop="False" Interval="50"  Margin="1" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="charts:ChartAxisBase2D">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="MajorTickLineStyle" Value="{StaticResource ticklineStyle}"></Setter>
        <Setter Property="MinorTickLineStyle" Value="{StaticResource ticklineStyle}"></Setter>
        <Setter Property="MajorGridLineStyle" Value="{StaticResource gridLineStyle}"></Setter>
        <Setter Property="MinorGridLineStyle"  Value="{StaticResource gridLineStyle}"></Setter>
        <Setter Property="AxisLineStyle" Value="{StaticResource lineStyle}"></Setter>
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource axisTrackBallLabel}"></Setter>
        <Setter Property="CrosshairLabelTemplate" Value="{StaticResource axisCrosshairLabel}"></Setter>
        <Setter Property="LabelStyle">
            <Setter.Value>
                <charts:LabelStyle Foreground="{StaticResource ContentForegroundBrush}"
                                  FontFamily="{StaticResource AxisLabelFontFamily}"
                                  FontSize="{StaticResource AxisLabelFontSize}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderStyle">
            <Setter.Value>
                <charts:LabelStyle Foreground="{StaticResource ContentForegroundBrush}"
                                  FontFamily="{StaticResource AxisLabelFontFamily}"
                                  FontSize="{StaticResource AxisLabelFontSize}"/>
            </Setter.Value>
        </Setter>
            <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="charts:ChartAxisBase2D">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <charts:ChartCartesianAxisPanel x:Name="axisPanel" Background="Transparent">
                                <ContentControl x:Name="headerContent"  Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" RenderTransformOrigin="0.5,0.5"></ContentControl>
                                <Canvas x:Name="axisLabelsPanel"></Canvas>
                                <Canvas x:Name="axisElementPanel"></Canvas>
                                <charts:SfChartResizableBar EnableTouchMode="{TemplateBinding EnableTouchMode}" x:Name="sfchartResizableBar" ></charts:SfChartResizableBar>
                            </charts:ChartCartesianAxisPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableTouchMode" Value="false"></Condition>
                                <Condition Property="EnableScrollBar" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="sfchartResizableBar" Property="Style" Value="{StaticResource sfResizableBarDesktopStyle}"></Setter>
                            <Setter TargetName="sfchartResizableBar" Property="ScrollButtonVisibility" Value="Visible"></Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableTouchMode" Value="true"></Condition>
                                <Condition Property="EnableScrollBar" Value="true"></Condition>
                                <Condition Property="OpposedPosition" Value="false"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="sfchartResizableBar" Property="Style" Value="{StaticResource sfResizableBarStyle}"></Setter>
                            <Setter TargetName="sfchartResizableBar" Property="ScrollButtonVisibility" Value="Collapsed"></Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="EnableTouchMode" Value="true"></Condition>
                                <Condition Property="EnableScrollBar" Value="true"></Condition>
                                <Condition Property="OpposedPosition" Value="true"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="sfchartResizableBar" Property="Style" Value="{StaticResource sfResizableBarStyleOpposed}"></Setter>
                            <Setter TargetName="sfchartResizableBar" Property="ScrollButtonVisibility" Value="Collapsed"></Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  <Style TargetType="charts:NumericalAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  <Style TargetType="charts:CategoryAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  <Style TargetType="charts:LogarithmicAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  <Style TargetType="charts:TimeSpanAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  <Style TargetType="charts:DateTimeAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  <Style TargetType="charts:DateTimeCategoryAxis" BasedOn="{StaticResource {x:Type charts:ChartAxisBase2D}}"/>
  
    <Style x:Key="3Dgridlinestyle" TargetType="Line">
        <Setter Property="Stroke" Value="Gray"></Setter>
        <Setter Property="StrokeThickness" Value="1"></Setter>
    </Style>
    
    <Style TargetType="charts:ChartAxis">
        <Setter Property="MajorTickLineStyle" Value="{StaticResource lineStyle}"></Setter>
        <Setter Property="MinorTickLineStyle" Value="{StaticResource lineStyle}"></Setter>
        <Setter Property="MajorGridLineStyle" Value="{StaticResource 3Dgridlinestyle}"></Setter>
        <Setter Property="MinorGridLineStyle"  Value="{StaticResource 3Dgridlinestyle}"></Setter>
        <Setter Property="AxisLineStyle" Value="{StaticResource lineStyle}"></Setter>
    </Style>
	
	<!--ChartArea-->
	
	<Thickness x:Key="SfChartBorderThickness">0</Thickness>
    <Thickness x:Key="SfChartAreaBorderThickness">1</Thickness>
    
    <Style TargetType="charts:SfChart" >
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="AreaBackground" Value="{StaticResource ContentBackgroundBrush}"></Setter>
        <Setter Property="AreaBorderBrush" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="BorderThickness" Value="{StaticResource SfChartBorderThickness}"></Setter>
        <Setter Property="AreaBorderThickness"  Value="{StaticResource SfChartAreaBorderThickness}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"></Setter>
    </Style>
	
	<!--SfChart3D-->	
	
    <Thickness x:Key="SfChart3DBorderThickness">0</Thickness>  

    <Style TargetType="charts:SfChart3D">
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource SfChart3DBorderThickness}" />
        <Setter Property="BackWallBrush" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="LeftWallBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="RightWallBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="BottomWallBrush" Value="{StaticResource ContentBorderBrush}" />
    </Style>
	
	<!--ChartSeries-->
	
	<Style TargetType="charts:ChartSeriesBase">
    <Setter Property="Tag" Value="FromTheme" />
    <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:ErrorBarSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:AreaSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:BarSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:BubbleSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource BubbleTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:CandleSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource FinancialTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:ColumnSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastLineSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource LineTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastLineBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource LineTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastHiLoBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource FinancialTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastHiLoOpenCloseBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource FinancialTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastColumnBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
        <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
    </Style>

  <Style TargetType="charts:FastBarBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastCandleBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource FinancialTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastStepLineBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource LineTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:FastScatterBitmapSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:HiLoSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource RangeTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:HiLoOpenCloseSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource FinancialTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:HistogramSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:LineSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource LineTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:PieSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
    <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>

  </Style>

  <Style TargetType="charts:StepLineSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:StepAreaSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:DoughnutSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>

  </Style>

  <Style TargetType="charts:RangeAreaSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:RangeColumnSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource RangeTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:SplineSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource LineTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:SplineAreaSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:StackingAreaSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>


  <Style TargetType="charts:StackingBarSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:StackingColumnSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:ScatterSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>
  <Style TargetType="charts:FunnelSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:PyramidSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:PolarSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:RadarSeries">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:AccumulationDistributionIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:ExponentialAverageIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:AverageTrueRangeIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:SimpleAverageIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:TriangularAverageIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>
  <Style TargetType="charts:MACDTechnicalIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:RSITechnicalIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:StochasticTechnicalIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:BollingerBandIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>

  <Style TargetType="charts:MomentumTechnicalIndicator">
        <Setter Property="Tag" Value="FromTheme" />
        <Setter Property="TrackBallLabelTemplate" Value="{StaticResource trackBallLabel}"></Setter>
    <Setter Property="TooltipTemplate" Value="{StaticResource DefaultTooltipTemplate}"></Setter>
  </Style>
	
	<!--ChartToolBar-->
	
	<Thickness x:Key="ZoomingToolbarBorderThickness">1</Thickness>
    <Style TargetType="charts:ZoomingToolBar" >
        <Setter Property="Background" Value="{StaticResource  BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource  BorderBrush }"/>
        <Setter Property="BorderThickness" Value="{StaticResource  ZoomingToolbarBorderThickness }"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel  Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="charts:ZoomingToolBar">
                    <Border  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:ZoomIn">
        <Setter  Property="IconBackground" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="EnableColor" Value="{StaticResource HoverBorderBrush}"></Setter>
        <Setter Property="DisableColor" Value="{StaticResource ActiveBorderBrush}"></Setter>
        <Setter Property="Template" >
           
            <Setter.Value>
                <ControlTemplate TargetType="charts:ZoomIn">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="borderColor" Storyboard.TargetProperty="Color" To="{StaticResource ZoomingEnableBrush}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="25" Width="25" Margin="7" Background="Transparent">
                            <Path  Stretch="Fill" Data="M12.082992,4.9979889 L14.417008,4.9979889 14.417008,8.446015 17.893006,8.446015 17.893006,10.836015 14.417008,10.836015 14.417008,14.284009 12.082992,14.284009 12.082992,10.836015 8.6070065,10.836015 8.6070065,8.446015 12.082992,8.446015 z M13.2495,2.0957499 C11.316501,2.0957499 9.3835012,2.8315001 7.9120017,4.3029995 4.9690027,7.2459984 4.9690027,12.034997 7.9120017,14.977996 10.855001,17.920995 15.644,17.920995 18.586999,14.977996 21.529998,12.034997 21.529998,7.2459984 18.586999,4.3029995 17.115499,2.8315001 15.1825,2.0957499 13.2495,2.0957499 z M13.2495,0 C15.719499,0 18.189499,0.94000006 20.069998,2.8199997 23.829997,6.5809985 23.829997,12.699997 20.069998,16.460996 16.720358,19.809744 11.500323,20.176014 7.7415347,17.559804 L7.7115999,17.538404 2.3720012,22.877984 0,20.505992 5.3412554,15.163936 5.3301942,15.148463 C2.713984,11.389674 3.0802531,6.1696393 6.4290023,2.8199997 8.3095016,0.94000006 10.779501,0 13.2495,0 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="borderColor" Color="{Binding IconBackground}" />
                                </Path.Fill>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:ZoomOut">
        <Setter  Property="IconBackground" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="EnableColor" Value="{StaticResource HoverBorderBrush}"></Setter>
        <Setter Property="DisableColor" Value="{StaticResource ActiveBorderBrush}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="charts:ZoomOut">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="borderColor" Storyboard.TargetProperty="Color" To="{StaticResource ZoomingEnableBrush}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="25" Width="25" Margin="7" Background="Transparent">
                            <Path  Stretch="Fill" Data="M8.6070075,8.446015 L17.893007,8.446015 17.893007,10.836015 8.6070075,10.836015 z M13.2495,2.0957499 C11.316501,2.0957499 9.3835015,2.8315001 7.912002,4.3029995 4.969003,7.2459984 4.969003,12.034997 7.912002,14.977996 10.855001,17.920995 15.644,17.920995 18.586999,14.977996 21.529998,12.034997 21.529998,7.2459984 18.586999,4.3029995 17.115499,2.8315001 15.1825,2.0957499 13.2495,2.0957499 z M13.2495,0 C15.7195,0 18.189499,0.94000006 20.069999,2.8199997 23.829997,6.5809985 23.829997,12.699997 20.069999,16.460996 16.720359,19.809744 11.500324,20.176014 7.741535,17.559804 L7.7116001,17.538404 2.3720012,22.877984 0,20.505992 5.3412554,15.163936 5.3301942,15.148463 C2.713984,11.389674 3.0802531,6.1696393 6.4290023,2.8199997 8.3095019,0.94000006 10.779501,0 13.2495,0 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="borderColor" Color="{Binding IconBackground}" />
                                </Path.Fill>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:ZoomReset">
        <Setter  Property="IconBackground" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="EnableColor" Value="{StaticResource HoverBorderBrush}"></Setter>
        <Setter Property="DisableColor" Value="{StaticResource ActiveBorderBrush}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="charts:ZoomReset">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="borderColor" Storyboard.TargetProperty="Color" To="{StaticResource ZoomingEnableBrush}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="25" Width="25" Margin="7" Background="Transparent">
                            <Path  Stretch="Fill" Data="M11.637012,0 C14.068014,0 16.315016,0.7549994 18.181018,2.0309985 L19.915019,0 20.98002,5.8949957 14.989015,5.7729957 16.767016,3.6899973 C15.286015,2.732998 13.528013,2.1689984 11.637012,2.1689985 6.416007,2.1689984 2.1690025,6.4159954 2.1690025,11.636991 2.1690025,16.857987 6.416007,21.104984 11.637012,21.104984 14.391014,21.104984 16.866016,19.915985 18.598018,18.033987 L20.014019,19.702986 C17.897017,21.901983 14.930015,23.273983 11.637012,23.273983 5.2100058,23.273983 0,18.063987 0,11.636991 0,5.2099962 5.2100058,0 11.637012,0 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="borderColor" Color="{Binding IconBackground}" />
                                </Path.Fill>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:ZoomPan">
        <Setter  Property="IconBackground" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="EnableColor" Value="{StaticResource HoverBorderBrush}"></Setter>
        <Setter Property="DisableColor" Value="{StaticResource ActiveBorderBrush}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="charts:ZoomPan">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="borderColor" Storyboard.TargetProperty="Color" To="{StaticResource ZoomingEnableBrush}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="25" Width="25" Margin="7" Background="Transparent">
                            <Path  Stretch="Fill" Data="M7.5099956,19.276024 L18.490015,19.276024 13.000005,25.552023 z M11.700015,6.2760125 L14.30004,6.2760125 14.30004,11.476031 19.723989,11.476031 19.723989,7.2850133 25.999989,12.77502 19.723989,18.266026 19.723989,14.076025 14.30004,14.076025 14.30004,19.276013 11.700015,19.276013 11.700015,14.076025 6.2759992,14.076025 6.2759992,18.266014 0,12.776023 6.2759992,7.2850319 6.2759992,11.476031 11.700015,11.476031 z M13.000005,0 L18.490005,6.2760001 7.5100045,6.2760001 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="borderColor" Color="{Binding IconBackground}" />
                                </Path.Fill>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:SelectionZoom" >
        <Setter  Property="IconBackground" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="EnableColor" Value="{StaticResource HoverBorderBrush}"></Setter>
        <Setter Property="DisableColor" Value="{StaticResource ActiveBorderBrush}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="charts:SelectionZoom">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="borderColor" Storyboard.TargetProperty="Color" To="{StaticResource ZoomingEnableBrush}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Height="25" Width="25" Margin="7" Background="Transparent">
                            <Path  Stretch="Fill" Data="M9.6479974,9.6579931 C6.7350016,9.6579932 4.366012,12.028015 4.3660119,14.941005 4.366012,17.852988 6.7350016,20.222979 9.6479974,20.222979 12.561024,20.222979 14.931021,17.852988 14.931021,14.941005 14.931021,12.028015 12.561024,9.6579932 9.6479974,9.6579931 z M9.6479974,7.8010014 C13.585011,7.8010015 16.788016,11.003999 16.788016,14.941005 16.788016,18.87798 13.585011,22.080001 9.6479974,22.080001 8.2950053,22.080001 7.0286245,21.701638 5.9491844,21.045119 L5.7163126,20.8957 1.3130049,25.298986 0,23.985988 4.3108277,19.675182 4.1414006,19.479667 C3.1220914,18.245183 2.5090162,16.663432 2.509016,14.941005 2.5090162,11.003999 5.7120211,7.8010015 9.6479974,7.8010014 z M4.2320102,0 L23.23201,0 23.23201,21 19.175011,21 16.45501,21 16.23201,21 16.23201,19 17.74701,19 19.175011,19 21.23201,19 21.23201,2 6.2320106,2 6.2320106,5.7709999 6.2320106,6.6190001 6.2320106,8.0000001 4.2320102,8.0000001 4.2320102,5.7709999 z">
                                <Path.Fill>
                                    <SolidColorBrush x:Name="borderColor" Color="{Binding IconBackground}" />
                                </Path.Fill>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--SfChart-->
	
     <SolidColorBrush x:Key="LegendBackgroundBrush" Color="Transparent"/>
    <Thickness x:Key="LegendPadding" >5</Thickness>
    <CornerRadius x:Key="LegendCornerRadius" >0</CornerRadius>
   
    <sys:Double x:Key="LegendFontSize">12</sys:Double>
  
    <sys:Double x:Key="AnnotationStrokeThickness" >1</sys:Double>
    
    <charts:ChartTrackBallColorConverter x:Key="trackBallColorConverter"></charts:ChartTrackBallColorConverter>
    <Style TargetType="charts:ChartTrackBallControl">
        <Setter Property="Height" Value="10"></Setter>
        <Setter Property="Width" Value="10"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="charts:ChartTrackBallControl">
                    <Ellipse Fill="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource trackBallColorConverter}}"  Stroke="{TemplateBinding Stroke}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" StrokeThickness="{TemplateBinding StrokeThickness}"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="charts:ShapeAnnotation">
        <Setter Property="Stroke" Value="{StaticResource ContentBorderBrush}"></Setter>
        <Setter Property="StrokeThickness" Value="{StaticResource AnnotationStrokeThickness}"></Setter>
        <Setter Property="Fill" Value="{StaticResource ContentBorderBrush}" />
    </Style>
        <Style TargetType="charts:HorizontalLineAnnotation" BasedOn="{StaticResource {x:Type charts:ShapeAnnotation}}"/>
        <Style TargetType="charts:VerticalLineAnnotation" BasedOn="{StaticResource {x:Type charts:ShapeAnnotation}}"/>
         <Style TargetType="charts:EllipseAnnotation" BasedOn="{StaticResource {x:Type charts:ShapeAnnotation}}">
        <Setter Property="Opacity" Value="0.4" />
         </Style>
         <Style TargetType="charts:RectangleAnnotation" BasedOn="{StaticResource {x:Type charts:ShapeAnnotation}}">
         <Setter Property="Opacity" Value="0.4" />
         </Style>
        <Style TargetType="charts:LineAnnotation" BasedOn="{StaticResource {x:Type charts:ShapeAnnotation}}"/>
    <Style TargetType="charts:ChartLegend">
        <Setter Property="Padding" Value="{StaticResource LegendPadding}"/>
        <Setter Property="Background" Value="{StaticResource LegendBackgroundBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="CornerRadius" Value="{StaticResource LegendCornerRadius}"/>
        <Setter Property="FontSize" Value="{StaticResource LegendFontSize}" />
        <Setter Property="charts:ChartDockPanel.Dock" Value="Top"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
    </Style>
</ResourceDictionary>
