<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
      xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
      xmlns:Sync_Shared_Resources="clr-namespace:Syncfusion.Windows.Shared.Resources;assembly=Syncfusion.Shared.WPF"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:tools_controls_shared="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Shared.WPF">

  	
	<ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />


    <Geometry x:Key="ComboBoxAdv_DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <tools_controls_shared:TemplateToVisibilityConverter x:Key="dropDownTemplateConvertor"/>
    <FontFamily x:Key="ComboBoxAdvFontFamily">Segoe UI</FontFamily>
    <Sync_Shared_Resources:ResourceWrapper x:Key="ComboBoxResourceWrapperKey" />
    <BooleanToVisibilityConverter x:Key="VisiblityConverter" />

    <Style x:Key="BlueComboBoxReadonlyToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background"
                Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource  ContentForegroundBrush}" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border Name="Chrome1"  BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding  Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>

                            <Border Name="Chrome"  Background="{DynamicResource BackgroundBrush}" BorderThickness="1,0,0,0"
                                        BorderBrush="{StaticResource BorderBrush}"  Grid.Column="1" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">

                                <Path Name="Arrow"
                                  Fill="{StaticResource  GlyphBrush}"
                                  Data="{StaticResource ComboBoxAdv_DownArrowGeometry}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0 Z" TargetName="Arrow" />
                            <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Width" Value="35" TargetName="Chrome" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                                <Condition Property="IsMouseOver" SourceName="Chrome1" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome1" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="Chrome" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>

                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" SourceName="Chrome" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome"
                                    Property="Background"
                                    Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter TargetName="Arrow"
                                    Property="Fill"
                                    Value="{StaticResource ActiveGlyphBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxAdvFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               StrokeThickness="1"
                               Stroke="{StaticResource ActiveBorderBrush}"
                               StrokeDashArray="1 2"
                               SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroComboBoxAdvStyle"
           TargetType="{x:Type tools_controls_shared:ComboBoxAdv}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxAdvFocusVisual}" />
        <Setter Property="BorderBrush"
                        Value="{StaticResource  ContentBorderBrush}" />
        <Setter Property="Background"
                        Value="{StaticResource  ContentBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource   ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ComboBoxAdvFontFamily}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="4,4" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls_shared:ComboBoxAdv}">
                    <Grid>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">

                            <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ContentBorderBrush}" BorderThickness="1" Padding="1"  Background="{StaticResource  ContentBackgroundBrush}">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}">
                                    <Grid x:Name="Item_Presenter" Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter='Item_Presenter'}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                            Grid.Row="1"                                                        
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <tools_controls_shared:ComboBoxItemAdv x:Name="PART_SelectAll" 
                                                               Grid.Row="0"
                                                               Margin="0.2,0,0,0.5"                                                               
                                                               Background="{Binding Background, ElementName=DropDownBorder}"
                                                               Visibility="{TemplateBinding AllowSelectAll, Converter={StaticResource VisiblityConverter}}"
                                                               Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=SelectAll}"/>
                                            </Grid>
                                        </ScrollViewer>
                                        <StackPanel x:Name="stackPanel" Grid.Row="1"
                                            Orientation="Horizontal"
                                            Margin="5"
                                            Visibility="{TemplateBinding EnableOKCancel, Converter={StaticResource VisiblityConverter}}"
                                            HorizontalAlignment="Right">
                                            <Button x:Name="PART_OKButton"
                                            Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=OKText}"
                                            Margin="0,0,10,0"
                                            Width="70"
                                            Height="20"/>
                                            <Button x:Name="PART_CancelButton"
                                            Content="{Binding Source={StaticResource ComboBoxResourceWrapperKey}, Path=CancelText}"
                                            Width="70"
                                            Height="20"/>
                                        </StackPanel>
                                    </Grid>
                                    <ContentControl x:Name="Content_Control" Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter='Content_Control'}" ContentTemplate="{TemplateBinding DropDownContentTemplate}" ></ContentControl>
                                </Grid>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="PART_ToggleButton" Grid.ColumnSpan ="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource BlueComboBoxReadonlyToggleButton}" />
                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding SelectionBoxTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ItemsControl x:Name="PART_SelectedItems" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <TextBlock Text="{TemplateBinding DefaultText}" x:Name="PART_DefaultText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <TextBox  x:Name="PART_Editable" Visibility="Collapsed"  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"  IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </TextBox>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_Editable" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_DefaultText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="Padding" Value="16,10,23,10" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="AllowsTransparency" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" Value="0,0,0,0" TargetName="DropDownBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="AllowMultiSelect" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource MetroComboBoxAdvStyle}" TargetType="{x:Type tools_controls_shared:ComboBoxAdv}" />

    <Style x:Key="MetroComboBoxItemAdvStyle"
           TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxItemFocusVisual}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource   ContentBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource   ContentForegroundBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource ComboBoxAdvFontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}">
                    <Border x:Name="Bd" CornerRadius="0"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <Grid Margin="1" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox Margin="2" Visibility="{Binding Path=AllowMultiSelect, Converter={StaticResource VisiblityConverter}, RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" IsHitTestVisible="False"  x:Name="PART_CheckBox" IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                            <ContentPresenter Name="content" Margin="2,1,2,2" Grid.Column="1"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Padding" Value="12,9,10,9" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0" />
                            <Setter Property="Margin" TargetName="Bd" Value="0" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=AllowMultiSelect,RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" Value="True" />
                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Padding" Value="12,6,10,6" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter Property="CornerRadius" TargetName="Bd" Value="0" />
                            <Setter Property="Margin" TargetName="Bd" Value="0" />
                            <Setter Property="BorderThickness" Value="0,0,0,1" />
                            <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsPressed,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  HoverBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  HoverBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource HoverForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true" />
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource  ActiveBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource  ActiveBackgroundBrush}" />
                            <Setter Property="TextBlock.Foreground" TargetName="content" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding Path=IsHighlighted,RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding Path=AllowMultiSelect,RelativeSource={RelativeSource AncestorType={x:Type tools_controls_shared:ComboBoxAdv}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ActiveBorderBrush}" />
                            <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource MetroComboBoxItemAdvStyle}" TargetType="{x:Type tools_controls_shared:ComboBoxItemAdv}" />
</ResourceDictionary>
