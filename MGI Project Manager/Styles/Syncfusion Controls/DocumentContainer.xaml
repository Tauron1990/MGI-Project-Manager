<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:tools_controls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
	xmlns:shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF" xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
	xmlns:Microsoft_Windows_Luna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
	xmlns:tools_resources="clr-namespace:Syncfusion.Windows.Tools.Controls.Resources;assembly=Syncfusion.Tools.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:Microsoft_Windows_Aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
	>

    <ResourceDictionary.MergedDictionaries>

</ResourceDictionary.MergedDictionaries>

<LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="GlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FFEEEEF2" Offset="0" /><GradientStop Color="#FFEEEEF2" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="HeaderForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HeaderGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="HoverBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF7FBCE5" Offset="0" /><GradientStop Color="#FF7FBCE5" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#FF7FBCE5" />
	<SolidColorBrush x:Key="HoverForegroundBrush" Color="#FF404040" />
	<SolidColorBrush x:Key="HoverGlyphBrush" Color="#FF404040" />
<LinearGradientBrush x:Key="ActiveBackgroundBrush" StartPoint="0,0" EndPoint="1,1" ><GradientStop Color="#FF007ACC" Offset="0" /><GradientStop Color="#FF007ACC" Offset="1" /></LinearGradientBrush>
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="#FF007ACC" />
	<SolidColorBrush x:Key="ActiveForegroundBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ActiveGlyphBrush" Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ContentBackgroundBrush" Color="#FFF5F5F5" />
	<SolidColorBrush x:Key="ContentBorderBrush" Color="#FFCCCEDB" />
	<SolidColorBrush x:Key="ContentForegroundBrush" Color="#FF1E1E1E" />
	<SolidColorBrush x:Key="ContentSelectionBrush" Color="#FFA5A5A5" />
	<SolidColorBrush x:Key="SelectionInActiveBrush" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ErrorBrush" Color="#FFFF0000" />
	<SolidColorBrush x:Key="ActiveLightBackground" Color="#FF99C9EA" />
	<SolidColorBrush x:Key="ActiveDarkBackground" Color="#FF003D66" />
	<SolidColorBrush x:Key="ContentAlternativeBackground" Color="#FFDCDCDC" />
	<SolidColorBrush x:Key="TickColor" Color="#FFBCBCBC" />
	<SolidColorBrush x:Key="RangeColor1" Color="#FF61A301" />	
	<SolidColorBrush x:Key="RangeColor2" Color="#FFF2E606" />	
	<SolidColorBrush x:Key="RangeColor3" Color="#FFFF0000" />
	<SolidColorBrush x:Key="LightBackgroundBrush" Color="#FFDDDDE5" />



    <!--TabItemExt-->

    <Geometry x:Key="TabItemCheckmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <tools_resources:ResourceWrapper x:Key="TabItemResourceWrapperKey"/>

    <Geometry x:Key="TabItemRightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Thickness x:Key="Aero.TabPanelPadding" Left="0" Top="0" Right="0" Bottom="0" />
    <Thickness x:Key="Aero.TabPanelMargin" Left="2" Top="2" Right="4" Bottom="0" />
    <Thickness x:Key="Aero.ContentPanelBorderThickness" Left="0" Top="0" Right="0" Bottom="0" />
    <CornerRadius x:Key="Aero.ContentPanelBorderCornerRadius" TopLeft="2" TopRight="2" BottomRight="2" BottomLeft="2" />
    <Thickness x:Key="Aero.ContentPanelInnerBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="Aero.ContentPanelInnerBorderMargin" Left="3" Top="3" Right="3" Bottom="3" />
    <Thickness x:Key="Aero.ContentPanelOuterBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="Aero.TabItemBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <!--<SolidColorBrush x:Key="Aero.ContentPanelBackgroundBrush" Color="#D2E6FA"/>-->
    <tools_controls:ImageAlignmentToDockConverter x:Key="ImageAlignmentToDockConverter"/>

    <DataTemplate x:Key="HeaderDataTemplate1" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBlock Focusable="False" Text="{Binding FallbackValue=''}" TextTrimming="CharacterEllipsis" 
				   IsHitTestVisible="False" Padding="1,0,0,1" />
    </DataTemplate>

    <DataTemplate x:Key="EditableDataTemplate1" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBox x:Name="EditableHeader" Focusable="True" Style="{Binding Path=EditHeaderItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}}}"
				 Text="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}}, Mode=TwoWay}"  
				 IsReadOnly="False" Padding="4,1,4,1" />
    </DataTemplate>


    <ControlTemplate TargetType="{x:Type TabItem}" 
                                     x:Key="newtabitem">
        <Border BorderThickness="0" 
                                Margin="2,0,0,0"  Name="Bd"
            BorderBrush="{StaticResource ActiveBorderBrush}" 
                                Background="{DynamicResource BackgroundBrush}"
                                CornerRadius="5,5,0,0">
        </Border>
    </ControlTemplate>


    <tools_controls:CloseButtonTypeToVisibilityConverter x:Key="CloseButtonTypeToVisibilityConverter"/>
    <shared:BooleanToVisibilityConverterEx x:Key="BooleanToVisibilityConverterEx"/>


    <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="brdBack" BorderThickness="0"
                BorderBrush="{StaticResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Stroke="{StaticResource GlyphBrush}" Fill="{StaticResource GlyphBrush}"
				StrokeThickness="0.5"
                Data="M1,1 L7,7 M1,7 L7,1"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="Height" Value="13" TargetName="pathButton"/>
                <Setter Property="Width" Value="13" TargetName="pathButton"/>
                <Setter Property="Data" Value="M1,1 L12,12 M1,12 L12,1" TargetName="pathButton"/>
                <Setter Property="StrokeThickness" Value="2.5" TargetName="pathButton"/>



            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource ActiveGlyphBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <ControlTemplate x:Key="MenuButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="brdBack" BorderThickness="0"
                BorderBrush="{StaticResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Fill="{StaticResource GlyphBrush}"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8">
                <Path.Data>
                    <GeometryGroup>
                        <PathGeometry>
                            <PathFigure StartPoint="0,1" IsFilled="True" IsClosed="True">
                                <LineSegment Point="8,1"/>
                                <LineSegment Point="8,3"/>
                                <LineSegment Point="0,3"/>
                            </PathFigure>
                        </PathGeometry>
                        <PathGeometry>
                            <PathFigure StartPoint="0,4" IsFilled="True" IsClosed="True">
                                <LineSegment Point="4,8"/>
                                <LineSegment Point="8,4"/>
                            </PathFigure>
                        </PathGeometry>
                    </GeometryGroup>
                </Path.Data>
            </Path>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="Height" Value="13" TargetName="pathButton"/>
                <Setter Property="Width" Value="13" TargetName="pathButton"/>

                <Setter TargetName="pathButton" Property="Data">
                    <Setter.Value>
                        <GeometryGroup>
                            <PathGeometry>
                                <PathFigure StartPoint="0,1" IsFilled="True" IsClosed="True">
                                    <LineSegment Point="12,1"/>
                                    <LineSegment Point="12,4"/>
                                    <LineSegment Point="0,4"/>
                                </PathFigure>
                            </PathGeometry>
                            <PathGeometry>
                                <PathFigure StartPoint="0,6" IsFilled="True" IsClosed="True">
                                    <LineSegment Point="6,12"/>
                                    <LineSegment Point="12,6"/>
                                </PathFigure>
                            </PathGeometry>
                        </GeometryGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions >
                    <Condition Binding="{Binding Path=IsAllItemsVisible,RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                </MultiDataTrigger.Conditions>

                <Setter TargetName="pathButton" Property="Data" Value="M0,4 L4,8 L8,4 z"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions >
                    <Condition Binding="{Binding Path=IsAllItemsVisible,RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="14" TargetName="pathButton"/>
                <Setter TargetName="pathButton" Property="Data" Value="M0,4 L8,12 L14,4 z"/>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource ActiveGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource ActiveGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>

                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{StaticResource HoverGlyphBrush}" />
                <!--<Setter TargetName="pathButton" Property="Stroke" Value="{StaticResource HoverGlyphBrush}" />-->
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabScrollingButton" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <shared:Border3D x:Name="PART_Border" VerticalAlignment="Center" HorizontalAlignment="Center"
				Margin="1,0,0,0"
                Padding="1"
                Width="15"
                Height="15"
                Background="{StaticResource BackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource BorderBrush}"
				Opacity="{TemplateBinding Opacity}"
				IsEnabled="{TemplateBinding IsEnabled}"
				SnapsToDevicePixels="True"
				CornerRadius="0">
                        <Canvas Width="8" Height="7" x:Name="canvas" VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <Path Data="M0,0L4,3.5 0,7" HorizontalAlignment="Center" Stroke="{StaticResource GlyphBrush}" Fill="{StaticResource GlyphBrush}" Name="PART_Path1" VerticalAlignment="Center"/>
                            <Path Data="M4,0L8,3.5 4,7" HorizontalAlignment="Center" Stroke="{StaticResource GlyphBrush}" Fill="{StaticResource GlyphBrush}" Name="PART_Path2" VerticalAlignment="Center"/>
                            <Path Data="M5,0L5,7" HorizontalAlignment="Center" Stroke="{StaticResource GlyphBrush}" Fill="{StaticResource GlyphBrush}" Name="PART_Path3" VerticalAlignment="Center" Visibility="Collapsed"/>
                        </Canvas>
                    </shared:Border3D>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" TargetName="PART_Path1" Value="M0,0 L8,6 0,12"/>
                            <Setter Property="Height" TargetName="PART_Border" Value="24"/>
                            <Setter Property="Width" TargetName="PART_Border" Value="24"/>
                            <Setter Property="Data" TargetName="PART_Path2" Value="M4,0L12,6 4,12"/>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,0,4"/>
                        </Trigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="LastTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="LastTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M9,0L9,12"/>

                            <Setter TargetName="PART_Path3" Property="StrokeThickness" Value="2"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="FirstTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M8,0L4,3.5 8,7"/>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M2,0L2,7"/>
                            <Setter TargetName="PART_Path1" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="FirstTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M12,0L4,5.5 12,11"/>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M2,0L2,12"/>
                            <Setter TargetName="PART_Path3" Property="StrokeThickness" Value="2"/>
                            <Setter TargetName="PART_Path1" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="PrevPage"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="PART_Path1" Property="Data" Value="M4,0L0,3.5 4,7"/>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M8,0L4,3.5 8,7"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="PrevPage"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>

                            <Setter TargetName="PART_Path1" Property="Data" Value="M8,0L0,6 8,11"/>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M12,0L4,6 12,11"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="NextPage"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="PrevTab"/>
                            </MultiTrigger.Conditions>


                            <Setter TargetName="PART_Path1" Property="Data" Value="M4,0L0,4 4,8"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="PrevTab"/>
                            </MultiTrigger.Conditions>


                            <Setter TargetName="PART_Path1" Property="Data" Value="M8,0L0,6 8,12"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="NextTab">
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="IsInverted" Value="True"/>
                            <Setter Property="Content" Value="1,1,-1,-1"/>
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{StaticResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{StaticResource HoverGlyphBrush}"/>
                        </MultiTrigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="PART_Border" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{StaticResource HoverBackgroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabPanelAdvStyle" TargetType="{x:Type tools_controls:TabPanelAdv}">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="2,2,4,1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TabPanelAdv}">
                    <Border Name="Bord" Background="{Binding  TabPanelBackground,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
							CornerRadius="{TemplateBinding CornerRadius}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Top">

                        <DockPanel LastChildFill="True">
                            <Border Name="BottomBorder" Height="0" DockPanel.Dock="Bottom" Background="{DynamicResource BackgroundBrush}" />


                            <ContentPresenter x:Name="PART_CustomItems"  AllowDrop="False" ContentSource="TabPanelItem"
                                              MaxHeight="{Binding Path=ActualHeight, ElementName=PART_TabItems}" Margin="2,0,0,0" DockPanel.Dock="Right" 
                                              Content="{Binding Path=TabPanelItem, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=''}">

                            </ContentPresenter>
                            <tools_controls:NewTabLayout>
                                <ContentPresenter x:Name="PART_ToolBarTray" Content="{Binding Path=ToolBarTray, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=''}" />
                                <tools_controls:TabItemExt BorderThickness="80" Name="PART_NewTab" DockPanel.Dock="Top" IsNewTab="True" />
                            </tools_controls:NewTabLayout>
                            <ToggleButton Name="PART_CloseButton" Width="14" Height="14" 
                                  DockPanel.Dock="Right"
                                  Focusable="False" 
                                  AllowDrop="False"
                                  Visibility="{Binding Path=CloseButtonType, Converter={StaticResource CloseButtonTypeToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Collapsed}"
							      Template="{StaticResource CloseButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.CloseCurrentTabItem"  >
                                <ToggleButton.ToolTip>
                                    <ToolTip Name="tooltip" >
                                        <TextBlock Name="tooltipText"  Text="{Binding Source={StaticResource TabItemResourceWrapperKey}, Path=CloseButtonTooltipText}"/>
                                    </ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_MenuButton" Width="14" Height="14" 
                                  DockPanel.Dock="Right"
                                  AllowDrop="False"
                                  Focusable="False"
                                  Visibility="{Binding Path=ShowTabListContextMenu, Converter={StaticResource BooleanToVisibilityConverterEx}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Collapsed}"
							      Template="{StaticResource MenuButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.OpenContextMenu"
                                  >
                                <ToggleButton.ToolTip>
                                    <ToolTip Name="PART_ContextMenuButtonTooltip" >
                                        <TextBlock Name="PART_ContextMenuButtonTooltipText"   Text="{Binding Source={StaticResource TabItemResourceWrapperKey}, Path=ContextMenuButtonTooltipText}" />
                                    </ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <Button Name="PART_LastTab" Focusable="False" DockPanel.Dock="Right" Tag="LastTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_NextTab" Focusable="False" DockPanel.Dock="Right" Tag="NextTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_PrevTab" Focusable="False" DockPanel.Dock="Right" Tag="PrevTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_NextPage" Focusable="False" DockPanel.Dock="Right" Tag="NextPage" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_PrevPage" Focusable="False" DockPanel.Dock="Right" Tag="PrevPage" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_FirstTab" Focusable="False" DockPanel.Dock="Right" Tag="FirstTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>

                            <ContentPresenter x:Name="PART_TabItems" ContentSource="TabItems" 
                                              DockPanel.Dock="Right" Margin="0,0,0,-1"
                                              Content="{TemplateBinding Content}"/>


                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Height" TargetName="PART_MenuButton" Value="24"/>
                            <Setter Property="Width" TargetName="PART_MenuButton" Value="24"/>
                            <Setter Property="Height" TargetName="PART_CloseButton" Value="24"/>
                            <Setter Property="Width" TargetName="PART_CloseButton" Value="24"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}},FallbackValue=Top}" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="PART_CustomItems">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_CloseButton">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_MenuButton">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsAllTabsClosed,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_MenuButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="BottomBorder" Property="Height" Value="0"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Items.Count,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=0}" Value="1" />
                                <Condition Binding="{Binding Path=HideHeaderOnSingleChild,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}}}" Value="True" />
                                <Condition Binding="{Binding Path=ShowTabListContextMenu,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}}}" Value="False" />
                                <Condition Binding="{Binding ElementName=PART_CloseButton, Path=Visibility}"  Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bord" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2008DragMarkerStyle" TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type shared:TemplatedAdornerInternalControl}">
                    <DockPanel x:Name="PART_DockPanel" Height="{Binding Path=MinHeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" LastChildFill="True">
                        <Canvas x:Name="PART_Top" HorizontalAlignment="Left" VerticalAlignment="Top" Height="2" Width="5" DockPanel.Dock="Top">
                            <Path Data="M0,0L2.5,3 5,0L0,0L2.5,3" Fill="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Stroke="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                        </Canvas>
                        <Border x:Name="PART_Center" MinHeight="{Binding Path=ActualHeight, ElementName=PART_DockPanel}" VerticalAlignment="Top" Margin="2,0,-3,0" HorizontalAlignment="Center" BorderThickness="1,0,0,0" BorderBrush="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}">
                        </Border>
                        <Canvas x:Name="PART_Bottom" Height="2" Width="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
                            <Path Data="M0,3L2.5,0 5,3L0,3L2.5,0" Fill="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Stroke="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                        </Canvas>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <!--Top-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Top"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="6" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform Y="-3" X="8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom" >
                                <Setter.Value>
                                    <TranslateTransform X="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Top"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1.5" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Top-->

                        <!--Bottom-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="8.5" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform Y="-2" X="10.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="7.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Bottom-->

                        <!--Left-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-2" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="9" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="11" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="8"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Left-->

                        <!--Right-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="6.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="8.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="5.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Right-->
                        <!--RotateTextWhenVertical = true-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=false}" Value="True"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_DockPanel" Property="Height" Value="{Binding Path=MinWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-6" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-7" Y="3"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=false}" Value="True"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_DockPanel" Property="Height" Value="{Binding Path=MinWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="3"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Right-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <sys:Double x:Key="NanValue">
        NaN
    </sys:Double>
    <Style TargetType="MenuItem" x:Key="CustomMenuItem">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Background"
                Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                     TargetType="MenuItem">
                    <Grid SnapsToDevicePixels="true" x:Name="MainGrid">
                        <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
                        <Rectangle Height="0" Fill="{DynamicResource BackgroundBrush}"  x:Name="BottomBorder" VerticalAlignment="Bottom" Margin="-2,0,-2,0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="37"/>
                                <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="GlyphPanel"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource BackgroundBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource TabItemCheckmark}"/>
                            </Border>
                            <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Fill" TargetName ="BottomBorder" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="Margin" TargetName="Icon" Value="10,0,0,0"/>
                        </Trigger>
                        <Trigger Property="Icon"
                     Value="{x:Null}">
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked"
                     Value="true">
                            <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                            <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                     Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted"
                     Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{StaticResource HoverBackgroundBrush}"/>

                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                     Value="true"/>
                                <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainGrid"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                        Value="{StaticResource ActiveForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                     Value="False">
                            <Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrush}"/>
                            <Setter Property="Opacity"
                        Value="0.5"/>
                            <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="{DynamicResource BackgroundBrush}"/>
                            <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{StaticResource GlyphBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource TabItemCheckmark}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource ActiveBackgroundBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{StaticResource ActiveBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="{DynamicResource BackgroundBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource BackgroundBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource TabItemCheckmark}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource TabItemRightArrow}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="#FF007ACC">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="#FF007ACC"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{StaticResource HoverBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{StaticResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="{DynamicResource BackgroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="{StaticResource BorderBrush}"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"  Value="16,10.5,16,10.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--Aero.Normalcolor-->



    <!--End Aero.Normalcolor-->

    <Style x:Key="TabItemContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="TextElement.FontStyle" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="TextElement.FontWeight" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource ResourceKey={x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomMenuItem}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"></Setter>
        <Setter Property="Border.BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ContextMenuService.HasDropShadow" Value="True"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Microsoft_Windows_Luna:SystemDropShadowChrome Name="Shdw" SnapsToDevicePixels="True" Color="#FF007ACC">
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}">
                            <Grid x:Name="PART_Grid">
                                <Rectangle x:Name="IconBar" Margin="1,1,1,1" Width="25" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar1" Margin="26,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar2"  Margin="27,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}" />
                                <ScrollViewer x:Name="PART_ScrollViewer" Margin="1,0,1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly=FrameworkElement}}" CanContentScroll="True" Grid.ColumnSpan="2">
                                    <StackPanel>
                                        <MenuItem x:Name="PART_CloseTab"  IsEnabled="{Binding Path=EnableCloseMenuItem,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=true}" Visibility="{Binding Path=CloseMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Visible}"  Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  Command="tools_controls:TabControlCommands.CloseTabItem" CommandTarget="{TemplateBinding PlacementTarget}" Margin="2" Header="{Binding Path=MenuItemCloseTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Close}"/>
                                        <MenuItem x:Name="PART_CloseOtherTab"  Visibility="{Binding Path=CloseAllButThisMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Collapsed}" Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" Command="tools_controls:TabControlCommands.CloseTabs" CommandTarget="{TemplateBinding PlacementTarget}" Margin="2" Header="{Binding Path=MenuItemCloseOtherTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=CloseAllButThis}"/>
                                        <MenuItem x:Name="PART_CloseAllTabs"  Visibility="{Binding Path=CloseAllMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Collapsed}" Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" Command="tools_controls:TabControlCommands.CloseTabs" CommandTarget="{TemplateBinding PlacementTarget}" CommandParameter="All" Margin="2" Header="{Binding Path=MenuItemCloseAllTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=CloseAll}"/>

                                        <ItemsPresenter  Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Microsoft_Windows_Luna:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="shared:SkinStorage.EnableTouch" Value="true">

                            <Setter Property="Margin" Value="0" TargetName="PART_CloseTab"/>
                            <Setter Property="Margin" Value="0" TargetName="PART_CloseOtherTab"/>
                            <Setter Property="Margin" Value="0" TargetName="PART_CloseAllTabs"/>
                            <Setter Property="Fill" TargetName ="IconBar" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Control.Padding" Value="0"/>
                            <Setter Property="Width" TargetName="IconBar" Value="32" />
                            <Setter Property="Visibility" TargetName="leftBar1" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="leftBar2" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="PART_Grid" Value="0,0,0,-1"/>
                            <Setter Property="Margin" TargetName="PART_ScrollViewer" Value="0"/>
                        </Trigger>
                        <Trigger Property="ContextMenuService.HasDropShadow" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Microsoft_Windows_Luna:SystemDropShadowChrome.Color" TargetName="Shdw" Value="#FF007ACC"/>
                        </Trigger>
                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContextMenu}" x:Key="CustomContextMenu">
        <Setter Property="Panel.Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="TextElement.FontStyle" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="TextElement.FontWeight" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource ResourceKey={x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomMenuItem}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Border.BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ContextMenuService.HasDropShadow" Value="True"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Microsoft_Windows_Luna:SystemDropShadowChrome Name="Shdw" SnapsToDevicePixels="True" Color="#FF007ACC">
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}">
                            <Grid x:Name="PART_Grid">
                                <Rectangle x:Name="IconBar" Margin="1,1,1,1" Width="25" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar1" Margin="26,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar2" Margin="27,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}" />
                                <ScrollViewer x:Name="PART_ScrollViewer" Margin="1,0,1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly=FrameworkElement}}" CanContentScroll="True" Grid.ColumnSpan="2">
                                    <ItemsPresenter Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Microsoft_Windows_Luna:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Margin" TargetName="PART_ScrollViewer" Value="0"/>

                            <Setter Property="Fill" TargetName ="IconBar" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Control.Padding" Value="0"/>
                            <Setter Property="Width" TargetName="IconBar" Value="32" />
                            <Setter Property="Visibility" TargetName="leftBar1" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="leftBar2" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="PART_Grid" Value="0,0,0,-1"/>

                        </Trigger>
                        <Trigger Property="ContextMenuService.HasDropShadow" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Microsoft_Windows_Luna:SystemDropShadowChrome.Color" TargetName="Shdw" Value="#FF007ACC"/>
                        </Trigger>
                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type tools_controls:TabItemExt}" x:Key="AeroTabItemExtStyle">
        <Setter Property="TextElement.Foreground" 
				Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="TabItemContextMenuStyle"   Value="{StaticResource TabItemContextMenu}"/>
        <Setter Property="TabItemContextMenuItemStyle"  Value="{StaticResource CustomMenuItem}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="IFrameworkInputElement">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <x:Null/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="FlowDirection" Value="LeftToRight"/>-->
        <Setter Property="MinHeight" Value="18"/>
        <!--<Setter Property="Margin" Value="-8,0,0,0}"/>-->
        <Setter Property="HeaderMargin" Value="6,1,6,1"/>
        <Setter Property="IconMargin" Value="1,0,0,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TabItemExt}">
                    <Border x:Name="RootBorder" BorderBrush="Transparent" Background="{TemplateBinding Background}" BorderThickness="1">
                        <Border BorderBrush="Transparent" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
            Name="Bd" BorderThickness="1" Margin="{TemplateBinding Margin}"
								   ToolTip="{Binding Path=ItemToolTip, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=''}" CornerRadius="0" 
								   >
                            <!--<Border Name="InnerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" >-->
                            <DockPanel x:Name="PART_DockPanel" LastChildFill="True" Margin="2">
                                <ToggleButton Name="PART_CloseButton" Width="15" Height="14" Margin="1,2,3,0"
                                  VerticalAlignment="Top"
                                  DockPanel.Dock="Right" 
                                  Focusable="False" 
                                  Visibility="Collapsed"
							      Template="{StaticResource CloseButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.CloseTabItem"
                                  />
                                <Image x:Name="PART_Image"
					   Source="{TemplateBinding tools_controls:TabControlExt.Image}"
					   Height="{TemplateBinding tools_controls:TabControlExt.ImageHeight}"
					   Width="{TemplateBinding tools_controls:TabControlExt.ImageWidth}"
					   Stretch="Fill" Margin="{TemplateBinding IconMargin}"
					   SnapsToDevicePixels="True" VerticalAlignment="Center"
                       DockPanel.Dock="{Binding Path=(tools_controls:TabControlExt.ImageAlignment), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ImageAlignmentToDockConverter}}"/>
                                <ContentPresenter ContentSource="Header" x:Name="Content" Margin="{TemplateBinding HeaderMargin}" TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Transparent}"
                                          RecognizesAccessKey="False" Content="{TemplateBinding HeaderedContentControl.Header}" 
                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"                                           
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                <ContentPresenter    ContentSource="Header" x:Name="PART_EditHeader" Visibility="Collapsed"
                                          Margin="{TemplateBinding HeaderMargin}" TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Transparent}" 
                                          RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" 
                                          ContentTemplate="{Binding  EditHeaderTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}}}"                                           
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                            </DockPanel>
                            <!--</Border>-->
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="HeaderMargin" Value="12,9,12,8"/>
                            <Setter Property="IconMargin" Value="12,10,0,12"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter TargetName ="PART_CloseButton" Property="Width" Value="24"/>
                            <Setter TargetName ="PART_CloseButton" Property="Height" Value="24"/>
                            <Setter Property="VerticalAlignment" TargetName="PART_CloseButton" Value="Center" />
                        </Trigger>
                        <Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <!--<Trigger Property="tools_controls:TabControlExt.ImageHeight" Value="{StaticResource NanValue}">-->
                        <Trigger Property="tools_controls:TabControlExt.ImageHeight" Value="{x:Static sys:Double.NaN}">
                            <Setter TargetName="PART_Image" Property="Stretch" Value="Uniform" />
                        </Trigger>
                        <!--<Trigger Property="tools_controls:TabControlExt.ImageWidth" Value="{StaticResource NanValue}">-->
                        <Trigger Property="tools_controls:TabControlExt.ImageWidth" Value="{x:Static sys:Double.NaN}">
                            <Setter TargetName="PART_Image" Property="Stretch" Value="Uniform" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="tools_controls:TabControlExt.ImageHeight" Value="{x:Static sys:Double.NaN}" />
                                <Condition Property="tools_controls:TabControlExt.ImageWidth" Value="{x:Static sys:Double.NaN}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Image" Property="Stretch" Value="None" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}" />
                            <Setter Property="TextElement.FontWeight" TargetName="Content"	Value="{Binding Path=SelectedItemFontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=SemiBold}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="RootBorder" Value="0"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>

                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=SelectedIndex,RelativeSource={RelativeSource AncestorType={x:Type  tools_controls:TabControlExt}}}" Value="0"/>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderThickness" TargetName="RootBorder" Value="1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>

                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{StaticResource HoverForegroundBrush}" />

                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>

                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}" />
                            <Setter Property="TextElement.FontWeight" TargetName="Content"
						Value="{Binding Path=SelectedItemFontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=SemiBold}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                                <Condition Binding="{Binding Path=(shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                        </MultiDataTrigger>
                        <!--Initial section-->
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Both">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Individual">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="IndividualOnMouseOver">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="IndividualOnMouseOver"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended"/>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:TabControlExt.Image), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="UIElement.Visibility" TargetName="PART_Image" Value="Collapsed"/>
                        </DataTrigger>
                        <!--End Initial section-->
                        <!--RotateTextWhenVertical section-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="4,0,0,0" TargetName="PART_Image"/>
                            <Setter TargetName="PART_DockPanel" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="4,0,0,0" TargetName="PART_Image"/>
                            <Setter TargetName="PART_DockPanel" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End RotateTextWhenVertical section-->
                        <!--TabStripPlacement section-->
                        <DataTrigger Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Bottom">
                            <Setter Property="Border.BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                            <Setter Property="Margin" TargetName="Bd" Value="0"/>
                            <Setter Property="VerticalAlignment" Value="Stretch" TargetName="PART_DockPanel"/>
                            <Setter Property="VerticalAlignment" Value="Top" TargetName="PART_CloseButton"/>
                            <Setter Property="VerticalAlignment" Value="Center" TargetName="Content"/>
                            <Setter Property="VerticalAlignment" Value="Center" TargetName="PART_Image"/>
                            <Setter Property="Margin" Value="0,0,0,4" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="0,4,0,0" TargetName="PART_Image"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=(tools_controls:TabControlExt.ImageAlignment), RelativeSource={RelativeSource Self}}" Value="LeftOfText"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="8,0,0,0" TargetName="PART_Image"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Bd" Value="0"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="FlowDirection" Value="LeftToRight"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:TabControlExt.IsEditing), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Visibility" TargetName="PART_EditHeader" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Content" Value="Collapsed"/>
                        </DataTrigger>
                        <!--End TabStripPlacement section-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:TabControlExt.UseCustomEditableTemplate), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(tools_controls:TabControlExt.IsEditing), RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderTemplate" Value="{Binding Path=(tools_controls:TabControlExt.CustomEditableTemplate), RelativeSource={RelativeSource Self}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Margin" Value="0"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource AeroTabItemExtStyle}" TargetType="{x:Type tools_controls:TabItemExt}"/>


    <Style x:Key="AeroTabControlExtStyle" TargetType="{x:Type tools_controls:TabControlExt}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabPanelStyle" Value="{StaticResource TabPanelAdvStyle}" />
        <Setter Property="TabItemSelectedBackground" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="TabItemSelectedBorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
        <Setter Property="TabItemHoverBackground" Value="{StaticResource HoverBackgroundBrush}"/>
        <Setter Property="TabItemHoverBorderBrush" Value="{StaticResource HoverBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="TabItemSelectedForeground" Value="{StaticResource ActiveForegroundBrush}"/>
        <Setter Property="ScrollingButtonStyle" Value="{StaticResource TabScrollingButton}"/>
        <Setter Property="TabPanelBackground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="TabListContextMenuStyle"   Value="{StaticResource CustomContextMenu}"/>
        <Setter Property="TabListContextMenuItemStyle"  Value="{StaticResource CustomMenuItem}"/>
        <Setter Property="TextElement.Foreground" 
				Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="DragMarkerStyle" Value="{StaticResource VS2008DragMarkerStyle}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Left" VerticalAlignment="Top"   
                                                      
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,0,2,0"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                        </tools_controls:TabLayoutPanel>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder"                             
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                              Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource Aero.ContentPanelBorderCornerRadius}">
                                            <ContentPresenter Content="{TemplateBinding SelectedContent}" AllowDrop="True" 
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                          ContentSource="SelectedContent" Name="PART_SelectedContentHost" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Control.Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                        </Border>
                                    </Border>
                                </shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Bottom"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Left" VerticalAlignment="Top"                                              
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,0,2,0"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                        </tools_controls:TabLayoutPanel>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{StaticResource ContentBackgroundBrush}"
                            CornerRadius="{StaticResource Aero.ContentPanelBorderCornerRadius}">

                                            <Grid x:Name="PART_ContentHolder"  Margin="{TemplateBinding Control.Padding}" AllowDrop="True"  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                                        </Border>
                                    </Border>
                                </shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Bottom" />
                                        <Condition Property="FlowDirection" Value="RightToLeft" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Bottom"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=TabItemLayout, RelativeSource={RelativeSource Self}}" Value="SingleLine"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid" 
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   
                                                      
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabScrollViewer x:Name="PART_ScrollViewer" Margin="{Binding Margin,RelativeSource={RelativeSource FindAncestor,AncestorType=ContentPresenter}}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,2,2,-1"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                            </tools_controls:TabLayoutPanel>
                                        </tools_controls:TabScrollViewer>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{StaticResource ContentBackgroundBrush}"
                            CornerRadius="{StaticResource Aero.ContentPanelBorderCornerRadius}">
                                            <ContentPresenter Content="{TemplateBinding SelectedContent}" AllowDrop="True" 
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                          ContentSource="SelectedContent" Name="PART_SelectedContentHost" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Control.Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                        </Border>
                                    </Border>
                                </shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Stretch"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=TabItemLayout, RelativeSource={RelativeSource Self}}" Value="SingleLine"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                              
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabScrollViewer x:Name="PART_ScrollViewer" Margin="{Binding Margin,RelativeSource={RelativeSource FindAncestor,AncestorType=ContentPresenter}}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,2,2,-1"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                            </tools_controls:TabLayoutPanel>
                                        </tools_controls:TabScrollViewer>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{StaticResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource Aero.ContentPanelBorderCornerRadius}">

                                            <Grid x:Name="PART_ContentHolder"  Margin="{TemplateBinding Control.Padding}" AllowDrop="True"  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                                        </Border>
                                    </Border>
                                </shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Bottom" />
                                        <Condition Property="FlowDirection" Value="RightToLeft" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Stretch"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn ="{StaticResource AeroTabControlExtStyle}" TargetType="{x:Type tools_controls:TabControlExt}"/>

    <!--DocumentContainer-->

    <tools_controls:BoolToScrollBarVisibilityConverter x:Key="BoolToScrollBarVisibility" />
    <tools_controls:DocumentHeaderTrimmingTemplate x:Key="DocumentHeaderTrimmingTemplate" />
    <tools_controls:SizeToDoubleConverter x:Key="SizeToDoubleConverter"/>

    <tools_controls:ParentToBoolConverter x:Key="ParentToBool" />
    <tools_controls:TestConverter x:Key="TestConverter" />

    <DrawingBrush x:Key="brushMaximizeButtonNormalColorPressed" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ActiveGlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="brushCloseButtonWhite" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L9,8 M9,1 L1,8" Brush="{StaticResource ActiveForegroundBrush}" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource GlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMinimizeButtonWhite" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,7 L6,7 L6,8 L1,8 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource GlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="brushRestoreButtonGray" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup>
                    <GeometryDrawing Geometry="M3,2 L3,1 L7,1 L7,5 M7,5 L7,2 L3,2 L3,1">
                        <GeometryDrawing.Pen>
                            <Pen Brush="{StaticResource BorderBrush}" Thickness="1"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="M1,4 L5,4 L5,8 L1,8 z M1,5 L5,5">
                        <GeometryDrawing.Pen>
                            <Pen Brush="{StaticResource BorderBrush}" Thickness="1"/>
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushCloseButtonGray" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L9,8 M9,1 L1,8">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource BorderBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushRestoreButtonWhite" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M3,2 L3,1 L7,1 L7,5 M7,5 L7,2 L3,2 L3,1">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource GlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="M1,4 L5,4 L5,8 L1,8 z M1,5 L5,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource GlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMinimizeButtonBlack" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,7 L6,7 L6,8 L1,8 z" Brush="{StaticResource ContentForegroundBrush}">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ContentForegroundBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMaximizeButtonBlack" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ContentForegroundBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushRestoreButtonBlack" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M3,2 L3,1 L7,1 L7,5 M7,5 L7,2 L3,2 L3,1">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ContentForegroundBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="M1,4 L5,4 L5,8 L1,8 z M1,5 L5,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ContentForegroundBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushCloseButtonBlack" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L8,7 M8,1 L1,7">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ContentForegroundBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMinimizeButtonGray" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,7 L6,7 L6,8 L1,8 z" Brush="{StaticResource BorderBrush}">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource BorderBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="brushCloseButtonPressed" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L9,8 M9,1 L1,8" Brush="{StaticResource ActiveBackgroundBrush}" >
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ActiveGlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushRestoreButtonNormalColorPressed" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M3,2 L3,1 L7,1 L7,5 M7,5 L7,2 L3,2 L3,1">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ActiveGlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
                <GeometryDrawing Geometry="M1,4 L5,4 L5,8 L1,8 z M1,5 L5,5">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ActiveGlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMaximizeButtonGray" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource BorderBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMinimizeButtonNormalColorPressed" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,7 L6,7 L6,8 L1,8 z" Brush="{StaticResource ActiveBackgroundBrush}">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource ActiveGlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <DrawingBrush x:Key="brushMaximizeButtonWhite" AlignmentX="Center" AlignmentY="Center" TileMode="None" Stretch="None" ViewboxUnits="Absolute" Viewbox="0,0,10,10">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2">
                    <GeometryDrawing.Pen>
                        <Pen Brush="{StaticResource GlyphBrush}" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <CornerRadius x:Key="Default.HeaderCornerRadius" TopLeft="7" TopRight="7" BottomLeft="0" BottomRight="0"/>




    <CornerRadius x:Key="Default.HeaderButtonCornerRadius" TopLeft="2" TopRight="2" BottomLeft="2" BottomRight="2"/>



    <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />

    <!-- PreviewGenericVS2005 -->
    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="WrappBorder" Padding="2" SnapsToDevicePixels="True"
				BorderBrush="{Binding Path=ItemBorderBrush, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"
				BorderThickness="{Binding Path=ItemBorderThickness, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"
				CornerRadius="{Binding Path=ItemCornerRadius, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"
				Background="{StaticResource ContentBackgroundBrush}"
				Margin="2"
				>
                        <StackPanel Orientation="Horizontal" >
                            <Border Name="IconBorder" Background="{Binding Path=(tools_controls:DocumentContainer.Icon)}" Margin="1" Width="16"/>
                            <ContentPresenter Content="{Binding Path=(tools_controls:DocumentContainer.Header)}" Name="content"
								  ContentTemplate="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DocumentContainer.HeaderTemplate)
										, ElementName=WrappBorder}"
								  TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="WrappBorder" Property="BorderBrush"
						Value="{Binding Path=SelectedItemBorderBrush, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"/>
                            <Setter TargetName="WrappBorder" Property="BorderThickness"
						Value="{Binding Path=SelectedItemBorderThickness, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}
							}"/>
                            <Setter TargetName="WrappBorder" Property="Background"
						Value="{Binding Path=SelectedItemBackground, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="WrappBorder" Property="BorderBrush"
						Value="{Binding Path=SelectedItemBorderBrush, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"/>
                            <Setter TargetName="WrappBorder" Property="BorderThickness"
						Value="{Binding Path=SelectedItemBorderThickness, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}
							}"/>
                            <Setter TargetName="WrappBorder" Property="Background"
						Value="{Binding Path=SelectedItemBackground, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:VS2005SwitchPreviewControl}}}"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.VisualStyle" Value="ShinyRed">
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ContentForegroundBrush}" TargetName="content"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.VisualStyle" Value="ShinyBlue">
                            <Setter Property="TextBlock.Foreground" Value="{StaticResource ContentForegroundBrush}" TargetName="content"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ListBoxTemplate1" TargetType="{x:Type ListBox}" >
        <ScrollViewer Focusable="False" CanContentScroll="True" >
            <ItemsPresenter />
        </ScrollViewer>
    </ControlTemplate>

    <Style x:Key="{x:Type tools_controls:VS2005SwitchPreviewControl}" TargetType="{x:Type tools_controls:VS2005SwitchPreviewControl}" >
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="ItemBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="ItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="ItemCornerRadius" Value="0" />
        <Setter Property="ItemWidth" Value="0" />
        <Setter Property="ItemHeight" Value="0" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type tools_controls:VS2005SwitchPreviewControl}" >
                    <Border Background="{TemplateBinding Background}"
				BorderBrush="{StaticResource BorderBrush}"
				BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="115" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
						Grid.Row="1" Grid.ColumnSpan="2" Margin="2" >
                                <DockPanel>
                                    <shared:PreviewBorder Name="PART_PreviewBorder"
								BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
								Width="115" DockPanel.Dock="Right" Margin="2"
									/>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
								Margin="2" >
                                        <ContentControl Margin="12"
									Content="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DocumentContainer.DocumentDescription)
												, RelativeSource={RelativeSource Self}}"
									ContentTemplate="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DocumentContainer.DocumentDescriptionTemplate)
												, RelativeSource={RelativeSource Self}}"
												/>
                                    </Border>
                                </DockPanel>
                            </Border>
                            <DockPanel DockPanel.Dock="Left" Grid.Column="0" Margin="10,5,5,5" LastChildFill="True" >
                                <ContentControl  DockPanel.Dock="Top"
						Content="{Binding Path=(tools_controls:VS2005SwitchPreviewControl.ParentContainer).(tools_controls:DocumentContainer.ToolWindowsListHeader)
								   , RelativeSource={RelativeSource TemplatedParent}}"
						ContentTemplate="{Binding Path=(tools_controls:VS2005SwitchPreviewControl.ParentContainer).(tools_controls:DocumentContainer.ToolWindowsListHeaderTemplate)
								   , RelativeSource={RelativeSource TemplatedParent}}"
										/>
                                <ListBox Name="PART_ToolWindows" Template="{StaticResource ListBoxTemplate1}"
								 ItemContainerStyle="{StaticResource ListBoxItemStyle1}"
								  />
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Right" Grid.Column="1" Margin="5" LastChildFill="True" >
                                <ContentControl DockPanel.Dock="Top"
						Content="{Binding Path=(tools_controls:VS2005SwitchPreviewControl.ParentContainer).(tools_controls:DocumentContainer.DocumentListHeader)
								   , RelativeSource={RelativeSource TemplatedParent}}"
						ContentTemplate="{Binding Path=(tools_controls:VS2005SwitchPreviewControl.ParentContainer).(tools_controls:DocumentContainer.DocumentListHeaderTemplate)
								   , RelativeSource={RelativeSource TemplatedParent}}"
										/>
                                <ListBox Name="PART_ListBox" Template="{StaticResource ListBoxTemplate1}"
								 ItemContainerStyle="{StaticResource ListBoxItemStyle1}" />
                            </DockPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, 
						 AncestorType={x:Type Popup}}, Converter={StaticResource ParentToBool}}"  Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>

        </Style.Triggers>
    </Style>


    <!-- VistaFlipSwitchPreviewControl -->



    <Style x:Key="{x:Type tools_controls:VistaFlipSwitchPreviewControl}" TargetType="{x:Type tools_controls:VistaFlipSwitchPreviewControl}" >
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="ItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="ItemCornerRadius" Value="0" />
        <Setter Property="ItemWidth" Value="0" />
        <Setter Property="ItemHeight" Value="0" />
        <Setter Property="MinWidth" Value="550" />
    </Style>


    <!-- PreviewGenericQuickTab-->

    <Style x:Key="PoorHeaderButtonStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="Border" CornerRadius="2"
							BorderThickness="1" BorderBrush="{StaticResource BorderBrush}"
							Background="{StaticResource BackgroundBrush}"
							>
                        <ContentPresenter Margin="2" RecognizesAccessKey="True" Name="content"
										  HorizontalAlignment="Center" VerticalAlignment="Center"
										  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected
									 , RelativeSource={RelativeSource FindAncestor,
									 AncestorType={x:Type tools_controls:ItemWindow}}}"
									 Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="{x:Type tools_controls:ItemHeader}" TargetType="{x:Type tools_controls:ItemHeader}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:ItemHeader}">
                    <DockPanel Height="18" Margin="0,0,0,2" Width="{TemplateBinding ActualWidth}" 
				   >
                        <ContentControl Name="PART_Button" DockPanel.Dock="Right" Margin="2,2,2,2"
                    Visibility="{Binding Path=CloseButtonVisible, RelativeSource={RelativeSource FindAncestor,
									 AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}
									 , Converter={StaticResource BooleanToVisibility}}"
                    Style="{StaticResource PoorHeaderButtonStyle}">
                            <Path Width="11" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
					  SnapsToDevicePixels="True" Data="M2,1 L9,7 M9,1 L2,7"
                      Fill="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                      Stroke="{Binding Path=(TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
					  StrokeThickness="1" />
                        </ContentControl>
                        <TextBlock DockPanel.Dock="Left" Text="{Binding Path=(tools_controls:DocumentContainer.Header)}"
					   Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis"
				/>
                    </DockPanel>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type tools_controls:ItemWindow}" TargetType="{x:Type tools_controls:ItemWindow}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>

        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:ItemWindow}">
                    <Border Name="WrappBorder" Padding="2" SnapsToDevicePixels="True"
				BorderBrush="{Binding Path=ItemBorderBrush, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"
				BorderThickness="{Binding Path=ItemBorderThickness, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"
				CornerRadius="{Binding Path=ItemCornerRadius, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"
				Margin="2"
				>
                        <DockPanel LastChildFill="True">
                            <tools_controls:ItemHeader Name="PART_Header" DockPanel.Dock="Top" />
                            <Microsoft_Windows_Luna:SystemDropShadowChrome Margin="5,0,5,5" SnapsToDevicePixels="True" >
                                <Border BorderThickness="1" Name="bd" BorderBrush="{StaticResource ContentBorderBrush}"  
							Background="{StaticResource ContentBackgroundBrush}" >
                                    <shared:PreviewBorder Name="PART_PreviewBorder" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" />
                                </Border>
                            </Microsoft_Windows_Luna:SystemDropShadowChrome>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="WrappBorder" Property="Background"
						Value="{Binding Path=SelectedItemBackground, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"/>
                            <Setter TargetName="WrappBorder" Property="BorderBrush"
						Value="{Binding Path=SelectedItemBorderBrush, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"/>
                            <Setter TargetName="WrappBorder" Property="BorderThickness"
						Value="{Binding Path=SelectedItemBorderThickness, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:QuickTabSwicthPreviewControl}}}"/>
                        </Trigger>
                        <Trigger Property="shared:SkinStorage.VisualStyle" Value="SyncOrange">
                            <Setter TargetName="bd" Property="BorderBrush"  Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="PART_PreviewBorder" Property="BorderBrush"  Value="{StaticResource BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type tools_controls:QuickTabSwicthPreviewControl}" TargetType="{x:Type tools_controls:QuickTabSwicthPreviewControl}" >
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="ItemBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="ItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="ItemCornerRadius" Value="0" />
        <Setter Property="ItemWidth" Value="0" />
        <Setter Property="ItemHeight" Value="0" />
        <Setter Property="MaxWidth" Value="550" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:QuickTabSwicthPreviewControl}" >
                    <Border Background="{TemplateBinding Background}"
				BorderBrush="{StaticResource BorderBrush}"
				BorderThickness="1">
                        <tools_controls:Gallery AllowMultiSelect="False" IsHeaderVisible="False"
                           PanelMargin="0"
                           PanelPadding="0"                          
						   AllowDrop="False" Focusable="False"
						   PanelMouseOverBorderBrush="{StaticResource HoverBorderBrush}"
						   ItemHeight="85" ItemWidth="75"
						   ItemMaxHeight="85"	ItemMaxWidth="75"
						   ItemMinHeight="85" ItemMinWidth="75"
						   >
                            <tools_controls:GalleryGroup Name="PART_GalleryGroup" Focusable="False" />
                        </tools_controls:Gallery>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, 
						 AncestorType={x:Type Popup}}, Converter={StaticResource ParentToBool}}"  Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <DataTemplate x:Key="HeaderDataTemplate" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBlock Focusable="False" Text="{Binding}" TextTrimming="CharacterEllipsis" 
				   IsHitTestVisible="False" Padding="4,0,4,1"
				   />
    </DataTemplate>

    <DataTemplate x:Key="EditableDataTemplate" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBox x:Name="EditableHeader" Focusable="True" Style="{Binding Path=EditModeDocumentTabHeaderStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"
				 Text="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}}, Mode=TwoWay}"  
				 IsReadOnly="False" Padding="4,1,4,1"
				 />
    </DataTemplate>

    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <shared:Border3D
            Name="Border"
            BorderThickness="1,1,1,1"
            CornerRadius="2,2,2,2"
            BorderBrush="{TemplateBinding BorderBrush}"
            Background="{TemplateBinding Background}">
            <ContentPresenter SnapsToDevicePixels="True" Content="{TemplateBinding Content}" Name="Content"/>
        </shared:Border3D>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="IsInverted" Value="True"/>
                <Setter TargetName="Content" Property="Margin" Value="1,1,-1,-1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="HeaderClassicButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource HeaderButtonTemplate}"/>
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="HeaderThemedCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource HeaderClassicButtonStyle}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="False" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource SelectionInActiveBrush}"/>
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter Property="Background" Value="{StaticResource ActiveBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderThemedButtonStyle" TargetType="{x:Type Button}"
            BasedOn="{StaticResource HeaderClassicButtonStyle}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="False" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource SelectionInActiveBrush}"/>
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type tools_controls:DocumentHeader}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
        <Setter Property="Border.CornerRadius" Value="7,7,0,0"/>
        <Setter Property="CloseButtonStyle" Value="{StaticResource HeaderThemedCloseButtonStyle}"/>
        <Setter Property="MaximizeButtonStyle" Value="{StaticResource HeaderThemedButtonStyle}"/>
        <Setter Property="MinimizeButtonStyle" Value="{StaticResource HeaderThemedButtonStyle}"/>
        <Setter Property="RestoreButtonStyle" Value="{StaticResource HeaderThemedButtonStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:DocumentHeader}">
                    <shared:Border3D Name="Border" 
                         Padding="{TemplateBinding Padding}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         CornerRadius="{TemplateBinding Border.CornerRadius}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         Background="{TemplateBinding Background}"
						 >
                        <DockPanel LastChildFill="True" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Button Name="btnClose" DockPanel.Dock="Right" Margin="2,2,2,2"
                    Visibility="{tools_controls:ContainerButtonVisibility}"
                    Command="{x:Static tools_controls:DocumentContainer.HideDocumentCommand}"
                    CommandTarget="{tools_controls:FindWindow}"
                    Style="{TemplateBinding CloseButtonStyle}">
                                <Border Name="btnCloseBorder" Height="10" Width="10" SnapsToDevicePixels="True">
                                    <shared:DrawingHelper Name="btnCloseHelper" DrawingBrush="{StaticResource brushCloseButtonWhite}" />
                                </Border>
                            </Button>
                            <Button Name="btnMaximize" DockPanel.Dock="Right" Margin="0,2,0,2"
                    Visibility="{tools_controls:ContainerButtonVisibility}"
                    Command="{x:Static tools_controls:DocumentContainer.MaximizeDocumentCommand}"
                    CommandTarget="{tools_controls:FindWindow}"
                    Style="{TemplateBinding MaximizeButtonStyle}">
                                <Border Name="btnMaximizeBorder" Height="10" Width="10" SnapsToDevicePixels="True">
                                    <shared:DrawingHelper Name="btnMaximizeHelper" DrawingBrush="{StaticResource brushMaximizeButtonWhite}" />
                                </Border>
                            </Button>
                            <Button Name="btnRestore" DockPanel.Dock="Right" Margin="0,2,0,2"
						Visibility="Collapsed"
						Command="{x:Static tools_controls:DocumentContainer.RestoreDocumentCommand}"
						CommandTarget="{tools_controls:FindWindow}"
						Style="{TemplateBinding RestoreButtonStyle}" >
                                <Border Name="btnRestoreBorder" Height="10" Width="10" SnapsToDevicePixels="True">
                                    <shared:DrawingHelper Name="btnRestoreHelper" DrawingBrush="{StaticResource brushRestoreButtonWhite}" />
                                </Border>
                            </Button>
                            <Button Name="btnMinimize" DockPanel.Dock="Right" Margin="2,2,0,2"
                    Visibility="{tools_controls:ContainerButtonVisibility}"
                    Command="{x:Static tools_controls:DocumentContainer.MinimizeDocumentCommand}"
                    CommandTarget="{tools_controls:FindWindow}"
                    Style="{TemplateBinding MinimizeButtonStyle}">
                                <Border Name="btnMinimizeBorder" Height="10" Width="10" SnapsToDevicePixels="True">
                                    <shared:DrawingHelper Name="btnMinimizeHelper" DrawingBrush="{StaticResource brushMinimizeButtonWhite}" />
                                </Border>
                            </Button>
                            <Border Name="IconBorder"  Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                        Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverter}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"
							           DockPanel.Dock="Left" Background="{TemplateBinding Icon}" Margin="1" />
                            <ContentPresenter Content="{TemplateBinding Header}" Name="content"
							  ContentTemplate="{TemplateBinding HeaderTemplate}"
							  VerticalAlignment="Center"
							  TextBlock.Foreground="{TemplateBinding Foreground}"
							  ContentTemplateSelector="{StaticResource DocumentHeaderTrimmingTemplate}"
									  />
                        </DockPanel>

                    </shared:Border3D>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="False">
                            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HeaderForegroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}"/>
                            <Setter Property="Style" TargetName="btnClose" Value="{StaticResource HeaderThemedCloseButtonStyle}"/>
                            <Setter Property="Style" TargetName="btnMaximize" Value="{StaticResource HeaderThemedButtonStyle}"/>
                            <Setter Property="Style" TargetName="btnMinimize" Value="{StaticResource HeaderThemedButtonStyle}"/>
                            <Setter Property="Style" TargetName="btnRestore" Value="{StaticResource HeaderThemedButtonStyle}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=IconBorder, Path=(tools_controls:DocumentContainer.Icon)}" Value="{x:Null}">
                            <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Content.(tools_controls:DocumentContainer.MDIWindowState),
					 RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="Minimized" >
                            <Setter TargetName="btnMinimize" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="btnRestore" Property="Visibility" Value="{tools_controls:ContainerButtonVisibility}" />
                            <Setter	TargetName="btnMinimizeHelper" Property="Margin" Value="0, 1, 0, 0" />
                            <Setter	TargetName="btnMaximizeHelper" Property="Margin" Value="0, 1, 0, 0" />
                            <Setter	TargetName="btnRestoreHelper" Property="Margin" Value="0, 1, 0, 0" />
                            <Setter	TargetName="btnCloseHelper" Property="Margin" Value="0, 1, 0, 0" />
                        </DataTrigger>

                        <!--btnMinimize-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, ElementName=btnMinimize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="btnMinimizeHelper" Property="DrawingBrush" Value="{StaticResource brushMinimizeButtonWhite}"/>
                        </MultiDataTrigger>
                        <Trigger SourceName="btnMinimize" Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnMinimize" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="btnMinimize" Property="Border.BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="btnMinimizeHelper" Property="DrawingBrush" Value="{StaticResource brushMinimizeButtonBlack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btnMinimize" Property="IsEnabled" Value="True"/>
                                <Condition SourceName="btnMinimize" Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnMinimizeHelper" Property="DrawingBrush" Value="{StaticResource brushMinimizeButtonBlack}"/>
                            <Setter TargetName="btnMinimize" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="btnMinimize" Property="Border.BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger SourceName="btnMinimize" Property="IsEnabled" Value="False">
                            <Setter TargetName="btnMinimizeHelper" Property="DrawingBrush" Value="{StaticResource brushMinimizeButtonGray}"/>
                        </Trigger>

                        <!--btnMaximize-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, ElementName=btnMaximize}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="btnMaximizeHelper" Property="DrawingBrush" Value="{StaticResource brushMaximizeButtonWhite}"/>
                        </MultiDataTrigger>
                        <Trigger SourceName="btnMaximize" Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnMaximize" Property="Border.BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="btnMaximize" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="btnMaximizeHelper" Property="DrawingBrush" Value="{StaticResource brushMaximizeButtonBlack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btnMaximize" Property="IsEnabled" Value="True"/>
                                <Condition SourceName="btnMaximize" Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnMaximize" Property="Border.BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="btnMaximize" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="btnMaximizeHelper" Property="DrawingBrush" Value="{StaticResource brushMaximizeButtonNormalColorPressed}"/>
                        </MultiTrigger>
                        <Trigger SourceName="btnMaximize" Property="IsEnabled" Value="False">
                            <Setter TargetName="btnMaximizeHelper" Property="DrawingBrush" Value="{StaticResource brushMaximizeButtonGray}"/>
                        </Trigger>
                        <!--btnRestore-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, ElementName=btnRestore}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="btnRestoreHelper" Property="DrawingBrush" Value="{StaticResource brushRestoreButtonWhite}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" SourceName="btnRestore" Value="True">
                            <Setter TargetName="btnRestore" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                            <Setter TargetName="btnRestore" Property="Border.BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="btnRestoreHelper" Property="DrawingBrush" Value="{StaticResource brushRestoreButtonBlack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btnRestore" Property="IsEnabled" Value="True"/>
                                <Condition SourceName="btnRestore" Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnRestoreHelper" Property="DrawingBrush" Value="{StaticResource brushRestoreButtonNormalColorPressed}"/>
                            <Setter TargetName="btnRestore" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="btnRestore" Property="Border.BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger SourceName="btnRestore" Property="IsEnabled" Value="False">
                            <Setter TargetName="btnRestoreHelper" Property="DrawingBrush" Value="{StaticResource brushRestoreButtonGray}"/>
                        </Trigger>
                        <!--btnClose-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, ElementName=btnClose}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="btnCloseHelper" Property="DrawingBrush" Value="{StaticResource brushCloseButtonWhite}"/>
                        </MultiDataTrigger>
                        <Trigger SourceName="btnClose" Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnCloseHelper" Property="DrawingBrush" Value="{StaticResource brushCloseButtonBlack}"/>
                            <Setter TargetName="btnClose" Property="Border.BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="btnClose" Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="btnClose" Property="IsEnabled" Value="True"/>
                                <Condition SourceName="btnClose" Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="btnCloseHelper" Property="DrawingBrush" Value="{StaticResource brushCloseButtonBlack}"/>
                            <Setter TargetName="btnClose" Property="Border.BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="btnClose" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                        </MultiTrigger>
                        <Trigger SourceName="btnClose" Property="IsEnabled" Value="False">
                            <Setter TargetName="btnCloseHelper" Property="DrawingBrush" Value="{StaticResource brushCloseButtonGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Icon" Value="{Binding Path=(tools_controls:DocumentContainer.Icon)}"/>
        <Setter Property="Header" Value="{Binding Path=(tools_controls:DocumentContainer.Header)}"/>
        <Setter Property="HeaderTemplate" Value="{Binding Path=(tools_controls:MDIWindow.Content).(tools_controls:DocumentContainer.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}"/>
    </Style>

    <DataTemplate x:Key="DragDropTempl" >
        <shared:PreviewBorder DataContext="{TemplateBinding ContentControl.Content}" />
    </DataTemplate>

    <Style TargetType="{x:Type tools_controls:DocumentContainer}">
        <Setter Property="BorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MenuItemsPanelTemplate" Value="{Binding Path=DefaultMenuItemsPanelTemplate, RelativeSource={RelativeSource Self}}" />

        <Setter Property="DragDropTemplate" Value="{StaticResource DragDropTempl}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:DocumentContainer}" >
                    <Border Name="Border"  Focusable="False"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Background="{TemplateBinding Background}"
                ClipToBounds="True">
                        <Grid>
                            <DockPanel Name="Panel" LastChildFill="True">
                                <ScrollViewer Name="Viewer" Focusable="False" HorizontalScrollBarVisibility="{TemplateBinding IsEnabledScroll, Converter={StaticResource BoolToScrollBarVisibility}}" VerticalScrollBarVisibility="{TemplateBinding IsEnabledScroll, Converter={StaticResource BoolToScrollBarVisibility}}">
                                    <tools_controls:MDILayoutPanel x:Name="PART_Layouter" ClipToBounds="True" />
                                </ScrollViewer>
                            </DockPanel>
                            <tools_controls:VistaFlipSwitchPreviewControl Name="PART_VistaFlip" Visibility="Collapsed" Background="{TemplateBinding Background}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_VistaFlip" Property="Visibility" Value="Visible" >
                            <Setter TargetName="PART_Layouter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Mode" Value="TDI">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:DocumentContainer}" >
                            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"	CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}"	ClipToBounds="True">
                                <Grid>
                                    <tools_controls:TDILayoutPanel x:Name="PART_TabControl" />
                                    <tools_controls:VistaFlipSwitchPreviewControl Name="PART_VistaFlip" Visibility="Collapsed" Background="{TemplateBinding Background}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger SourceName="PART_VistaFlip" Property="Visibility" Value="Visible" >
                                    <Setter TargetName="PART_TabControl" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Mode" Value="MDI"/>
                    <Condition Property="IsInMDIMaximizedState" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="MenuItemsPanelTemplate" >
                    <Setter.Value>
                        <ItemsPanelTemplate >
                            <tools_controls:CustomWrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type tools_controls:MDIWindow}">

        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="CornerRadius" Value="7,7,0,0"/>
        <Setter Property="Padding" Value="2,2,2,2"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="MinWidth" Value="62"/>
        <Setter Property="tools_controls:MDIWindow.HeaderBrush" Value="{StaticResource HeaderBackgroundBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:MDIWindow}" >
                    <Microsoft_Windows_Luna:SystemDropShadowChrome SnapsToDevicePixels="True" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" CornerRadius="{TemplateBinding CornerRadius}">
                        <shared:Border3D Name="Border3D"
                         Padding="{TemplateBinding Padding}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         BorderBrush="{StaticResource ActiveBorderBrush}"
						 CornerRadius="{TemplateBinding CornerRadius}"
                         Background="{StaticResource ActiveBackgroundBrush}"
						 tools_controls:DocumentContainerHelper.IsMDIBorder="True"
						 >
                            <DockPanel Name="WrapDockPanel" LastChildFill="True">
                                <tools_controls:DocumentHeader Name="PART_DocumentHeader" DockPanel.Dock="Top"
                                          FocusManager.IsFocusScope="True"   
                                          DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}"
                                          ContextMenuService.PlacementTarget="{tools_controls:FindWindow}"
                                          Margin="0, 0, 0, 1"
                                          tools_controls:DocumentContainerHelper.IsMDIHeader="True"
                                          >
                                    <tools_controls:DocumentHeader.ContextMenu>
                                        <tools_controls:DocumentContextMenu Name="documentContextMenu"
                                                       Padding="0, 2, 0, 2" 
													   Background="{StaticResource BackgroundBrush}"
                                                       />
                                    </tools_controls:DocumentHeader.ContextMenu>
                                </tools_controls:DocumentHeader>
                                <AdornerDecorator Name="WrapAdorner">
                                    <Border BorderBrush="{StaticResource BorderBrush}" Background="{StaticResource BackgroundBrush}" BorderThickness="1">
                                        <Grid Name="grid" Background="{StaticResource ContentBackgroundBrush}" >
                                            <ContentPresenter Name="PART_ContentPresenter" 
                                                         ContentTemplateSelector="{Binding Path=ContentTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" 
                                                         ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" 
                                                         ContentSource="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" 
                                                         Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:MDIWindow}}}" Margin="1" KeyboardNavigation.TabNavigation="Cycle"  
                                                         />
                                            <Border Name="PART_CoverletControl" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                </AdornerDecorator>
                            </DockPanel>
                        </shared:Border3D>
                    </Microsoft_Windows_Luna:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsInMDIMaximizedState, 
					RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:DocumentContainer}}}" Value="True">
                            <Setter Property="Visibility" TargetName="PART_DocumentHeader" Value="Collapsed" />
                            <Setter Property="BorderThickness" TargetName="Border3D" Value="0,0,0,0" />
                            <Setter Property="Padding" TargetName="Border3D" Value="0" />
                            <Setter Property="Margin" TargetName="Border3D" Value="-2" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding tools_controls:DocumentContainer.MDIWindowState}" Value="Minimized" >
                            <Setter Property="tools_controls:DocumentContainer.AllowMDIResize" Value="False"/>
                            <Setter TargetName="Border3D" Property="Padding" Value="2,2,2,2" />
                            <Setter TargetName="Border3D" Property="BorderThickness" Value="0.3" />
                            <Setter TargetName="WrapAdorner" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_DocumentHeader" Property="ContextMenuService.Placement" Value="Top" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=UseInteropCompatibility
							   , RelativeSource={RelativeSource FindAncestor
								, AncestorType={x:Type tools_controls:DocumentContainer}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=HasHwndHost,RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Path=(shared:SkinStorage.VisualStyle), RelativeSource={RelativeSource FindAncestor
								, AncestorType={x:Type tools_controls:DocumentContainer}}}"
						      Value="Default" />
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border3D" Value="{StaticResource SelectionInActiveBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition  Binding="{Binding Path=(shared:SkinStorage.VisualStyle), RelativeSource={RelativeSource FindAncestor
								, AncestorType={x:Type tools_controls:DocumentContainer}}}"
						      Value="Default" />
                                <Condition Binding="{Binding Path=IsActive, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Border3D" Value="{StaticResource BorderBrush}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                <Setter Property="HeaderBrush" Value="{StaticResource HeaderBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ActiveForegroundBrush}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--<Style x:Key="MoveMDIAdornerBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="Template" Value="{StaticResource WindowMovingClassicAdorner}"/>
    </Style>-->


    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}" >
                    <Border SnapsToDevicePixels="True"
                Background="{StaticResource ContentBackgroundBrush}" >
                        <Grid ShowGridLines="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="26" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border Name="iconBorder"
                        BorderThickness="0, 0, 1, 0"
                        Grid.Column="0"
                        SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        Background="{StaticResource ContentBackgroundBrush}" />
                            <Border Name="backBorder"
                        CornerRadius="4 "
                        BorderThickness="1"
                        Margin="2, 0, 2, 0"
                        SnapsToDevicePixels="True"
                        Grid.ColumnSpan="4"
                        BorderBrush="{StaticResource BorderBrush}"
                        Background="Transparent" />
                            <ContentPresenter ContentSource="Icon"
                                  Name="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Margin="0, 2, 0, 0"
                                  Content="{TemplateBinding MenuItem.Icon}" />
                            <Border Name="GlyphBorder"
                        Grid.Column="0"
                        Visibility="Hidden"
                        HorizontalAlignment="Left"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Width="20"
                        Background="{StaticResource GlyphBrush}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BorderBrush}"
                        Height="20">
                                <Path Stretch="Fill"
                          Stroke="{StaticResource GlyphBrush}"
                          HorizontalAlignment="Center"
                          Margin="0"
                          VerticalAlignment="Center"
                          Width="7.5"
                          Height="5.875"
                          Data="M5.375,11.125 L7.75,13.25 11.875,8.375"/>
                            </Border>
                            <ContentPresenter ContentSource="Header"
                                  Grid.Column="1"
                                  Margin="4, 2, 4, 2"
                                  Name="Header"
                                  TextBlock.Foreground="{StaticResource ForegroundBrush}" />
                            <TextBlock Name="IGT" Margin="5,2,0,2"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Grid.Column="2" DockPanel.Dock="Right"
						   Foreground="{StaticResource ForegroundBrush}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="MenuItem.IsHighlighted" Value="True">
                            <Setter TargetName="iconBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="iconBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="backBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="backBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Header" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter TargetName="IGT" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter TargetName="GlyphBorder" Property="Background" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter TargetName="GlyphBorder" Property="BorderBrush" Value="{StaticResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsChecked" Value="True">
                            <Setter TargetName="GlyphBorder" Property="UIElement.Visibility" Value="{x:Static Visibility.Visible}"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="Header" Property="TextBlock.Foreground" Value="Gray" />
				<Setter TargetName="IGT" Property="TextBlock.Foreground" Value="Gray" />-->
                            <Setter TargetName="Header" Property="Opacity" Value="0.5" />
                            <Setter TargetName="IGT" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TDISeparatorTemplate" TargetType="{x:Type Separator}" >
        <Border
            Margin="0, -2, 0, -2"
            SnapsToDevicePixels="True"
            Background="{StaticResource BackgroundBrush}">
            <Grid ShowGridLines="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Name="iconBorder"
                        BorderThickness="0, 0, 1, 0"
                        Grid.Column="0"
                        SnapsToDevicePixels="True" />
                <Border Name="lineBorder"
                        BorderThickness="0.5"
                        Grid.Column="1"
                        Height="1"
                        Margin="3, 2, 2, 2"
                        SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource BorderBrush}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}" >
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}" >
                    <Border Margin="0,-2,0,-2" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <Grid ShowGridLines="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Name="iconBorder" BorderThickness="0, 0, 1, 0"
                        Grid.Column="0" SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource BorderBrush}"
                        Background="{TemplateBinding Background}" />
                            <Border Name="lineBorder"
                        BorderThickness="0.5" 
						Grid.Column="1" Height="1" Margin="5, 2, 2, 2"
                        SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource BorderBrush}" />
                        </Grid>
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>



    <Style  TargetType="{x:Type tools_controls:DocumentContextMenu}">
        <Setter Property="CustomItemStyle" Value="{StaticResource MenuItemStyle}" />
        <Setter Property="CustomSeparatorStyle" Value="{StaticResource SeparatorStyle}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:DocumentContextMenu}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource BorderBrush}"
				Background="{TemplateBinding Background}" >
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>

            </Setter.Value>
        </Setter>

    </Style>
    <ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}" >
        <Border SnapsToDevicePixels="True" Name="bd" Padding="1,1,1,1" 
                BorderBrush="{StaticResource BorderBrush}" 
                BorderThickness="1">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False" >
                <DockPanel LastChildFill="True" >
                    <Border BorderThickness="1" Name="border" BorderBrush="{StaticResource BorderBrush}" DockPanel.Dock="Right">
                        <tools_controls:TrackContainer VerticalAlignment="Center">
                            <shared:PreviewBorder Name="PART_PreviewBorder"
											  BorderBrush="{StaticResource BorderBrush}" BorderThickness="1"
											  Width="75" Height="75" />
                        </tools_controls:TrackContainer>
                    </Border>
                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </DockPanel>
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="{StaticResource ContentBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="WrappBorder" Padding="2" SnapsToDevicePixels="True"
				BorderBrush="{Binding Path=ItemBorderBrush, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:ListSwicthPreviewControl}}}"
				BorderThickness="{Binding Path=ItemBorderThickness, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:ListSwicthPreviewControl}}}"
				CornerRadius="{Binding Path=ItemCornerRadius, RelativeSource={RelativeSource FindAncestor
					, AncestorType={x:Type tools_controls:ListSwicthPreviewControl}}}"
				Background="{TemplateBinding Background}"
				Margin="2"
				>
                        <StackPanel Orientation="Horizontal" >
                            <Border Name="IconBorder" Background="{Binding Path=(tools_controls:DocumentContainer.Icon), Converter={StaticResource TestConverter}}" Margin="1" Width="16"/>
                            <ContentPresenter Content="{Binding Path=(tools_controls:DocumentContainer.Header)}" Name="content"
								  ContentTemplate="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DocumentContainer.HeaderTemplate)
										, ElementName=WrappBorder}"
								  TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="WrappBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}" />
                            <Setter TargetName="WrappBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter TargetName="WrappBorder" Property="BorderThickness"
						Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="WrappBorder" Property="BorderBrush"
						Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="WrappBorder" Property="BorderThickness"
						Value="{Binding Path=SelectedItemBorderThickness, RelativeSource={RelativeSource FindAncestor
							, AncestorType={x:Type tools_controls:ListSwicthPreviewControl}}
							}"/>
                            <!--, diagnostics:PresentationTraceSources.TraceLevel=High-->
                            <Setter TargetName="WrappBorder" Property="Background"
						Value="{StaticResource ActiveBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type tools_controls:ListSwicthPreviewControl}" TargetType="{x:Type tools_controls:ListSwicthPreviewControl}" >
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="ItemBorderBrush" Value="{StaticResource ContentBorderBrush}" />
        <Setter Property="ItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="SelectedItemBorderThickness" Value="1" />
        <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
        <Setter Property="ItemCornerRadius" Value="0" />
        <Setter Property="ItemWidth" Value="0" />
        <Setter Property="ItemHeight" Value="0" />
        <Setter Property="MinWidth" Value="550" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:ListSwicthPreviewControl}" >
                    <Border Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
			>
                        <ListBox Name="PART_ListBox"
					Template="{StaticResource ListBoxTemplate}"
					ItemContainerStyle="{StaticResource ListBoxItemStyle}"
				/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, 
						 AncestorType={x:Type Popup}}, Converter={StaticResource ParentToBool}}"  Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="SelectedItemBorderBrush" Value="{StaticResource ActiveBorderBrush}" />
                <Setter Property="SelectedItemBackground" Value="{StaticResource ActiveBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type tools_controls:CornerPanel}" TargetType="{x:Type tools_controls:CornerPanel}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:CornerPanel}">
                    <StackPanel Orientation="Horizontal" >
                        <Button Name="btnMinimize" DockPanel.Dock="Right" Margin="2,2,0,2"
					Command="{x:Static tools_controls:DocumentContainer.MinimizeDocumentCommand}"
					CommandTarget="{tools_controls:FindWindow}"
					>
                            <Border Name="btnMinimizeBorder" Height="10" Width="10" SnapsToDevicePixels="True"
						Background="{StaticResource brushMinimizeButtonBlack}"
						/>
                        </Button>
                        <Button Name="btnRestore" DockPanel.Dock="Right" Margin="0,2,0,2"
					Command="{x:Static tools_controls:DocumentContainer.RestoreDocumentCommand}"
					CommandTarget="{tools_controls:FindWindow}"
					>
                            <Border Name="btnRestoreBorder" Height="10" Width="10" SnapsToDevicePixels="True"
						Background="{StaticResource brushRestoreButtonBlack}"
						/>
                        </Button>
                        <Button Name="btnClose" DockPanel.Dock="Right" Margin="2,2,2,2"
					Command="{x:Static tools_controls:DocumentContainer.HideDocumentCommand}"
					CommandTarget="{tools_controls:FindWindow}"
					>
                            <Border Name="btnCloseBorder" Height="10" Width="10" SnapsToDevicePixels="True"
						Background="{StaticResource brushCloseButtonBlack}" />
                        </Button>
                    </StackPanel>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--Style CutawayAdorner-->

    <Style x:Key="{x:Type tools_controls:DocMenuItem}" TargetType="{x:Type tools_controls:DocMenuItem}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:DocMenuItem}" >
                    <Border SnapsToDevicePixels="True"
                Background="{StaticResource ContentBackgroundBrush}" >
                        <Grid ShowGridLines="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="26" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border Name="iconBorder"
                        BorderThickness="0, 0, 1, 0"
                        Grid.Column="0"
                        SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource BorderBrush}"
                        Background="{StaticResource BackgroundBrush}" />
                            <Border Name="backBorder"
                        CornerRadius="4 "
                        BorderThickness="1"
                        Margin="2, 0, 2, 0"
                        SnapsToDevicePixels="True"
                        Grid.ColumnSpan="4"
                        BorderBrush="{StaticResource BorderBrush}"
                        Background="Transparent" />
                            <Border Name="Icon" Height="10" Width="10" SnapsToDevicePixels="True" 
						VerticalAlignment="Center" HorizontalAlignment="Center"
						Margin="0, 2, 0, 0"
						>
                                <shared:DrawingHelper Name="mnuHelper" DrawingBrush="{TemplateBinding IconBrush}" />
                            </Border>
                            <Border Name="GlyphBorder"
                        Grid.Column="0"
                        Visibility="Hidden"
                        HorizontalAlignment="Left"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Width="20"
                        Background="{StaticResource GlyphBrush}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource BorderBrush}"
                        Height="20">
                                <Path Stretch="Fill"
                          Stroke="{StaticResource GlyphBrush}"
                          HorizontalAlignment="Center"
                          Margin="0"
                          VerticalAlignment="Center"
                          Width="7.5"
                          Height="5.875"
                          Data="M5.375,11.125 L7.75,13.25 11.875,8.375"/>
                            </Border>
                            <ContentPresenter ContentSource="Header"
                                  Grid.Column="1"
                                  Margin="6, 2, 4, 2"
                                  Name="Header"
                                  TextBlock.Foreground="{StaticResource ForegroundBrush}" />
                            <TextBlock Name="IGT" Margin="5,2,0,2"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Grid.Column="2" DockPanel.Dock="Right"
						   Foreground="{StaticResource ForegroundBrush}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="iconBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="iconBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="backBorder" Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}"/>
                            <Setter TargetName="backBorder" Property="Background" Value="{StaticResource ActiveBackgroundBrush}"/>
                            <Setter TargetName="Header" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter TargetName="IGT" Property="TextBlock.Foreground" Value="{StaticResource ActiveForegroundBrush}" />
                            <Setter TargetName="GlyphBorder" Property="Background" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter TargetName="GlyphBorder" Property="BorderBrush" Value="{StaticResource ActiveGlyphBrush}"/>
                            <Setter TargetName="mnuHelper" Property="DrawingBrush"
						Value="{Binding Path=ActiveIconBrush
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DocMenuItem}}}"/>
                        </Trigger>
                        <Trigger Property="MenuItem.IsChecked" Value="True">
                            <Setter TargetName="GlyphBorder" Property="UIElement.Visibility" Value="{x:Static Visibility.Visible}"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Header" Property="Opacity" Value="0.5" />
                            <Setter TargetName="IGT" Property="Opacity" Value="0.5" />
                            <Setter TargetName="mnuHelper" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
